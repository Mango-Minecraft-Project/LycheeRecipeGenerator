import{r as O,c as ae}from"./index.179573f2.js";function tt(o,e){for(var t=0;t<e.length;t++){const r=e[t];if(typeof r!="string"&&!Array.isArray(r)){for(const a in r)if(a!=="default"&&!(a in o)){const n=Object.getOwnPropertyDescriptor(r,a);n&&Object.defineProperty(o,a,n.get?n:{enumerable:!0,get:()=>r[a]})}}}return Object.freeze(Object.defineProperty(o,Symbol.toStringTag,{value:"Module"}))}var H={},_e={};Object.defineProperty(_e,"__esModule",{value:!0});_e.initCollections=void 0;function rt(o){o.register("lychee_recipe_serializer",["lychee:block_interacting","lychee:block_clicking","lychee:item_burning","lychee:item_inside","lychee:anvil_crafting","lychee:block_crushing","lychee:lightning_channeling","lychee:item_exploding","lychee:block_exploding","lychee:random_block_ticking","lychee:dripstone_dripping","lychee:crafting"]),o.register("contextual_condition_type",["chance","not","or","and","location","weather","difficulty","time","execute","fall_distance","entity_health","direction","is_sneaking","check_param"]),o.register("post_action_type",["random","drop_item","place","execute","drop_xp","if","explode","hurt","anvil_damage_chance","add_item_cooldown","move_towards_face","delay","break","cycle_state_property","prevent_default","damage_item","set_item","loquat:spawn"]),o.register("advancement_trigger",["minecraft:allay_drop_item_on_block","minecraft:avoid_vibration","minecraft:bee_nest_destroyed","minecraft:bred_animals","minecraft:brewed_potion","minecraft:changed_dimension","minecraft:channeled_lightning","minecraft:construct_beacon","minecraft:consume_item","minecraft:cured_zombie_villager","minecraft:effects_changed","minecraft:enchanted_item","minecraft:enter_block","minecraft:entity_hurt_player","minecraft:entity_killed_player","minecraft:fall_from_height","minecraft:filled_bucket","minecraft:fishing_rod_hooked","minecraft:hero_of_the_village","minecraft:impossible","minecraft:inventory_changed","minecraft:item_durability_changed","minecraft:item_used_on_block","minecraft:kill_mob_near_sculk_catalyst","minecraft:killed_by_crossbow","minecraft:levitation","minecraft:lightning_strike","minecraft:location","minecraft:nether_travel","minecraft:placed_block","minecraft:player_generates_container_loot","minecraft:player_hurt_entity","minecraft:player_interacted_with_entity","minecraft:player_killed_entity","minecraft:recipe_unlocked","minecraft:ride_entity_in_lava","minecraft:shot_crossbow","minecraft:slept_in_bed","minecraft:slide_down_block","minecraft:started_riding","minecraft:summoned_entity","minecraft:tame_animal","minecraft:target_hit","minecraft:tick","minecraft:thrown_item_picked_up_by_entity","minecraft:thrown_item_picked_up_by_player","minecraft:used_ender_eye","minecraft:used_totem","minecraft:using_item","minecraft:villager_trade","minecraft:voluntary_exile"]),o.register("keybind",["key.advancements","key.attack","key.back","key.chat","key.command","key.drop","key.forward","key.fullscreen","key.hotbar.1","key.hotbar.2","key.hotbar.3","key.hotbar.4","key.hotbar.5","key.hotbar.6","key.hotbar.7","key.hotbar.8","key.hotbar.9","key.inventory","key.jump","key.left","key.loadToolbarActivator","key.pickItem","key.playerlist","key.right","key.saveToolbarActivator","key.screenshot","key.smoothCamera","key.sneak","key.spectatorOutlines","key.sprint","key.swapOffhand","key.togglePerspective","key.use"]),o.register("slot",["mainhand","offhand","head","chest","legs","feet"]),o.register("gamemode",["survival","creative","adventure","spectator"]),o.register("entity_source",["this","killer","direct_killer","killer_player"]),o.register("copy_source",["block_entity","this","killer","killer_player"]),o.register("loot_table_apply_bonus_formula",["minecraft:uniform_bonus_count","minecraft:binomial_with_bonus_count","minecraft:ore_drops"]),o.register("map_decoration",["mansion","monument","player","frame","red_marker","blue_marker","target_x","target_point","player_off_map","player_off_limits","red_x","banner_white","banner_orange","banner_magenta","banner_light_blue","banner_yellow","banner_lime","banner_pink","banner_gray","banner_light_gray","banner_cyan","banner_purple","banner_blue","banner_brown","banner_green","banner_red","banner_black"]),o.register("map_feature",["bastion_remnant","buried_treasure","desert_pyramid","endcity","fortress","igloo","jungle_pyramid","mansion","mineshaft","monument","nether_fossil","ocean_ruin","pillager_outpost","ruined_portal","shipwreck","stronghold","swamp_hut","village"]),o.register("recipe_group",["bed","light_gray_dye","iron_ingot","wooden_stairs","black_dye","stained_terracotta","dyed_bed","magenta_dye","bark","rabbit_stew","light_blue_dye","wooden_fence_gate","planks","stained_glass","wooden_door","stained_glass_pane","wooden_fence","sticks","concrete_powder","wooden_pressure_plate","boat","brown_dye","yellow_dye","bonemeal","red_dye","wooden_trapdoor","wooden_button","gold_ingot","pink_dye","wooden_slab","orange_dye","carpet","sign","wool","sugar","blue_dye","white_dye","banner","netherite_ingot"]),o.register("biome_category",["beach","desert","extreme_hills","forest","icy","jungle","mesa","mountain","mushroom","nether","none","ocean","plains","river","savanna","swamp","taiga","the_end","underground"]),o.register("heightmap_type",["MOTION_BLOCKING","MOTION_BLOCKING_NO_LEAVES","OCEAN_FLOOR","OCEAN_FLOOR_WG","WORLD_SURFACE","WORLD_SURFACE_WG"]),o.register("generation_step",["air","liquid"]),o.register("decoration_step",["raw_generation","lakes","local_modifications","underground_structures","surface_structures","strongholds","underground_ores","underground_decoration","fluid_springs","vegetal_decoration","top_layer_modification"]),o.register("loot_context_type",["minecraft:empty","minecraft:chest","minecraft:command","minecraft:selector","minecraft:fishing","minecraft:entity","minecraft:gift","minecraft:barter","minecraft:advancement_reward","minecraft:advancement_entity","minecraft:generic","minecraft:block"]),o.register("banner_pattern",["base","square_bottom_left","square_bottom_right","square_top_left","square_top_right","stripe_bottom","stripe_top","stripe_left","stripe_right","stripe_center","stripe_middle","stripe_downright","stripe_downleft","small_stripes","cross","straight_cross","triangle_bottom","triangle_top","triangles_bottom","triangles_top","diagonal_left","diagonal_up_right","diagonal_up_left","diagonal_right","circle","rhombus","half_vertical","half_horizontal","half_vertical_right","half_horizontal_bottom","border","curly_border","gradient","gradient_up","bricks","globe","creeper","skull","flower","mojang","piglin"]),o.register("dye_color",["white","orange","magenta","light_blue","yellow","lime","pink","gray","light_gray","cyan","purple","blue","brown","green","red","black"]),o.register("cave_surface",["floor","ceiling"]),o.register("direction",["down","up","north","east","south","west"]),o.register("axis",["x","y","z"]),o.register("display_position",["firstperson_righthand","firstperson_lefthand","thirdperson_righthand","thirdperson_lefthand","gui","head","ground","fixed"]),o.register("gui_light",["front","side"]),o.register("item_model_predicates",["angle","blocking","broken","cast","charged","cooldown","custom_model_data","damage","damaged","firework","lefthanded","pull","pulling","throwing","time"]),o.register("glyph_provider_type",["bitmap","ttf","space","legacy_unicode"]),o.register("mob_category",["monster","creature","ambient","axolotls","underground_water_creature","water_creature","water_ambient","misc"]),o.register("type_specific_type",["any","cat","fishing_hook","frog","lightning","player","slime"])}_e.initCollections=rt;var ue={},pe={};Object.defineProperty(pe,"__esModule",{value:!0});pe.initAdvancementSchemas=void 0;const s=O();function ot(o,e){const t=s.Reference.bind(void 0,o),r=s.StringNode.bind(void 0,e),a=(0,s.ChoiceNode)([{type:"object",node:(0,s.Opt)(t("entity_predicate")),change:n=>{var d,l;return(l=(d=n[0])===null||d===void 0?void 0:d.predicate)!==null&&l!==void 0?l:{}}},{type:"list",node:(0,s.ListNode)(t("condition")),change:n=>[{condition:"minecraft:entity_properties",predicate:n}]}],{context:"conditions"});o.register("advancement",(0,s.Mod)((0,s.ObjectNode)({display:(0,s.Opt)((0,s.Mod)((0,s.ObjectNode)({icon:(0,s.ObjectNode)({item:r({validator:"resource",params:{pool:"item"}}),nbt:(0,s.Opt)(r({validator:"nbt",params:{registry:{category:"minecraft:item",id:["pop",{push:"item"}]}}}))}),title:t("text_component"),description:t("text_component"),background:(0,s.Opt)(r()),frame:(0,s.Opt)(r({enum:["task","challenge","goal"]})),show_toast:(0,s.Opt)((0,s.BooleanNode)()),announce_to_chat:(0,s.Opt)((0,s.BooleanNode)()),hidden:(0,s.Opt)((0,s.BooleanNode)())}),{default:()=>({icon:{item:"minecraft:stone"},title:"",description:""})})),parent:(0,s.Opt)(r({validator:"resource",params:{pool:"$advancement"}})),criteria:(0,s.MapNode)(r(),t("advancement_criteria")),requirements:(0,s.Opt)((0,s.ListNode)((0,s.ListNode)(r()))),rewards:(0,s.Opt)((0,s.ObjectNode)({function:(0,s.Opt)(r({validator:"resource",params:{pool:"$function"}})),loot:(0,s.Opt)((0,s.ListNode)(r({validator:"resource",params:{pool:"$loot_table"}}))),recipes:(0,s.Opt)((0,s.ListNode)(r({validator:"resource",params:{pool:"$recipe"}}))),experience:(0,s.Opt)((0,s.NumberNode)({integer:!0}))}))},{context:"advancement"}),{default:()=>({criteria:{requirement:{trigger:"minecraft:location"}}})})),o.register("advancement_criteria",(0,s.ObjectNode)({trigger:r({validator:"resource",params:{pool:e.get("advancement_trigger")}}),conditions:(0,s.Opt)((0,s.ObjectNode)({player:(0,s.Mod)(a,{enabled:n=>n.pop().push("trigger").get()!=="minecraft:impossible"}),[s.Switch]:["pop",{push:"trigger"}],[s.Case]:{"minecraft:allay_drop_item_on_block":{item:(0,s.Opt)(t("item_predicate")),location:(0,s.Opt)(t("location_predicate"))},"minecraft:bee_nest_destroyed":{block:(0,s.Opt)(r({validator:"resource",params:{pool:"block"}})),num_bees_inside:(0,s.Opt)((0,s.NumberNode)({integer:!0})),item:(0,s.Opt)(t("item_predicate"))},"minecraft:bred_animals":{parent:a,partner:a,child:a},"minecraft:brewed_potion":{potion:(0,s.Opt)(r({validator:"resource",params:{pool:"potion"}}))},"minecraft:changed_dimension":{from:(0,s.Opt)(r({validator:"resource",params:{pool:"$dimension"}})),to:(0,s.Opt)(r({validator:"resource",params:{pool:"$dimension"}}))},"minecraft:channeled_lightning":{victims:(0,s.Opt)((0,s.ListNode)(a))},"minecraft:construct_beacon":{level:t("int_bounds")},"minecraft:consume_item":{item:(0,s.Opt)(t("item_predicate"))},"minecraft:cured_zombie_villager":{villager:a,zombie:a},"minecraft:effects_changed":{effects:(0,s.Opt)((0,s.MapNode)(r({validator:"resource",params:{pool:"mob_effect"}}),t("status_effect_predicate"))),source:(0,s.Opt)(a)},"minecraft:enter_block":{block:(0,s.Opt)(r({validator:"resource",params:{pool:"block"}})),state:(0,s.Opt)((0,s.MapNode)(r(),r(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"block"}]}}}))},"minecraft:enchanted_item":{levels:t("int_bounds"),item:(0,s.Opt)(t("item_predicate"))},"minecraft:entity_hurt_player":{damage:(0,s.Opt)(t("damage_predicate"))},"minecraft:entity_killed_player":{entity:a,killing_blow:(0,s.Opt)(t("damage_source_predicate"))},"minecraft:fall_from_height":{start_position:(0,s.Opt)(t("location_predicate")),distance:(0,s.Opt)(t("distance_predicate"))},"minecraft:filled_bucket":{item:(0,s.Opt)(t("item_predicate"))},"minecraft:fishing_rod_hooked":{entity:a,item:(0,s.Opt)(t("item_predicate"))},"minecraft:inventory_changed":{slots:(0,s.Opt)((0,s.ObjectNode)({empty:t("int_bounds"),occupied:t("int_bounds"),full:t("int_bounds")})),items:(0,s.Opt)((0,s.ListNode)(t("item_predicate")))},"minecraft:item_durability_changed":{delta:t("int_bounds"),durability:t("int_bounds"),item:(0,s.Opt)(t("item_predicate"))},"minecraft:item_used_on_block":{item:(0,s.Opt)(t("item_predicate")),location:(0,s.Opt)(t("location_predicate"))},"minecraft:kill_mob_near_sculk_catalyst":{entity:a,killing_blow:(0,s.Opt)(t("damage_source_predicate"))},"minecraft:killed_by_crossbow":{unique_entity_types:t("int_bounds"),victims:(0,s.Opt)((0,s.ListNode)(a))},"minecraft:levitation":{distance:(0,s.Opt)(t("distance_predicate")),duration:t("int_bounds")},"minecraft:lightning_strike":{lightning:a,bystander:a},"minecraft:nether_travel":{start_position:(0,s.Opt)(t("location_predicate")),distance:(0,s.Opt)(t("distance_predicate"))},"minecraft:placed_block":{block:(0,s.Opt)(r({validator:"resource",params:{pool:"block"}})),state:(0,s.Opt)((0,s.MapNode)(r(),r(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"block"}]}}})),item:(0,s.Opt)(t("item_predicate")),location:(0,s.Opt)(t("location_predicate"))},"minecraft:player_generates_container_loot":{loot_table:r({validator:"resource",params:{pool:"$loot_table"}})},"minecraft:player_hurt_entity":{damage:(0,s.Opt)(t("damage_predicate")),entity:a},"minecraft:player_interacted_with_entity":{item:(0,s.Opt)(t("item_predicate")),entity:a},"minecraft:player_killed_entity":{entity:a,killing_blow:(0,s.Opt)(t("damage_source_predicate"))},"minecraft:recipe_unlocked":{recipe:r({validator:"resource",params:{pool:"$recipe"}})},"minecraft:ride_entity_in_lava":{start_position:(0,s.Opt)(t("location_predicate")),distance:(0,s.Opt)(t("distance_predicate"))},"minecraft:slide_down_block":{block:(0,s.Opt)(r({validator:"resource",params:{pool:"block"}}))},"minecraft:shot_crossbow":{item:(0,s.Opt)(t("item_predicate"))},"minecraft:summoned_entity":{entity:a},"minecraft:tame_animal":{entity:a},"minecraft:target_hit":{projectile:a,shooter:a,signal_strength:t("int_bounds")},"minecraft:thrown_item_picked_up_by_entity":{entity:a,item:(0,s.Opt)(t("item_predicate"))},"minecraft:thrown_item_picked_up_by_player":{entity:a,item:(0,s.Opt)(t("item_predicate"))},"minecraft:used_ender_eye":{distance:(0,s.Opt)(t("float_bounds"))},"minecraft:used_totem":{item:(0,s.Opt)(t("item_predicate"))},"minecraft:using_item":{item:(0,s.Opt)(t("item_predicate"))},"minecraft:villager_trade":{villager:a,item:(0,s.Opt)(t("item_predicate"))}}},{context:"criterion"}))},{category:"predicate",context:"criterion"}))}pe.initAdvancementSchemas=ot;var fe={},ge={};Object.defineProperty(ge,"__esModule",{value:!0});ge.initModelSchemas=void 0;const h=O();function it(o,e){h.Reference.bind(void 0,o);const t=h.StringNode.bind(void 0,e),r=(n,d,l)=>(0,h.ListNode)((0,h.NumberNode)({min:d,max:l}),{minLength:n,maxLength:n}),a=(0,h.ChoiceNode)([{type:"alias",match:n=>typeof n=="string"&&n.startsWith("#"),node:t(),change:n=>typeof n=="string"?`#${n}`:"#0"},{type:"reference",match:n=>typeof n=="string",node:t({validator:"resource",params:{pool:"$texture"}}),change:n=>typeof n=="string"?n.replace(/^#/,""):""}],{choiceContext:"texture"});o.register("model",(0,h.Mod)((0,h.ObjectNode)({parent:(0,h.Opt)(t({validator:"resource",params:{pool:"$model"}})),ambientocclusion:(0,h.Opt)((0,h.BooleanNode)()),gui_light:(0,h.Opt)(t({enum:"gui_light"})),textures:(0,h.Opt)((0,h.MapNode)(t(),a)),elements:(0,h.Opt)((0,h.ListNode)((0,h.ObjectNode)({from:r(3,-16,32),to:r(3,-16,32),rotation:(0,h.Opt)((0,h.ObjectNode)({origin:r(3),axis:t({enum:"axis"}),angle:(0,h.NumberEnum)({values:[-45,-22.5,0,22.5,45]}),rescale:(0,h.Opt)((0,h.BooleanNode)())})),shade:(0,h.Opt)((0,h.BooleanNode)()),faces:(0,h.MapNode)(t({enum:"direction"}),(0,h.ObjectNode)({texture:a,uv:(0,h.Opt)(r(4)),cullface:(0,h.Opt)(t({enum:"direction"})),rotation:(0,h.Opt)((0,h.NumberNode)({integer:!0})),tintindex:(0,h.Opt)((0,h.NumberNode)({integer:!0}))}))},{context:"model_element"}))),display:(0,h.Opt)((0,h.MapNode)(t({enum:"display_position"}),(0,h.ObjectNode)({rotation:r(3),translation:r(3,-80,80),scale:r(3,-4,4)},{context:"item_transform"}))),overrides:(0,h.Opt)((0,h.ListNode)((0,h.ObjectNode)({predicate:(0,h.MapNode)(t({enum:"item_model_predicates"}),(0,h.NumberNode)()),model:t({validator:"resource",params:{pool:"$model"}})},{context:"model_override"})))},{context:"model"}),{default:()=>({parent:"minecraft:item/generated",textures:{layer0:"minecraft:item/diamond"}})}))}ge.initModelSchemas=it;var be={};Object.defineProperty(be,"__esModule",{value:!0});be.initBlockDefinitionSchemas=void 0;const j=O();function nt(o,e){const t=j.Reference.bind(void 0,o),r=j.StringNode.bind(void 0,e);o.register("block_definition",(0,j.Mod)((0,j.ChoiceNode)([{type:"variants",match:n=>n.variants!==void 0,node:(0,j.ObjectNode)({variants:(0,j.MapNode)(r(),t("model_variant"))}),change:n=>({variants:{"":{}}})},{type:"multipart",match:n=>n.multipart!==void 0,node:(0,j.ObjectNode)({multipart:(0,j.ListNode)((0,j.ObjectNode)({when:(0,j.Opt)(t("multipart_condition")),apply:t("model_variant")}))}),change:n=>({multipart:{when:{},apply:{}}})}],{context:"block_definition"}),{default:()=>({variants:{"":{model:"minecraft:block/stone"}}})}));const a={model:r({validator:"resource",params:{pool:"$model"}}),x:(0,j.Opt)((0,j.NumberEnum)({integer:!0,values:[0,90,180,270]})),y:(0,j.Opt)((0,j.NumberEnum)({integer:!0,values:[0,90,180,270]})),uvlock:(0,j.Opt)((0,j.BooleanNode)())};o.register("model_variant",(0,j.ChoiceNode)([{type:"object",node:(0,j.ObjectNode)(a),change:n=>Array.isArray(n)&&n.length>0?n[0]:{}},{type:"list",node:(0,j.ListNode)((0,j.ObjectNode)({...a,weight:(0,j.Opt)((0,j.NumberNode)({integer:!0,min:1}))},{context:"model_variant"})),change:n=>[{weight:1,...n}]}],{context:"model_variant"})),o.register("multipart_condition",(0,j.ChoiceNode)([{type:"object",priority:-1,match:()=>!0,node:(0,j.MapNode)(r(),r()),change:n=>typeof n=="object"&&Array.isArray(n==null?void 0:n.OR)&&n.OR.length>0?n.OR[0]:{}},{type:"or",match:n=>typeof n=="object"&&(n==null?void 0:n.OR)!==void 0,node:(0,j.ObjectNode)({OR:(0,j.ListNode)(t("multipart_condition"))}),change:n=>({OR:[n!=null?n:{}]})}],{context:"multipart_condition"}))}be.initBlockDefinitionSchemas=nt;var Ne={};Object.defineProperty(Ne,"__esModule",{value:!0});Ne.initFontSchemas=void 0;const M=O();function at(o,e){const t=M.Reference.bind(void 0,o),r=M.StringNode.bind(void 0,e);o.register("font",(0,M.ObjectNode)({providers:(0,M.ListNode)(t("glyph_provider"))},{context:"font"})),o.register("glyph_provider",(0,M.Mod)((0,M.ObjectNode)({type:r({enum:"glyph_provider_type"}),[M.Switch]:[{push:"type"}],[M.Case]:{bitmap:{file:r({validator:"resource",params:{pool:"$texture",suffix:".png"}}),height:(0,M.Opt)((0,M.NumberNode)({integer:!0})),ascent:(0,M.NumberNode)({integer:!0}),chars:(0,M.ListNode)(r(),{minLength:1})},ttf:{file:r({validator:"resource",params:{pool:"$texture",suffix:".png"}}),size:(0,M.Opt)((0,M.NumberNode)()),oversample:(0,M.Opt)((0,M.NumberNode)()),shift:(0,M.Opt)((0,M.ListNode)((0,M.NumberNode)(),{minLength:2,maxLength:2})),skip:(0,M.Opt)((0,M.StringOrList)(r()))},space:{advances:(0,M.MapNode)(r(),(0,M.NumberNode)())},legacy_unicode:{sizes:r(),template:r()}}},{context:"glyph_provider"}),{default:()=>({type:"bitmap"})}))}Ne.initFontSchemas=at;Object.defineProperty(fe,"__esModule",{value:!0});fe.initAssetsSchemas=void 0;const ct=ge,dt=be,st=Ne;function lt(o,e){(0,dt.initBlockDefinitionSchemas)(o,e),(0,st.initFontSchemas)(o,e),(0,ct.initModelSchemas)(o,e)}fe.initAssetsSchemas=lt;var he={};Object.defineProperty(he,"__esModule",{value:!0});he.initChatTypeSchemas=void 0;const K=O();function mt(o,e){const t=K.Reference.bind(void 0,o),r=K.StringNode.bind(void 0,e);o.register("chat_type",(0,K.Mod)((0,K.ObjectNode)({chat:t("text_decoration"),narration:t("text_decoration")},{context:"chat_type"}),{default:()=>({chat:{translation_key:"chat.type.text",parameters:["sender","content"]},narration:{translation_key:"chat.type.text.narrate",parameters:["sender","content"]}})})),o.register("text_decoration",(0,K.Mod)((0,K.ObjectNode)({translation_key:r(),parameters:(0,K.ListNode)(r({enum:["sender","target","content"]})),style:(0,K.Opt)(t("text_style"))},{context:"text_decoration"}),{default:()=>({translation_key:"chat.type.text",parameters:["sender","content"],style:{}})}))}he.initChatTypeSchemas=mt;var q={};(function(o){Object.defineProperty(o,"__esModule",{value:!0}),o.initCommonSchemas=o.Tag=o.InclusiveRange=o.IntProvider=o.FloatProvider=o.NoiseSettingsPresets=o.DefaultNoiseSettings=o.FunctionCases=o.ConditionCases=void 0;const e=O();o.DefaultNoiseSettings={sea_level:63,ore_veins_enabled:!0,disable_mob_generation:!1,aquifers_enabled:!0,legacy_random_source:!1,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:-64,height:384,size_horizontal:1,size_vertical:2,top_slide:{target:-.078125,size:2,offset:8},bottom_slide:{target:.1171875,size:3,offset:0},sampling:{xz_scale:.9999999814507745,y_scale:.9999999814507745,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}};function t(r,a){const n=e.StringNode.bind(void 0,a),d=e.Reference.bind(void 0,r);r.register("block_state",(0,e.Mod)((0,e.ObjectNode)({Name:n({validator:"resource",params:{pool:"block"}}),Properties:(0,e.Opt)((0,e.MapNode)(n(),n(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"Name"}]}}}))},{context:"block_state"}),{default:()=>({Name:"minecraft:stone"})})),r.register("fluid_state",(0,e.Mod)((0,e.ObjectNode)({Name:n({validator:"resource",params:{pool:"fluid"}}),Properties:(0,e.Opt)((0,e.MapNode)(n(),n()))},{context:"fluid_state"}),{default:()=>({Name:"minecraft:water",Properties:{level:"0"}})})),r.register("block_pos",(0,e.Mod)((0,e.ListNode)((0,e.NumberNode)({integer:!0}),{minLength:3,maxLength:3}),{default:()=>[0,0,0]}));const l=p=>(0,e.Opt)((0,e.ChoiceNode)([{type:"number",node:(0,e.NumberNode)({integer:p}),change:N=>{var C,y;return N===void 0?0:(y=(C=N.min)!==null&&C!==void 0?C:N.max)!==null&&y!==void 0?y:0}},{type:"object",node:(0,e.ObjectNode)({min:(0,e.Opt)((0,e.NumberNode)({integer:p})),max:(0,e.Opt)((0,e.NumberNode)({integer:p}))},{context:"range"}),change:N=>({min:N!=null?N:0,max:N!=null?N:0})}]));r.register("int_bounds",l(!0)),r.register("float_bounds",l()),r.register("int_range",(0,e.ChoiceNode)([{type:"object",node:(0,e.ObjectNode)({min:(0,e.Opt)(d("number_provider")),max:(0,e.Opt)(d("number_provider"))})},{type:"number",node:(0,e.NumberNode)({integer:!0})}],{context:"range"}));const k=(p,N,C,y,R,D,V)=>{let le={};R&&Object.keys(V[R]).forEach(E=>{le[E]=(0,e.Mod)(V[R][E],{enabled:U=>U.push("type").get()===void 0})});const te=(0,e.ObjectNode)({type:(0,e.Mod)((0,e.Opt)(n({validator:"resource",params:{pool:p}})),{hidden:()=>!0}),[e.Switch]:[{push:"type"}],[e.Case]:V,...le},{context:D,disableSwitchContext:!0}),re=[{type:N,node:V[y][C]}];return R&&re.push({type:"object",priority:-1,node:te}),Object.keys(V).forEach(E=>{re.push({type:E,match:U=>{var oe;if("minecraft:"+((oe=U==null?void 0:U.type)===null||oe===void 0?void 0:oe.replace(/^minecraft:/,""))===E)return!0;const X=U?Object.keys(U):[];return typeof U=="object"&&((X==null?void 0:X.length)===0||(X==null?void 0:X.length)===1&&(X==null?void 0:X[0])==="type")},node:te,change:U=>({type:E})})}),(0,e.ChoiceNode)(re,{context:D,choiceContext:`${D}.type`})};r.register("number_provider",k("loot_number_provider_type","number","value","minecraft:constant","minecraft:uniform","number_provider",{"minecraft:constant":{value:(0,e.NumberNode)()},"minecraft:uniform":{min:d("number_provider"),max:d("number_provider")},"minecraft:binomial":{n:d("number_provider"),p:d("number_provider")},"minecraft:score":{target:d("scoreboard_name_provider"),score:n({validator:"objective"}),scale:(0,e.Opt)((0,e.NumberNode)())}})),r.register("scoreboard_name_provider",k("loot_score_provider_type","string","target","minecraft:context",null,"score_provider",{"minecraft:fixed":{name:n({validator:"entity",params:{amount:"multiple",type:"entities",isScoreHolder:!0}})},"minecraft:context":{target:(0,e.Mod)(n({enum:"entity_source"}),{default:()=>"this"})}})),r.register("nbt_provider",k("loot_nbt_provider_type","string","target","minecraft:context",null,"nbt_provider",{"minecraft:storage":{source:n({validator:"resource",params:{pool:"$storage"}})},"minecraft:context":{target:(0,e.Mod)(n({enum:"copy_source"}),{default:()=>"this"})}})),o.FloatProvider=p=>k("float_provider_type","number","value","minecraft:constant",null,"float_provider",{"minecraft:constant":{value:(0,e.NumberNode)(p)},"minecraft:uniform":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)(p),max_exclusive:(0,e.NumberNode)(p)})},"minecraft:clamped_normal":{value:(0,e.ObjectNode)({min:(0,e.NumberNode)(),max:(0,e.NumberNode)(),mean:(0,e.NumberNode)(),deviation:(0,e.NumberNode)()})},"minecraft:trapezoid":{value:(0,e.ObjectNode)({min:(0,e.NumberNode)(),max:(0,e.NumberNode)(),plateau:(0,e.NumberNode)()})}}),r.register("float_provider",(0,o.FloatProvider)()),o.IntProvider=p=>k("int_provider_type","number","value","minecraft:constant",null,"int_provider",{"minecraft:constant":{value:(0,e.NumberNode)({integer:!0,...p})},"minecraft:uniform":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...p}),max_inclusive:(0,e.NumberNode)({integer:!0,...p})})},"minecraft:biased_to_bottom":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...p}),max_inclusive:(0,e.NumberNode)({integer:!0,...p})})},"minecraft:clamped":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...p}),max_inclusive:(0,e.NumberNode)({integer:!0,...p}),source:d("int_provider")})},"minecraft:clamped_normal":{value:(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)({integer:!0,...p}),max_inclusive:(0,e.NumberNode)({integer:!0,...p}),mean:(0,e.NumberNode)(),deviation:(0,e.NumberNode)()})},"minecraft:weighted_list":{distribution:(0,e.ListNode)((0,e.ObjectNode)({weight:(0,e.NumberNode)({integer:!0}),data:d("int_provider")}))}}),r.register("int_provider",(0,o.IntProvider)()),r.register("vertical_anchor",(0,e.ChoiceNode)(["absolute","above_bottom","below_top"].map(p=>({type:p,match:N=>(N==null?void 0:N[p])!==void 0,change:N=>{var C,y,R;return{[p]:(R=(y=(C=N.absolute)!==null&&C!==void 0?C:N.above_bottom)!==null&&y!==void 0?y:N.below_top)!==null&&R!==void 0?R:0}},node:(0,e.ObjectNode)({[p]:(0,e.NumberNode)({integer:!0,min:-2048,max:2047})})})),{context:"vertical_anchor"})),r.register("height_provider",k("height_provider_type","number","value","minecraft:constant",null,"height_provider",{"minecraft:constant":{value:d("vertical_anchor")},"minecraft:uniform":{min_inclusive:d("vertical_anchor"),max_inclusive:d("vertical_anchor")},"minecraft:biased_to_bottom":{min_inclusive:d("vertical_anchor"),max_inclusive:d("vertical_anchor"),inner:(0,e.Opt)((0,e.NumberNode)({integer:!0,min:1}))},"minecraft:very_biased_to_bottom":{min_inclusive:d("vertical_anchor"),max_inclusive:d("vertical_anchor"),inner:(0,e.Opt)((0,e.NumberNode)({integer:!0,min:1}))},"minecraft:trapezoid":{min_inclusive:d("vertical_anchor"),max_inclusive:d("vertical_anchor"),plateau:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:weighted_list":{distribution:(0,e.ListNode)((0,e.ObjectNode)({weight:(0,e.NumberNode)({integer:!0}),data:d("height_provider")}))}})),o.InclusiveRange=p=>(0,e.ObjectNode)({min_inclusive:(0,e.NumberNode)(p),max_inclusive:(0,e.NumberNode)(p)},{context:"range"}),r.register("noise_parameters",(0,e.Mod)((0,e.ObjectNode)({firstOctave:(0,e.NumberNode)({integer:!0}),amplitudes:(0,e.ListNode)((0,e.NumberNode)())},{context:"noise_parameters"}),{default:()=>({firstOctave:-7,amplitudes:[1,1]})})),o.Tag=p=>(0,e.ChoiceNode)([{type:"string",node:n({validator:"resource",params:{pool:p.resource,allowTag:!0}}),change:N=>{if(Array.isArray(N)&&typeof N[0]=="string"&&!N[0].startsWith("#"))return N[0]}},{type:"list",node:(0,e.ListNode)(p.inlineSchema?(0,e.ChoiceNode)([{type:"string",node:n({validator:"resource",params:{pool:p.resource}})},{type:"object",node:d(p.inlineSchema)}],{choiceContext:"tag.list"}):n({validator:"resource",params:{pool:p.resource}})),change:N=>typeof N=="string"&&!N.startsWith("#")?[N]:[]}],{choiceContext:"tag"}),o.ConditionCases=(p=n({enum:"entity_source"}))=>({"minecraft:alternative":{terms:(0,e.ListNode)(d("condition"))},"minecraft:block_state_property":{block:n({validator:"resource",params:{pool:"block"}}),properties:(0,e.MapNode)(n(),n(),{validation:{validator:"block_state_map",params:{id:["pop",{push:"block"}]}}})},"minecraft:damage_source_properties":{predicate:d("damage_source_predicate")},"minecraft:entity_properties":{entity:p,predicate:d("entity_predicate")},"minecraft:entity_scores":{entity:p,scores:(0,e.MapNode)(n({validator:"objective"}),d("int_range"))},"minecraft:inverted":{term:d("condition")},"minecraft:killed_by_player":{inverse:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:location_check":{offsetX:(0,e.Opt)((0,e.NumberNode)({integer:!0})),offsetY:(0,e.Opt)((0,e.NumberNode)({integer:!0})),offsetZ:(0,e.Opt)((0,e.NumberNode)({integer:!0})),predicate:d("location_predicate")},"minecraft:match_tool":{predicate:d("item_predicate")},"minecraft:random_chance":{chance:(0,e.NumberNode)({min:0,max:1})},"minecraft:random_chance_with_looting":{chance:(0,e.NumberNode)({min:0,max:1}),looting_multiplier:(0,e.NumberNode)()},"minecraft:reference":{name:n({validator:"resource",params:{pool:"$predicate"}})},"minecraft:table_bonus":{enchantment:n({validator:"resource",params:{pool:"enchantment"}}),chances:(0,e.ListNode)((0,e.NumberNode)({min:0,max:1}))},"minecraft:time_check":{value:d("int_range"),period:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:value_check":{value:d("number_provider"),range:d("int_range")},"minecraft:weather_check":{raining:(0,e.Opt)((0,e.BooleanNode)()),thundering:(0,e.Opt)((0,e.BooleanNode)())}}),o.FunctionCases=(p,N=n({enum:"copy_source"}),C=n({enum:"entity_source"}))=>{const y={"minecraft:apply_bonus":{enchantment:n({validator:"resource",params:{pool:"enchantment"}}),formula:n({validator:"resource",params:{pool:a.get("loot_table_apply_bonus_formula")}}),parameters:(0,e.Mod)((0,e.ObjectNode)({bonusMultiplier:(0,e.Mod)((0,e.NumberNode)(),{enabled:D=>D.pop().push("formula").get()==="minecraft:uniform_bonus_count"}),extra:(0,e.Mod)((0,e.NumberNode)(),{enabled:D=>D.pop().push("formula").get()==="minecraft:binomial_with_bonus_count"}),probability:(0,e.Mod)((0,e.NumberNode)(),{enabled:D=>D.pop().push("formula").get()==="minecraft:binomial_with_bonus_count"})}),{enabled:D=>D.push("formula").get()!=="minecraft:ore_drops"})},"minecraft:copy_name":{source:N},"minecraft:copy_nbt":{source:d("nbt_provider"),ops:(0,e.ListNode)((0,e.ObjectNode)({source:n({validator:"nbt_path",params:{category:{getter:"copy_source",path:["pop","pop","pop",{push:"source"}]}}}),target:n({validator:"nbt_path",params:{category:"minecraft:item"}}),op:n({enum:["replace","append","merge"]})},{context:"nbt_operation"}))},"minecraft:copy_state":{block:n({validator:"resource",params:{pool:"block"}}),properties:(0,e.ListNode)(n({validator:"block_state_key",params:{id:["pop","pop",{push:"block"}]}}))},"minecraft:enchant_randomly":{enchantments:(0,e.Opt)((0,e.ListNode)(n({validator:"resource",params:{pool:"enchantment"}})))},"minecraft:enchant_with_levels":{levels:d("number_provider"),treasure:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:exploration_map":{destination:(0,e.Opt)(n({validator:"resource",params:{pool:"$tag/worldgen/structure"}})),decoration:(0,e.Opt)(n({enum:"map_decoration"})),zoom:(0,e.Opt)((0,e.NumberNode)({integer:!0})),search_radius:(0,e.Opt)((0,e.NumberNode)({integer:!0})),skip_existing_chunks:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:fill_player_head":{entity:C},"minecraft:limit_count":{limit:d("int_range")},"minecraft:looting_enchant":{count:d("number_provider"),limit:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:set_attributes":{modifiers:(0,e.ListNode)(d("attribute_modifier"))},"minecraft:set_banner_pattern":{patterns:(0,e.ListNode)((0,e.ObjectNode)({pattern:n({enum:"banner_pattern"}),color:n({enum:"dye_color"})})),append:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_contents":{type:n({validator:"resource",params:{pool:"block_entity_type"}}),entries:(0,e.ListNode)(d("loot_entry"))},"minecraft:set_count":{count:d("number_provider"),add:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_damage":{damage:d("number_provider"),add:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_enchantments":{enchantments:(0,e.MapNode)(n({validator:"resource",params:{pool:"enchantment"}}),d("number_provider")),add:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_instrument":{options:n({validator:"resource",params:{pool:"instrument",requireTag:!0}})},"minecraft:set_loot_table":{type:n({validator:"resource",params:{pool:"block_entity_type"}}),name:n({validator:"resource",params:{pool:"$loot_table"}}),seed:(0,e.Opt)((0,e.NumberNode)({integer:!0}))},"minecraft:set_lore":{entity:(0,e.Opt)(C),lore:(0,e.ListNode)(d("text_component")),replace:(0,e.Opt)((0,e.BooleanNode)())},"minecraft:set_name":{entity:(0,e.Opt)(C),name:(0,e.Opt)(d("text_component"))},"minecraft:set_nbt":{tag:n({validator:"nbt",params:{registry:{category:"minecraft:item"}}})},"minecraft:set_potion":{id:n({validator:"resource",params:{pool:"potion"}})},"minecraft:set_stew_effect":{effects:(0,e.Opt)((0,e.ListNode)((0,e.ObjectNode)({type:n({validator:"resource",params:{pool:"mob_effect"}}),duration:d("number_provider")})))}},R={};return a.get("loot_function_type").forEach(D=>{R[D]={...y[D],...p}}),R},o.NoiseSettingsPresets=p=>(0,e.ObjectOrPreset)(n({validator:"resource",params:{pool:"$worldgen/noise_settings"}}),p,{"minecraft:overworld":o.DefaultNoiseSettings,"minecraft:nether":{sea_level:32,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:netherrack"},default_fluid:{Properties:{level:"0"},Name:"minecraft:lava"},noise:{min_y:0,height:128,size_horizontal:1,size_vertical:2,top_slide:{target:.9375,size:3,offset:0},bottom_slide:{target:2.5,size:4,offset:-1},sampling:{xz_scale:1,y_scale:3,xz_factor:80,y_factor:60},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:end":{sea_level:0,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:end_stone"},default_fluid:{Name:"minecraft:air"},noise:{min_y:0,height:128,size_horizontal:2,size_vertical:1,top_slide:{target:-23.4375,size:64,offset:-46},bottom_slide:{target:-.234375,size:7,offset:1},sampling:{xz_scale:2,y_scale:1,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:1,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:amplified":{sea_level:63,ore_veins_enabled:!0,disable_mob_generation:!1,aquifers_enabled:!0,legacy_random_source:!1,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:-64,height:384,size_horizontal:1,size_vertical:2,top_slide:{target:-.078125,size:2,offset:8},bottom_slide:{target:.1171875,size:3,offset:0},sampling:{xz_scale:.9999999814507745,y_scale:.9999999814507745,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:caves":{sea_level:32,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:0,height:128,size_horizontal:1,size_vertical:2,top_slide:{target:.9375,size:3,offset:0},bottom_slide:{target:2.5,size:4,offset:-1},sampling:{xz_scale:1,y_scale:3,xz_factor:80,y_factor:60},terrain_shaper:{offset:0,factor:0,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}},"minecraft:floating_islands":{sea_level:0,ore_veins_enabled:!1,disable_mob_generation:!1,aquifers_enabled:!1,legacy_random_source:!0,default_block:{Name:"minecraft:stone"},default_fluid:{Properties:{level:"0"},Name:"minecraft:water"},noise:{min_y:0,height:128,size_horizontal:2,size_vertical:1,top_slide:{target:-23.4375,size:64,offset:-46},bottom_slide:{target:-.234375,size:7,offset:1},sampling:{xz_scale:2,y_scale:1,xz_factor:80,y_factor:160},terrain_shaper:{offset:0,factor:1,jaggedness:0}},noise_router:{barrier:0,fluid_level_floodedness:0,fluid_level_spread:0,lava:0,temperature:0,vegetation:0,continents:0,erosion:0,depth:0,ridges:0,initial_density_without_jaggedness:0,final_density:{type:"minecraft:interpolated",argument:"minecraft:overworld/base_3d_noise"},vein_toggle:0,vein_ridged:0,vein_gap:0},surface_rule:{type:"minecraft:sequence",sequence:[]}}})}o.initCommonSchemas=t})(q);var ye={};Object.defineProperty(ye,"__esModule",{value:!0});ye.initConditionSchemas=void 0;const ie=O(),_t=q;function ut(o,e){const t=ie.Reference.bind(void 0,o),r=ie.StringNode.bind(void 0,e);o.register("predicate",(0,ie.ObjectOrList)(t("condition"),{choiceContext:"condition"})),o.register("condition",(0,ie.Mod)((0,ie.ObjectNode)({condition:r({validator:"resource",params:{pool:"loot_condition_type"}}),[ie.Switch]:[{push:"condition"}],[ie.Case]:(0,_t.ConditionCases)()},{category:"predicate",context:"condition"}),{default:()=>({condition:"minecraft:entity_properties",entity:"this"})}))}ye.initConditionSchemas=ut;var ve={};Object.defineProperty(ve,"__esModule",{value:!0});ve.initDimensionSchemas=void 0;const x=O(),Ue=q;function pt(o,e){const t=x.Reference.bind(void 0,o),r=x.StringNode.bind(void 0,e);o.register("dimension",(0,x.Mod)((0,x.ObjectNode)({type:r({validator:"resource",params:{pool:"$dimension_type"}}),generator:(0,x.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/chunk_generator"}}),[x.Switch]:[{push:"type"}],[x.Case]:{"minecraft:noise":{settings:(0,Ue.NoiseSettingsPresets)(t("noise_settings")),biome_source:(0,x.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/biome_source"}}),[x.Switch]:[{push:"type"}],[x.Case]:{"minecraft:fixed":{biome:r({validator:"resource",params:{pool:"$worldgen/biome"}})},"minecraft:multi_noise":{preset:(0,x.Opt)(r({validator:"resource",params:{pool:["minecraft:overworld","minecraft:nether"]}})),biomes:(0,x.Mod)((0,x.ListNode)(t("generator_biome")),{enabled:n=>n.push("preset").get()===void 0,default:()=>[{biome:"minecraft:plains"}]})},"minecraft:checkerboard":{scale:(0,x.Opt)((0,x.NumberNode)({integer:!0,min:0,max:62})),biomes:(0,Ue.Tag)({resource:"$worldgen/biome"})}}},{category:"predicate",disableSwitchContext:!0})},"minecraft:flat":{settings:t("flat_generator_settings")}}},{disableSwitchContext:!0})},{category:"pool",context:"dimension"}),{default:()=>({type:"minecraft:overworld",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:fixed",biome:"minecraft:plains"},settings:"minecraft:overworld"}})})),o.register("flat_generator_settings",(0,x.ObjectNode)({biome:(0,x.Opt)(r({validator:"resource",params:{pool:"$worldgen/biome"}})),lakes:(0,x.Opt)((0,x.BooleanNode)()),features:(0,x.Opt)((0,x.BooleanNode)()),layers:(0,x.ListNode)(t("generator_layer")),structure_overrides:(0,Ue.Tag)({resource:"$worldgen/structure_set"})}));const a=(0,x.ChoiceNode)([{type:"number",node:(0,x.NumberNode)({min:-2,max:2}),change:n=>{var d;return(d=n[0])!==null&&d!==void 0?d:0}},{type:"list",node:(0,x.ListNode)((0,x.NumberNode)({min:-2,max:2}),{minLength:2,maxLength:2}),change:n=>[n!=null?n:0,n!=null?n:0]}]);o.register("parameter_point",(0,x.ObjectNode)({temperature:a,humidity:a,continentalness:a,erosion:a,weirdness:a,depth:a,offset:(0,x.NumberNode)({min:0,max:1})})),o.register("generator_biome",(0,x.Mod)((0,x.ObjectNode)({biome:r({validator:"resource",params:{pool:"$worldgen/biome"}}),parameters:t("parameter_point")},{context:"generator_biome"}),{default:()=>({biome:"minecraft:plains",parameters:{temperature:0,humidity:0,continentalness:0,erosion:0,weirdness:0,depth:0,offset:0}})}))}ve.initDimensionSchemas=pt;var Oe={};Object.defineProperty(Oe,"__esModule",{value:!0});Oe.initDimensionTypeSchemas=void 0;const B=O(),ft=q;function gt(o,e){const t=B.StringNode.bind(void 0,e);o.register("dimension_type",(0,B.Mod)((0,B.ObjectNode)({ultrawarm:(0,B.BooleanNode)(),natural:(0,B.BooleanNode)(),piglin_safe:(0,B.BooleanNode)(),respawn_anchor_works:(0,B.BooleanNode)(),bed_works:(0,B.BooleanNode)(),has_raids:(0,B.BooleanNode)(),has_skylight:(0,B.BooleanNode)(),has_ceiling:(0,B.BooleanNode)(),coordinate_scale:(0,B.NumberNode)({min:1e-5,max:3e7}),ambient_light:(0,B.NumberNode)(),fixed_time:(0,B.Opt)((0,B.NumberNode)({integer:!0})),logical_height:(0,B.NumberNode)({integer:!0,min:0,max:4064}),effects:(0,B.Opt)(t({validator:"resource",params:{pool:["minecraft:overworld","minecraft:the_nether","minecraft:the_end"]}})),infiniburn:t({validator:"resource",params:{pool:"block",requireTag:!0}}),min_y:(0,B.NumberNode)({integer:!0,min:-2032,max:2031}),height:(0,B.NumberNode)({integer:!0,min:16,max:4064}),monster_spawn_light_level:(0,ft.IntProvider)({min:0,max:15}),monster_spawn_block_light_limit:(0,B.NumberNode)({integer:!0,min:0,max:15})},{context:"dimension_type"}),r=>({default:()=>({ultrawarm:!1,natural:!0,piglin_safe:!1,respawn_anchor_works:!1,bed_works:!0,has_raids:!0,has_skylight:!0,has_ceiling:!1,coordinate_scale:1,ambient_light:0,logical_height:384,effects:"minecraft:overworld",infiniburn:"#minecraft:infiniburn_overworld",min_y:-64,height:384,monster_spawn_block_light_limit:0,monster_spawn_light_level:{type:"minecraft:uniform",value:{min_inclusive:0,max_inclusive:7}}}),validate:(a,n,d,l)=>(n=r.validate(a,n,d,l),(n==null?void 0:n.min_y)+(n==null?void 0:n.height)>2032&&d.add(a.push("height"),"error.min_y_plus_height",2032),(n==null?void 0:n.logical_height)>(n==null?void 0:n.height)&&d.add(a.push("logical_height"),"error.logical_height"),(n==null?void 0:n.height)%16!==0&&d.add(a.push("height"),"error.height_multiple",16),(n==null?void 0:n.min_y)%16!==0&&d.add(a.push("min_y"),"error.min_y_multiple",16),n)})))}Oe.initDimensionTypeSchemas=gt;var ke={};Object.defineProperty(ke,"__esModule",{value:!0});ke.initItemModifierSchemas=void 0;const Y=O(),bt=q;function Nt(o,e){const t=Y.Reference.bind(void 0,o),r=Y.StringNode.bind(void 0,e);o.register("item_modifier",(0,Y.ObjectOrList)(t("function"),{choiceContext:"function"}));const a={conditions:(0,Y.Opt)((0,Y.ListNode)(t("condition")))};o.register("function",(0,Y.Mod)((0,Y.ObjectNode)({function:r({validator:"resource",params:{pool:"loot_function_type"}}),[Y.Switch]:[{push:"function"}],[Y.Case]:(0,bt.FunctionCases)(a)},{category:"function",context:"function"}),{default:()=>[{function:"minecraft:set_count",count:1}]}))}ke.initItemModifierSchemas=Nt;var xe={},W={};Object.defineProperty(W,"__esModule",{value:!0});W.LootFunctions=W.LootConditions=W.LootCopySources=W.LootEntitySources=W.LootTableTypes=void 0;W.LootTableTypes=new Map([["minecraft:advancement_entity",{requires:[7,8],allows:[]}],["minecraft:advancement_reward",{requires:[7,8],allows:[]}],["minecraft:barter",{requires:[8],allows:[]}],["minecraft:block",{requires:[1,7,9],allows:[0,4,8]}],["minecraft:chest",{requires:[7],allows:[8]}],["minecraft:command",{requires:[7],allows:[8]}],["minecraft:empty",{requires:[],allows:[]}],["minecraft:entity",{requires:[2,7,8],allows:[3,5,6]}],["minecraft:fishing",{requires:[7,9],allows:[8]}],["minecraft:generic",{requires:[2,0,1,3,4,5,6,7,8,9],allows:[]}],["minecraft:gift",{requires:[7,8],allows:[]}],["minecraft:selector",{requires:[7],allows:[8]}]]);W.LootEntitySources=new Map([["direct_killer",[3]],["killer",[5]],["killer_player",[5]],["this",[8]]]);W.LootCopySources=new Map([["block_entity",[0]],["killer",[5]],["killer_player",[5]],["this",[8]]]);W.LootConditions=new Map([["minecraft:alternative",[]],["minecraft:block_state_property",[1]],["minecraft:damage_source_properties",[2]],["minecraft:entity_properties",[7]],["minecraft:entity_scores",[]],["minecraft:inverted",[]],["minecraft:killed_by_player",[6]],["minecraft:location_check",[]],["minecraft:match_tool",[9]],["minecraft:random_chance",[]],["minecraft:random_chance_with_looting",[5]],["minecraft:reference",[]],["minecraft:survives_explosion",[4]],["minecraft:table_bonus",[9]],["minecraft:time_check",[]],["minecraft:weather_check",[]]]);W.LootFunctions=new Map([["minecraft:apply_bonus",[9]],["minecraft:copy_name",[]],["minecraft:copy_nbt",[]],["minecraft:copy_state",[1]],["minecraft:enchant_randomly",[]],["minecraft:enchant_with_levels",[]],["minecraft:exploration_map",[7]],["minecraft:explosion_decay",[]],["minecraft:fill_player_head",[]],["minecraft:furnace_smelt",[]],["minecraft:limit_count",[]],["minecraft:looting_enchant",[5]],["minecraft:set_attributes",[]],["minecraft:set_banner_pattern",[]],["minecraft:set_contents",[]],["minecraft:set_count",[]],["minecraft:set_damage",[]],["minecraft:set_loot_table",[]],["minecraft:set_lore",[]],["minecraft:set_name",[]],["minecraft:set_nbt",[]],["minecraft:set_stew_effect",[]]]);Object.defineProperty(xe,"__esModule",{value:!0});xe.initLootTableSchemas=void 0;const g=O(),de=W,Ze=q;function ht(o,e){const t=g.Reference.bind(void 0,o),r=g.StringNode.bind(void 0,e),a={conditions:(0,g.Opt)((0,g.ListNode)(t("loot_condition")))},n={functions:(0,g.Opt)((0,g.ListNode)(t("loot_function"))),...a};function d(y,R,D){const V=[],le=te=>e.get(R).filter(re=>{var E;return((E=y.get(re))!==null&&E!==void 0?E:[]).every(oe=>te.includes(oe))});for(const[te,{allows:re,requires:E}]of de.LootTableTypes){const U=[...re,...E];V.push({match:oe=>oe.getModel().get(new g.Path(["type"]))===te,node:D(le(U))})}return V.push({match:te=>!0,node:D(R)}),(0,g.SwitchNode)(V)}const l=d(de.LootConditions,"loot_condition_type",y=>r({validator:"resource",params:{pool:y instanceof Array?y:"loot_condition_type"}})),k=d(de.LootFunctions,"loot_function_type",y=>r({validator:"resource",params:{pool:y instanceof Array?y:"loot_function_type"}})),p=d(de.LootEntitySources,"entity_source",y=>r({enum:y})),N=d(de.LootCopySources,"copy_source",y=>r({enum:y}));o.register("loot_table",(0,g.Mod)((0,g.ObjectNode)({type:(0,g.Opt)(r({validator:"resource",params:{pool:e.get("loot_context_type")}})),pools:(0,g.Opt)((0,g.ListNode)((0,g.Mod)((0,g.ObjectNode)({rolls:t("number_provider"),bonus_rolls:(0,g.Opt)(t("number_provider")),entries:(0,g.ListNode)(t("loot_entry")),...n},{category:"pool",context:"loot_pool"}),{default:()=>({rolls:1,entries:[{type:"minecraft:item",name:"minecraft:stone"}]})}))),functions:(0,g.Opt)((0,g.ListNode)(t("loot_function")))},{context:"loot_table"}),{default:()=>({pools:[{rolls:1,entries:[{type:"minecraft:item",name:"minecraft:stone"}]}]})}));const C={enabled:y=>{var R;return((R=y.pop().get())===null||R===void 0?void 0:R.length)>1&&!["minecraft:alternatives","minecraft:group","minecraft:sequence"].includes(y.push("type").get())}};o.register("loot_entry",(0,g.Mod)((0,g.ObjectNode)({type:r({validator:"resource",params:{pool:"loot_pool_entry_type"}}),weight:(0,g.Opt)((0,g.Mod)((0,g.NumberNode)({integer:!0}),C)),quality:(0,g.Opt)((0,g.Mod)((0,g.NumberNode)({integer:!0}),C)),[g.Switch]:[{push:"type"}],[g.Case]:{"minecraft:alternatives":{children:(0,g.ListNode)(t("loot_entry")),...n},"minecraft:dynamic":{name:r(),...n},"minecraft:group":{children:(0,g.ListNode)(t("loot_entry")),...n},"minecraft:item":{name:r({validator:"resource",params:{pool:"item"}}),...n},"minecraft:loot_table":{name:r({validator:"resource",params:{pool:"$loot_table"}}),...n},"minecraft:sequence":{children:(0,g.ListNode)(t("loot_entry")),...n},"minecraft:tag":{name:r({validator:"resource",params:{pool:"$tag/item"}}),expand:(0,g.Opt)((0,g.BooleanNode)()),...n}}},{context:"loot_entry"}),{default:()=>({type:"minecraft:item",name:"minecraft:stone"})})),o.register("loot_function",(0,g.Mod)((0,g.ObjectNode)({function:k,[g.Switch]:[{push:"function"}],[g.Case]:(0,Ze.FunctionCases)(a,N,p)},{category:"function",context:"function"}),{default:()=>({function:"minecraft:set_count",count:1})})),o.register("loot_condition",(0,g.Mod)((0,g.ObjectNode)({condition:l,[g.Switch]:[{push:"condition"}],[g.Case]:(0,Ze.ConditionCases)(p)},{category:"predicate",context:"condition"}),{default:()=>({condition:"minecraft:random_chance",chance:.5})})),o.register("attribute_modifier",(0,g.Mod)((0,g.ObjectNode)({attribute:r({validator:"resource",params:{pool:"attribute"}}),name:r(),amount:t("number_provider"),operation:r({enum:["addition","multiply_base","multiply_total"]}),id:(0,g.Opt)(r({validator:"uuid"})),slot:(0,g.StringOrList)(r({enum:"slot"}))},{context:"attribute_modifier"}),{default:()=>({attribute:"minecraft:generic.max_health",name:"",amount:1,operation:"addition",slot:"mainhand"})}))}xe.initLootTableSchemas=ht;var we={};Object.defineProperty(we,"__esModule",{value:!0});we.initPackMcmetaSchemas=void 0;const I=O(),J=10;function yt(o,e){const t=I.Reference.bind(void 0,o),r=I.StringNode.bind(void 0,e);o.register("pack_mcmeta",(0,I.Mod)((0,I.ObjectNode)({pack:(0,I.Mod)((0,I.ObjectNode)({pack_format:(0,I.Mod)((0,I.NumberNode)({integer:!0,min:J,max:J}),{default:()=>J,canUpdate:(a,n)=>n!==J,update:()=>[{name:"pack_format",params:[J],newValue:J}]}),description:t("text_component")}),{default:()=>({pack_format:J,description:""})}),filter:(0,I.Opt)((0,I.ObjectNode)({block:(0,I.ListNode)((0,I.ObjectNode)({namespace:(0,I.Opt)(r({validator:"regex_pattern"})),path:(0,I.Opt)(r({validator:"regex_pattern"}))}))}))}),{default:()=>({pack:{pack_format:J,description:""}})}))}we.initPackMcmetaSchemas=yt;var Se={};Object.defineProperty(Se,"__esModule",{value:!0});Se.initPredicatesSchemas=void 0;const c=O();function vt(o,e){const t=c.Reference.bind(void 0,o),r=c.StringNode.bind(void 0,e),a=(0,c.ChoiceNode)([{type:"string",node:r(),change:n=>typeof n=="boolean"||typeof n=="number"?n.toString():""},{type:"number",node:(0,c.NumberNode)(),change:n=>typeof n=="string"?parseInt(n):0},{type:"object",node:(0,c.ObjectNode)({min:(0,c.Opt)((0,c.NumberNode)({integer:!0})),max:(0,c.Opt)((0,c.NumberNode)({integer:!0}))}),change:n=>typeof n=="number"?{min:n,max:n}:{}},{type:"boolean",node:(0,c.BooleanNode)(),change:n=>n==="true"||n===1}]);o.register("item_predicate",(0,c.ObjectNode)({items:(0,c.Opt)((0,c.ListNode)(r({validator:"resource",params:{pool:"item"}}))),tag:(0,c.Opt)(r({validator:"resource",params:{pool:"$tag/item"}})),count:t("int_bounds"),durability:t("int_bounds"),potion:(0,c.Opt)(r({validator:"resource",params:{pool:"potion"}})),nbt:(0,c.Opt)(r({validator:"nbt",params:{registry:{category:"minecraft:item",id:["pop",{push:"item"}]}}})),enchantments:(0,c.Opt)((0,c.ListNode)(t("enchantment_predicate")))},{context:"item"})),o.register("enchantment_predicate",(0,c.ObjectNode)({enchantment:(0,c.Opt)(r({validator:"resource",params:{pool:"enchantment"}})),levels:t("int_bounds")},{context:"enchantment"})),o.register("block_predicate",(0,c.ObjectNode)({blocks:(0,c.Opt)((0,c.ListNode)(r({validator:"resource",params:{pool:"block"}}))),tag:(0,c.Opt)(r({validator:"resource",params:{pool:"$tag/block"}})),nbt:(0,c.Opt)(r({validator:"nbt",params:{registry:{category:"minecraft:block",id:["pop",{push:"block"}]}}})),state:(0,c.Opt)((0,c.MapNode)(r(),a,{validation:{validator:"block_state_map",params:{id:["pop",{push:"block"}]}}}))},{context:"block"})),o.register("fluid_predicate",(0,c.ObjectNode)({fluid:(0,c.Opt)(r({validator:"resource",params:{pool:"fluid"}})),tag:(0,c.Opt)(r({validator:"resource",params:{pool:"$tag/fluid"}})),state:(0,c.Opt)((0,c.MapNode)(r(),a))},{context:"fluid"})),o.register("location_predicate",(0,c.ObjectNode)({position:(0,c.Opt)((0,c.ObjectNode)({x:t("float_bounds"),y:t("float_bounds"),z:t("float_bounds")})),biome:(0,c.Opt)(r({validator:"resource",params:{pool:"$worldgen/biome"}})),"lychee:biome_tag":(0,c.Opt)(r({validator:"resource",params:{pool:"$tag/worldgen/biome"}})),structure:(0,c.Opt)(r({validator:"resource",params:{pool:"$worldgen/structure"}})),dimension:(0,c.Opt)(r({validator:"resource",params:{pool:"$dimension"}})),light:(0,c.Opt)((0,c.ObjectNode)({light:t("int_bounds")})),smokey:(0,c.Opt)((0,c.BooleanNode)()),block:(0,c.Opt)(t("block_predicate")),fluid:(0,c.Opt)(t("fluid_predicate"))},{context:"location"})),o.register("statistic_predicate",(0,c.ObjectNode)({type:r({validator:"resource",params:{pool:"stat_type"}}),stat:r(),value:t("int_bounds"),[c.Switch]:[{push:"type"}],[c.Case]:{"minecraft:mined":{stat:r({validator:"resource",params:{pool:"block"}})},"minecraft:crafted":{stat:r({validator:"resource",params:{pool:"item"}})},"minecraft:used":{stat:r({validator:"resource",params:{pool:"item"}})},"minecraft:broken":{stat:r({validator:"resource",params:{pool:"item"}})},"minecraft:picked_up":{stat:r({validator:"resource",params:{pool:"item"}})},"minecraft:dropped":{stat:r({validator:"resource",params:{pool:"item"}})},"minecraft:killed":{stat:r({validator:"resource",params:{pool:"entity_type"}})},"minecraft:killed_by":{stat:r({validator:"resource",params:{pool:"entity_type"}})},"minecraft:custom":{stat:r({validator:"resource",params:{pool:"custom_stat"}})}}})),o.register("status_effect_predicate",(0,c.ObjectNode)({amplifier:t("int_bounds"),duration:t("int_bounds"),ambient:(0,c.Opt)((0,c.BooleanNode)()),visible:(0,c.Opt)((0,c.BooleanNode)())},{context:"status_effect"})),o.register("distance_predicate",(0,c.ObjectNode)({x:t("float_bounds"),y:t("float_bounds"),z:t("float_bounds"),absolute:t("float_bounds"),horizontal:t("float_bounds")},{context:"distance"})),o.register("entity_predicate",(0,c.ObjectNode)({type:(0,c.Opt)(r({validator:"resource",params:{pool:"entity_type",allowTag:!0}})),type_specific:(0,c.Opt)((0,c.ObjectNode)({type:r({enum:"type_specific_type"}),[c.Switch]:[{push:"type"}],[c.Case]:{cat:{variant:(0,c.Opt)(r({validator:"resource",params:{pool:"cat_variant"}}))},fishing_hook:{in_open_water:(0,c.Opt)((0,c.BooleanNode)())},frog:{variant:(0,c.Opt)(r({validator:"resource",params:{pool:"frog_variant"}}))},lightning:{blocks_set_on_fire:(0,c.Opt)(t("int_bounds")),entity_struck:(0,c.Opt)(t("entity_predicate"))},player:{gamemode:(0,c.Opt)(r({enum:"gamemode"})),level:t("int_bounds"),advancements:(0,c.Opt)((0,c.MapNode)(r({validator:"resource",params:{pool:"$advancement"}}),(0,c.ChoiceNode)([{type:"boolean",node:(0,c.BooleanNode)(),change:()=>!0},{type:"object",node:(0,c.MapNode)(r(),(0,c.BooleanNode)())}]))),recipes:(0,c.Opt)((0,c.MapNode)(r({validator:"resource",params:{pool:"$recipe"}}),(0,c.BooleanNode)())),stats:(0,c.Opt)((0,c.ListNode)(t("statistic_predicate"))),looking_at:(0,c.Opt)(t("entity_predicate"))},slime:{size:t("int_bounds")}}})),nbt:(0,c.Opt)(r({validator:"nbt",params:{registry:{category:"minecraft:entity",id:["pop",{push:"type"}]}}})),team:(0,c.Opt)(r({validator:"team"})),location:(0,c.Opt)(t("location_predicate")),stepping_on:(0,c.Opt)(t("location_predicate")),distance:(0,c.Opt)(t("distance_predicate")),flags:(0,c.Opt)((0,c.ObjectNode)({is_on_fire:(0,c.Opt)((0,c.BooleanNode)()),is_sneaking:(0,c.Opt)((0,c.BooleanNode)()),is_sprinting:(0,c.Opt)((0,c.BooleanNode)()),is_swimming:(0,c.Opt)((0,c.BooleanNode)()),is_baby:(0,c.Opt)((0,c.BooleanNode)())})),equipment:(0,c.Opt)((0,c.MapNode)(r({enum:"slot"}),t("item_predicate"))),vehicle:(0,c.Opt)(t("entity_predicate")),passenger:(0,c.Opt)(t("entity_predicate")),targeted_entity:(0,c.Opt)(t("entity_predicate")),effects:(0,c.Opt)((0,c.MapNode)(r({validator:"resource",params:{pool:"mob_effect"}}),t("status_effect_predicate")))},{context:"entity"})),o.register("damage_source_predicate",(0,c.ObjectNode)({is_explosion:(0,c.Opt)((0,c.BooleanNode)()),is_fire:(0,c.Opt)((0,c.BooleanNode)()),is_magic:(0,c.Opt)((0,c.BooleanNode)()),is_projectile:(0,c.Opt)((0,c.BooleanNode)()),is_lightning:(0,c.Opt)((0,c.BooleanNode)()),bypasses_armor:(0,c.Opt)((0,c.BooleanNode)()),bypasses_invulnerability:(0,c.Opt)((0,c.BooleanNode)()),bypasses_magic:(0,c.Opt)((0,c.BooleanNode)()),source_entity:(0,c.Opt)(t("entity_predicate")),direct_entity:(0,c.Opt)(t("entity_predicate"))},{context:"damage_source"})),o.register("damage_predicate",(0,c.ObjectNode)({dealt:t("float_bounds"),taken:t("float_bounds"),blocked:(0,c.Opt)((0,c.BooleanNode)()),source_entity:(0,c.Opt)(t("entity_predicate")),type:(0,c.Opt)(t("damage_source_predicate"))},{context:"damage"}))}Se.initPredicatesSchemas=vt;var je={};Object.defineProperty(je,"__esModule",{value:!0});je.initRecipeSchemas=void 0;const f=O();function Ot(o,e){const t=f.Reference.bind(void 0,o),r=f.StringNode.bind(void 0,e);o.register("recipe",(0,f.Mod)((0,f.ObjectNode)({type:r({validator:"resource",params:{pool:"recipe_serializer"}}),[f.Switch]:[{push:"type"}],[f.Case]:{"minecraft:crafting_shaped":{group:(0,f.Opt)(r({enum:"recipe_group",additional:!0})),pattern:(0,f.ListNode)(r()),key:(0,f.MapNode)(r(),t("recipe_ingredient")),result:t("recipe_result")},"minecraft:crafting_shapeless":{group:(0,f.Opt)(r()),ingredients:(0,f.ListNode)(t("recipe_ingredient")),result:t("recipe_result")},"minecraft:smelting":{group:(0,f.Opt)(r()),ingredient:t("recipe_ingredient"),result:r({validator:"resource",params:{pool:"item"}}),experience:(0,f.Opt)((0,f.NumberNode)()),cookingtime:(0,f.Opt)((0,f.Mod)((0,f.NumberNode)({integer:!0}),{default:()=>200}))},"minecraft:blasting":{group:(0,f.Opt)(r()),ingredient:t("recipe_ingredient"),result:r({validator:"resource",params:{pool:"item"}}),experience:(0,f.Opt)((0,f.NumberNode)()),cookingtime:(0,f.Opt)((0,f.Mod)((0,f.NumberNode)({integer:!0}),{default:()=>100}))},"minecraft:smoking":{group:(0,f.Opt)(r()),ingredient:t("recipe_ingredient"),result:r({validator:"resource",params:{pool:"item"}}),experience:(0,f.Opt)((0,f.NumberNode)()),cookingtime:(0,f.Opt)((0,f.Mod)((0,f.NumberNode)({integer:!0}),{default:()=>100}))},"minecraft:campfire_cooking":{group:(0,f.Opt)(r()),ingredient:t("recipe_ingredient"),result:r({validator:"resource",params:{pool:"item"}}),experience:(0,f.Opt)((0,f.NumberNode)()),cookingtime:(0,f.Opt)((0,f.Mod)((0,f.NumberNode)({integer:!0}),{default:()=>100}))},"minecraft:stonecutting":{group:(0,f.Opt)(r()),ingredient:t("recipe_ingredient"),result:r({validator:"resource",params:{pool:"item"}}),count:(0,f.NumberNode)({integer:!0})},"minecraft:smithing":{group:(0,f.Opt)(r()),base:t("recipe_ingredient_object"),addition:t("recipe_ingredient_object"),result:t("recipe_result")}}},{context:"recipe",disableSwitchContext:!0}),{default:()=>({type:"minecraft:crafting_shaped"})})),o.register("recipe_ingredient",(0,f.Mod)((0,f.ChoiceNode)([{type:"object",node:t("recipe_ingredient_object"),change:a=>a[0]},{type:"list",node:(0,f.ListNode)(t("recipe_ingredient_object")),change:a=>[a]}]),{default:()=>({item:"minecraft:stone"})})),o.register("recipe_ingredient_object",(0,f.Mod)((0,f.ObjectNode)({item:(0,f.Opt)(r({validator:"resource",params:{pool:"item"}})),tag:(0,f.Opt)(r({validator:"resource",params:{pool:"$tag/item"}}))}),{default:()=>({item:"minecraft:stone"})})),o.register("recipe_result",(0,f.Mod)((0,f.ObjectNode)({item:r({validator:"resource",params:{pool:"item"}}),count:(0,f.Opt)((0,f.Mod)((0,f.NumberNode)({integer:!0}),{default:()=>1}))}),{default:()=>({item:"minecraft:stone"})}))}je.initRecipeSchemas=Ot;var Ce={};Object.defineProperty(Ce,"__esModule",{value:!0});Ce.initTagsSchemas=void 0;const Z=O();function kt(o,e){const t=Z.StringNode.bind(void 0,e),r=a=>(0,Z.Mod)((0,Z.ObjectNode)({replace:(0,Z.Opt)((0,Z.BooleanNode)()),values:(0,Z.ListNode)((0,Z.ChoiceNode)([{type:"string",node:t({validator:"resource",params:{pool:a,allowTag:!0}}),change:n=>n.id},{type:"object",node:(0,Z.ObjectNode)({id:t({validator:"resource",params:{pool:a,allowTag:!0,allowUnknown:!0}}),required:(0,Z.BooleanNode)()}),change:n=>({id:n})}]))},{context:"tag"}),{default:()=>({values:[]})});o.register("block_tag",r("block")),o.register("entity_type_tag",r("entity_type")),o.register("fluid_tag",r("fluid")),o.register("function_tag",r("$function")),o.register("game_event_tag",r("game_event")),o.register("item_tag",r("item")),o.register("advancement_tag",r("$advancement")),o.register("chat_type_tag",r("$chat_type")),o.register("dimension_tag",r("$dimension")),o.register("dimension_type_tag",r("$dimension_type")),o.register("function_tag",r("$function")),o.register("item_modifier_tag",r("$item_modifier")),o.register("loot_table_tag",r("$loot_table")),o.register("predicate_tag",r("$predicate")),o.register("recipe_tag",r("$recipe")),o.register("structure_tag",r("$structure")),o.register("biome_tag",r("$worldgen/biome")),o.register("configured_carver_tag",r("$worldgen/configured_carver")),o.register("configured_feature_tag",r("$worldgen/configured_feature")),o.register("structure_tag",r("$worldgen/structure")),o.register("configured_surface_builder_tag",r("$worldgen/configured_surface_builder")),o.register("density_function_tag",r("$worldgen/density_function")),o.register("flat_level_generator_preset_tag",r("$worldgen/flat_level_generator_preset")),o.register("noise_tag",r("$worldgen/noise")),o.register("noise_settings_tag",r("$worldgen/noise_settings")),o.register("placed_feature_tag",r("$worldgen/placed_feature")),o.register("processor_list_tag",r("$worldgen/processor_list")),o.register("structure_set_tag",r("$worldgen/structure_set")),o.register("template_pool_tag",r("$worldgen/template_pool")),o.register("world_preset_tag",r("$worldgen/world_preset")),o.register("banner_pattern_tag",r("banner_pattern")),o.register("cat_variant_tag",r("cat_variant")),o.register("instrument_tag",r("instrument")),o.register("painting_variant_tag",r("painting_variant")),o.register("point_of_interest_type_tag",r("point_of_interest_type"))}Ce.initTagsSchemas=kt;var Me={};Object.defineProperty(Me,"__esModule",{value:!0});Me.initTextComponentSchemas=void 0;const u=O();function xt(o,e){const t=u.Reference.bind(void 0,o),r=u.StringNode.bind(void 0,e),a=l=>{var k;return l instanceof Array?a(l[0]):(k=l==null?void 0:l.text)!==null&&k!==void 0?k:typeof l=="object"?"":l==null?void 0:l.toString()};o.register("text_component",(0,u.Mod)((0,u.ChoiceNode)([{type:"object",node:t("text_component_object"),change:l=>l instanceof Array?typeof l[0]=="object"?l[0]:{text:a(l[0])}:typeof l=="object"?l:{text:a(l)}},{type:"list",node:t("text_component_list"),change:l=>[l]},{type:"string",priority:1,node:r(),change:a},{type:"number",node:(0,u.NumberNode)(),change:l=>{const k=parseFloat(a(l));return isFinite(k)?k:l?1:0}},{type:"boolean",node:(0,u.BooleanNode)(),change:l=>{const k=a(l);return k==="true"||k==="false"?k==="true":!!k}}],{context:"text_component"}),{default:()=>({text:""})}));const n={color:(0,u.Opt)(r()),font:(0,u.Opt)(r()),bold:(0,u.Opt)((0,u.BooleanNode)()),italic:(0,u.Opt)((0,u.BooleanNode)()),underlined:(0,u.Opt)((0,u.BooleanNode)()),strikethrough:(0,u.Opt)((0,u.BooleanNode)()),obfuscated:(0,u.Opt)((0,u.BooleanNode)()),insertion:(0,u.Opt)(r())};o.register("text_style",(0,u.ObjectNode)({...n},{context:"text_component_object"}));const d={...n,clickEvent:(0,u.Opt)((0,u.ObjectNode)({action:r({enum:["open_url","open_file","run_command","suggest_command","change_page","copy_to_clipboard"]}),[u.Switch]:[{push:"action"}],[u.Case]:{change_page:{value:r()},copy_to_clipboard:{value:r()},open_file:{value:r()},open_url:{value:r()},run_command:{value:r({validator:"command",params:{leadingSlash:!0,allowPartial:!0}})},suggest_command:{value:r({validator:"command",params:{leadingSlash:!0,allowPartial:!0}})}}})),hoverEvent:(0,u.Opt)((0,u.ObjectNode)({action:r({enum:["show_text","show_item","show_entity"]}),[u.Switch]:[{push:"action"}],[u.Case]:{show_text:{value:(0,u.Opt)(t("text_component")),contents:(0,u.Opt)(t("text_component"))},show_item:{value:(0,u.Opt)(r({validator:"nbt",params:{module:"util::InventoryItem"}})),contents:(0,u.Opt)((0,u.ObjectNode)({id:r({validator:"resource",params:{pool:"item"}}),count:(0,u.Opt)((0,u.NumberNode)({integer:!0})),tag:(0,u.Opt)(r({validator:"nbt",params:{registry:{category:"minecraft:item",id:["pop",{push:"id"}]}}}))}))},show_entity:{value:(0,u.Opt)((0,u.ObjectNode)({name:(0,u.Opt)(r()),type:(0,u.Opt)(r()),id:(0,u.Opt)(r())})),contents:(0,u.Opt)((0,u.Mod)((0,u.ObjectNode)({name:(0,u.Opt)(t("text_component")),type:r({validator:"resource",params:{pool:"entity_type"}}),id:r({validator:"uuid"})}),{default:()=>({type:"minecraft:pig",id:"00000001-0001-0001-0001-000000000001"})}))}}})),extra:(0,u.Opt)(t("text_component_list"))};o.register("text_component_object",(0,u.Mod)((0,u.ChoiceNode)([{type:"text",match:l=>typeof l=="object",change:l=>({text:""}),priority:-1,node:(0,u.ObjectNode)({text:r(),...d})},{type:"translation",match:l=>(l==null?void 0:l.translate)!==void 0,change:l=>({translate:""}),node:(0,u.ObjectNode)({translate:r(),with:(0,u.Opt)(t("text_component_list")),...d})},{type:"score",match:l=>(l==null?void 0:l.score)!==void 0,change:l=>({score:{}}),node:(0,u.ObjectNode)({score:(0,u.ObjectNode)({name:r({validator:"entity",params:{amount:"single",type:"entities",isScoreHolder:!0}}),objective:r({validator:"objective"}),value:(0,u.Opt)(r())}),...d})},{type:"selector",match:l=>(l==null?void 0:l.selector)!==void 0,change:l=>({selector:""}),node:(0,u.ObjectNode)({selector:r({validator:"entity",params:{amount:"multiple",type:"entities"}}),separator:(0,u.Opt)(t("text_component")),...d})},{type:"keybind",match:l=>(l==null?void 0:l.keybind)!==void 0,change:l=>({keybind:""}),node:(0,u.ObjectNode)({keybind:r({enum:"keybind",additional:!0}),...d})},{type:"nbt",match:l=>(l==null?void 0:l.nbt)!==void 0,change:l=>({nbt:""}),node:(0,u.ObjectNode)({nbt:r({validator:"nbt_path"}),block:(0,u.Opt)(r({validator:"vector",params:{dimension:3,isInteger:!0}})),entity:(0,u.Opt)(r({validator:"entity",params:{amount:"multiple",type:"entities"}})),storage:(0,u.Opt)(r({validator:"resource",params:{pool:"$storage"}})),interpret:(0,u.Opt)((0,u.BooleanNode)()),separator:(0,u.Opt)(t("text_component")),...d})}],{context:"text_component_object",choiceContext:"text_component.object"}),{default:()=>({text:""})})),o.register("text_component_list",(0,u.Mod)((0,u.ListNode)(t("text_component")),{default:()=>[{text:""}]}))}Me.initTextComponentSchemas=xt;var Le={},Ve={};(function(o){Object.defineProperty(o,"__esModule",{value:!0}),o.initBiomeSchemas=o.MobCategorySpawnSettings=void 0;const e=O(),t=q;function r(a,n){const d=e.StringNode.bind(void 0,n);o.MobCategorySpawnSettings=(0,e.Mod)((0,e.ListNode)((0,e.ObjectNode)({type:d({validator:"resource",params:{pool:"entity_type"}}),weight:(0,e.NumberNode)({integer:!0}),minCount:(0,e.NumberNode)({integer:!0}),maxCount:(0,e.NumberNode)({integer:!0})})),{category:()=>"pool",default:()=>[{type:"minecraft:bat",weight:1}]}),a.register("biome",(0,e.Mod)((0,e.ObjectNode)({temperature:(0,e.NumberNode)(),downfall:(0,e.NumberNode)(),precipitation:d({enum:["none","rain","snow"]}),temperature_modifier:(0,e.Opt)(d({enum:["none","frozen"]})),creature_spawn_probability:(0,e.Opt)((0,e.NumberNode)({min:0,max:1})),effects:(0,e.ObjectNode)({sky_color:(0,e.NumberNode)({color:!0}),fog_color:(0,e.NumberNode)({color:!0}),water_color:(0,e.NumberNode)({color:!0}),water_fog_color:(0,e.NumberNode)({color:!0}),grass_color:(0,e.Opt)((0,e.NumberNode)({color:!0})),foliage_color:(0,e.Opt)((0,e.NumberNode)({color:!0})),grass_color_modifier:(0,e.Opt)(d({enum:["none","dark_forest","swamp"]})),ambient_sound:(0,e.Opt)(d()),mood_sound:(0,e.Opt)((0,e.ObjectNode)({sound:d(),tick_delay:(0,e.NumberNode)({integer:!0}),block_search_extent:(0,e.NumberNode)({integer:!0}),offset:(0,e.NumberNode)()})),additions_sound:(0,e.Opt)((0,e.ObjectNode)({sound:d(),tick_chance:(0,e.NumberNode)({min:0,max:1})})),music:(0,e.Opt)((0,e.ObjectNode)({sound:d(),min_delay:(0,e.NumberNode)({integer:!0,min:0}),max_delay:(0,e.NumberNode)({integer:!0,min:0}),replace_current_music:(0,e.BooleanNode)()})),particle:(0,e.Opt)((0,e.ObjectNode)({options:(0,e.ObjectNode)({type:d()}),probability:(0,e.NumberNode)({min:0,max:1})}))}),spawners:(0,e.MapNode)(d({enum:"mob_category"}),o.MobCategorySpawnSettings),spawn_costs:(0,e.MapNode)(d({validator:"resource",params:{pool:"entity_type"}}),(0,e.Mod)((0,e.ObjectNode)({energy_budget:(0,e.NumberNode)(),charge:(0,e.NumberNode)()},{category:"function"}),{default:()=>({energy_budget:.12,charge:1})})),carvers:(0,e.MapNode)(d({enum:["air","liquid"]}),(0,e.Mod)((0,t.Tag)({resource:"$worldgen/configured_carver",inlineSchema:"configured_carver"}),{default:()=>["minecraft:cave"]})),features:(0,e.ListNode)((0,e.Mod)((0,t.Tag)({resource:"$worldgen/placed_feature",inlineSchema:"placed_feature"}),{category:()=>"predicate"}),{maxLength:11})},{context:"biome"}),{default:()=>({temperature:.8,downfall:.4,precipitation:"rain",category:"plains",effects:{sky_color:7907327,fog_color:12638463,water_color:4159204,water_fog_color:329011}})}))}o.initBiomeSchemas=r})(Ve);var Pe={};Object.defineProperty(Pe,"__esModule",{value:!0});Pe.initCarverSchemas=void 0;const z=O(),G=q;function wt(o,e){const t=z.Reference.bind(void 0,o),r=z.StringNode.bind(void 0,e),a={vertical_rotation:(0,G.FloatProvider)(),shape:(0,z.ObjectNode)({distance_factor:(0,G.FloatProvider)(),thickness:(0,G.FloatProvider)(),width_smoothness:(0,z.NumberNode)({integer:!0,min:0}),horizontal_radius_factor:(0,G.FloatProvider)(),vertical_radius_default_factor:(0,z.NumberNode)(),vertical_radius_center_factor:(0,z.NumberNode)()})},n={horizontal_radius_multiplier:(0,G.FloatProvider)(),vertical_radius_multiplier:(0,G.FloatProvider)(),floor_level:(0,G.FloatProvider)({min:-1,max:1})};o.register("configured_carver",(0,z.Mod)((0,z.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/carver"}}),config:(0,z.ObjectNode)({probability:(0,z.NumberNode)({min:0,max:1}),y:t("height_provider"),yScale:(0,G.FloatProvider)(),lava_level:t("vertical_anchor"),replaceable:(0,G.Tag)({resource:"block"}),debug_settings:(0,z.Opt)((0,z.ObjectNode)({debug_mode:(0,z.Opt)((0,z.BooleanNode)()),air_state:(0,z.Opt)(t("block_state")),water_state:(0,z.Opt)(t("block_state")),lava_state:(0,z.Opt)(t("block_state")),barrier_state:(0,z.Opt)(t("block_state"))})),[z.Switch]:["pop",{push:"type"}],[z.Case]:{"minecraft:canyon":a,"minecraft:cave":n,"minecraft:nether_cave":n}})},{context:"carver"}),{default:()=>({type:"minecraft:cave",config:{probability:.1}})}))}Pe.initCarverSchemas=wt;var $e={};Object.defineProperty($e,"__esModule",{value:!0});$e.initDecoratorSchemas=void 0;const F=O(),me=q;function St(o,e){const t=F.Reference.bind(void 0,o),r=F.StringNode.bind(void 0,e);o.register("decorator",(0,F.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/placement_modifier_type"}}),[F.Switch]:[{push:"type"}],[F.Case]:{"minecraft:block_predicate_filter":{predicate:t("block_predicate_worldgen")},"minecraft:carving_mask":{step:r({enum:"generation_step"})},"minecraft:rarity_filter":{chance:(0,F.NumberNode)({integer:!0,min:0})},"minecraft:count":{count:(0,me.IntProvider)({min:0,max:256})},"minecraft:count_on_every_layer":{count:(0,me.IntProvider)({min:0,max:256})},"minecraft:noise_threshold_count":{noise_level:(0,F.NumberNode)(),below_noise:(0,F.NumberNode)({integer:!0}),above_noise:(0,F.NumberNode)({integer:!0})},"minecraft:noise_based_count":{noise_to_count_ratio:(0,F.NumberNode)({integer:!0}),noise_factor:(0,F.NumberNode)(),noise_offset:(0,F.Opt)((0,F.NumberNode)())},"minecraft:environment_scan":{direction_of_search:r({enum:["up","down"]}),max_steps:(0,F.NumberNode)({integer:!0,min:1,max:32}),target_condition:t("block_predicate_worldgen"),allowed_search_condition:(0,F.Opt)(t("block_predicate_worldgen"))},"minecraft:heightmap":{heightmap:r({enum:"heightmap_type"})},"minecraft:height_range":{height:t("height_provider")},"minecraft:random_offset":{xz_spread:(0,me.IntProvider)({min:-16,max:16}),y_spread:(0,me.IntProvider)({min:-16,max:16})},"minecraft:surface_relative_threshold_filter":{heightmap:r({enum:"heightmap_type"}),min_inclusive:(0,F.Opt)((0,F.NumberNode)({integer:!0})),max_inclusive:(0,F.Opt)((0,F.NumberNode)({integer:!0}))},"minecraft:surface_water_depth_filter":{max_water_depth:(0,F.NumberNode)({integer:!0})}}},{context:"decorator",category:"predicate"}))}$e.initDecoratorSchemas=St;var Xe={};(function(o){Object.defineProperty(o,"__esModule",{value:!0}),o.initDensityFunctionSchemas=o.DensityFunction=void 0;const e=O();function t(r,a){const n=e.StringNode.bind(void 0,a),d=e.Reference.bind(void 0,r);o.DensityFunction=(0,e.Mod)((0,e.ChoiceNode)([{type:"number",node:(0,e.NumberNode)(),change:()=>0},{type:"string",priority:1,node:n({validator:"resource",params:{pool:"$worldgen/density_function"}}),change:()=>{}},{type:"object",node:d("density_function"),change:()=>({})}],{choiceContext:"density_function"}),{default:()=>0});const l=(0,e.NumberNode)({min:-1e6,max:1e6}),k=(0,e.NumberNode)({integer:!0,min:-2032*2,max:2031*2});r.register("density_function",(0,e.Mod)((0,e.ObjectNode)({type:n({validator:"resource",params:{pool:"worldgen/density_function_type"}}),[e.Switch]:[{push:"type"}],[e.Case]:{"minecraft:abs":{argument:o.DensityFunction},"minecraft:add":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:blend_density":{argument:o.DensityFunction},"minecraft:cache_2d":{argument:o.DensityFunction},"minecraft:cache_all_in_cell":{argument:o.DensityFunction},"minecraft:cache_once":{argument:o.DensityFunction},"minecraft:clamp":{input:o.DensityFunction,min:l,max:l},"minecraft:constant":{argument:(0,e.NumberNode)()},"minecraft:cube":{argument:o.DensityFunction},"minecraft:flat_cache":{argument:o.DensityFunction},"minecraft:half_negative":{argument:o.DensityFunction},"minecraft:interpolated":{argument:o.DensityFunction},"minecraft:max":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:min":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:mul":{argument1:o.DensityFunction,argument2:o.DensityFunction},"minecraft:noise":{noise:n({validator:"resource",params:{pool:"$worldgen/noise"}}),xz_scale:(0,e.NumberNode)(),y_scale:(0,e.NumberNode)()},"minecraft:old_blended_noise":{xz_scale:(0,e.NumberNode)(),y_scale:(0,e.NumberNode)(),xz_factor:(0,e.NumberNode)(),y_factor:(0,e.NumberNode)(),smear_scale_multiplier:(0,e.NumberNode)({min:1,max:8})},"minecraft:quarter_negative":{argument:o.DensityFunction},"minecraft:range_choice":{input:o.DensityFunction,min_inclusive:l,max_exclusive:l,when_in_range:o.DensityFunction,when_out_of_range:o.DensityFunction},"minecraft:shift":{argument:n({validator:"resource",params:{pool:"$worldgen/noise"}})},"minecraft:shift_a":{argument:n({validator:"resource",params:{pool:"$worldgen/noise"}})},"minecraft:shift_b":{argument:n({validator:"resource",params:{pool:"$worldgen/noise"}})},"minecraft:shifted_noise":{noise:n({validator:"resource",params:{pool:"$worldgen/noise"}}),xz_scale:(0,e.NumberNode)(),y_scale:(0,e.NumberNode)(),shift_x:o.DensityFunction,shift_y:o.DensityFunction,shift_z:o.DensityFunction},"minecraft:slide":{argument:o.DensityFunction},"minecraft:spline":{spline:d("cubic_spline")},"minecraft:square":{argument:o.DensityFunction},"minecraft:squeeze":{argument:o.DensityFunction},"minecraft:weird_scaled_sampler":{rarity_value_mapper:n({enum:["type_1","type_2"]}),noise:n({validator:"resource",params:{pool:"$worldgen/noise"}}),input:o.DensityFunction},"minecraft:y_clamped_gradient":{from_y:k,to_y:k,from_value:l,to_value:l}}},{context:"density_function",disableSwitchContext:!0}),{default:()=>({type:"minecraft:noise",noise:"minecraft:cave_entrance",xz_scale:.75,y_scale:.5})})),r.register("cubic_spline",(0,e.Mod)((0,e.ChoiceNode)([{type:"number",node:(0,e.NumberNode)()},{type:"object",node:(0,e.ObjectNode)({coordinate:o.DensityFunction,points:(0,e.ListNode)((0,e.ObjectNode)({location:(0,e.NumberNode)(),derivative:(0,e.NumberNode)(),value:d("cubic_spline")}))},{category:"function"})}],{context:"terrain_spline",choiceContext:"terrain_spline"}),{default:()=>0}))}o.initDensityFunctionSchemas=t})(Xe);var Be={},ee={};Object.defineProperty(ee,"__esModule",{value:!0});ee.initProcessorListSchemas=ee.Processors=void 0;const v=O(),jt=q;function Ct(o,e){const t=v.Reference.bind(void 0,o),r=v.StringNode.bind(void 0,e);ee.Processors=(0,v.ChoiceNode)([{type:"string",node:r({validator:"resource",params:{pool:"$worldgen/processor_list"}}),change:n=>{}},{type:"object",node:t("processor_list"),change:n=>({processors:[{processor_type:"minecraft:nop"}]})}]),o.register("processor_list",(0,v.Mod)((0,v.ObjectNode)({processors:(0,v.ListNode)(t("processor"))},{context:"processor_list"}),{default:()=>({processors:[{processor_type:"minecraft:rule",rules:[{location_predicate:{predicate_type:"minecraft:always_true"},input_predicate:{predicate_type:"minecraft:always_true"}}]}]})})),o.register("processor",(0,v.Mod)((0,v.ObjectNode)({processor_type:r({validator:"resource",params:{pool:"worldgen/structure_processor"}}),[v.Switch]:[{push:"processor_type"}],[v.Case]:{"minecraft:block_age":{mossiness:(0,v.NumberNode)()},"minecraft:block_ignore":{blocks:(0,v.ListNode)(t("block_state"))},"minecraft:block_rot":{integrity:(0,v.NumberNode)({min:0,max:1}),rottable_blocks:(0,v.Opt)((0,jt.Tag)({resource:"block"}))},"minecraft:gravity":{heightmap:r({enum:"heightmap_type"}),offset:(0,v.NumberNode)({integer:!0})},"minecraft:protected_blocks":{value:r({validator:"resource",params:{pool:"block",requireTag:!0}})},"minecraft:rule":{rules:(0,v.ListNode)(t("processor_rule"))}}},{category:"function",context:"processor"}),{default:()=>({processor_type:"minecraft:rule",rules:[{location_predicate:{predicate_type:"minecraft:always_true"},input_predicate:{predicate_type:"minecraft:always_true"}}]})})),o.register("processor_rule",(0,v.Mod)((0,v.ObjectNode)({position_predicate:(0,v.Opt)(t("pos_rule_test")),location_predicate:t("rule_test"),input_predicate:t("rule_test"),output_state:t("block_state"),output_nbt:(0,v.Opt)(r({validator:"nbt",params:{registry:{category:"minecraft:block"}}}))},{category:"predicate",context:"processor_rule"}),{default:()=>({location_predicate:{predicate_type:"minecraft:always_true"},input_predicate:{predicate_type:"minecraft:always_true"}})}));const a={min_dist:(0,v.Opt)((0,v.NumberNode)({min:0,max:255,integer:!0})),max_dist:(0,v.Opt)((0,v.NumberNode)({min:0,max:255,integer:!0})),min_chance:(0,v.Opt)((0,v.NumberNode)({min:0,max:1})),max_chance:(0,v.Opt)((0,v.NumberNode)({min:0,max:1}))};o.register("pos_rule_test",(0,v.ObjectNode)({predicate_type:r({validator:"resource",params:{pool:"pos_rule_test"}}),[v.Switch]:[{push:"predicate_type"}],[v.Case]:{"minecraft:axis_aligned_linear_pos":{axis:r({enum:["x","y","z"]}),...a},"minecraft:linear_pos":a}},{context:"pos_rule_test",disableSwitchContext:!0})),o.register("rule_test",(0,v.ObjectNode)({predicate_type:r({validator:"resource",params:{pool:"rule_test"}}),[v.Switch]:[{push:"predicate_type"}],[v.Case]:{"minecraft:block_match":{block:r({validator:"resource",params:{pool:"block"}})},"minecraft:blockstate_match":{block_state:t("block_state")},"minecraft:random_block_match":{block:r({validator:"resource",params:{pool:"block"}}),probability:(0,v.NumberNode)({min:0,max:1})},"minecraft:random_blockstate_match":{block_state:t("block_state"),probability:(0,v.NumberNode)({min:0,max:1})},"minecraft:tag_match":{tag:r({validator:"resource",params:{pool:"$tag/block"}})}}},{context:"rule_test",disableSwitchContext:!0}))}ee.initProcessorListSchemas=Ct;Object.defineProperty(Be,"__esModule",{value:!0});Be.initFeatureSchemas=void 0;const i=O(),b=q,Ge=ee;function Mt(o,e){const t=i.Reference.bind(void 0,o),r=i.StringNode.bind(void 0,e),a=(0,i.ChoiceNode)([{type:"string",node:r({validator:"resource",params:{pool:"$worldgen/configured_feature"}})},{type:"object",node:t("configured_feature")}],{choiceContext:"feature"}),n=(0,i.ChoiceNode)([{type:"string",node:r({validator:"resource",params:{pool:"$worldgen/placed_feature"}})},{type:"object",node:t("placed_feature")}],{choiceContext:"placed_feature"}),d={tries:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:1})),xz_spread:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0})),y_spread:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0})),feature:n},l={cap_provider:t("block_state_provider"),stem_provider:t("block_state_provider"),foliage_radius:(0,i.Opt)((0,i.NumberNode)({integer:!0}))},k=(0,i.ObjectNode)({target:t("rule_test"),state:t("block_state")}),p={size:(0,i.NumberNode)({integer:!0,min:0,max:64}),discard_chance_on_air_exposure:(0,i.NumberNode)({min:0,max:1}),targets:(0,i.ListNode)(k)},N={surface:r({enum:"cave_surface"}),depth:(0,b.IntProvider)({min:1,max:128}),vertical_range:(0,i.NumberNode)({integer:!0,min:1,max:256}),extra_bottom_block_chance:(0,i.NumberNode)({min:0,max:1}),extra_edge_column_chance:(0,i.NumberNode)({min:0,max:1}),vegetation_chance:(0,i.NumberNode)({min:0,max:1}),xz_radius:(0,b.IntProvider)(),replaceable:r({validator:"resource",params:{pool:"block",requireTag:!0}}),ground_state:t("block_state_provider"),vegetation_feature:n};o.register("configured_feature",(0,i.Mod)((0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/feature"}}),config:(0,i.ObjectNode)({[i.Switch]:["pop",{push:"type"}],[i.Case]:{"minecraft:bamboo":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:basalt_columns":{reach:(0,b.IntProvider)({min:0,max:3}),height:(0,b.IntProvider)({min:1,max:10})},"minecraft:block_column":{direction:r({enum:["up","down","north","east","south","west"]}),allowed_placement:t("block_predicate_worldgen"),prioritize_tip:(0,i.BooleanNode)(),layers:(0,i.ListNode)((0,i.ObjectNode)({height:(0,b.IntProvider)({min:0}),provider:t("block_state_provider")}))},"minecraft:block_pile":{state_provider:t("block_state_provider")},"minecraft:delta_feature":{contents:t("block_state"),rim:t("block_state"),size:(0,b.IntProvider)({min:0,max:16}),rim_size:(0,b.IntProvider)({min:0,max:16})},"minecraft:disk":{state_provider:t("rule_based_block_state_provider"),target:t("block_predicate_worldgen"),radius:(0,b.IntProvider)({min:0,max:8}),half_height:(0,i.NumberNode)({integer:!0,min:0,max:4})},"minecraft:dripstone_cluster":{floor_to_ceiling_search_range:(0,i.NumberNode)({integer:!0,min:1,max:512}),height:(0,b.IntProvider)({min:0,max:128}),radius:(0,b.IntProvider)({min:0,max:128}),max_stalagmite_stalactite_height_diff:(0,i.NumberNode)({integer:!0,min:0,max:64}),height_deviation:(0,i.NumberNode)({integer:!0,min:1,max:64}),dripstone_block_layer_thickness:(0,b.IntProvider)({min:0,max:128}),density:(0,b.FloatProvider)({min:0,max:2}),wetness:(0,b.FloatProvider)({min:0,max:2}),chance_of_dripstone_column_at_max_distance_from_center:(0,i.NumberNode)({min:0,max:1}),max_distance_from_edge_affecting_chance_of_dripstone_column:(0,i.NumberNode)({integer:!0,min:1,max:64}),max_distance_from_center_affecting_height_bias:(0,i.NumberNode)({integer:!0,min:1,max:64})},"minecraft:end_gateway":{exact:(0,i.BooleanNode)(),exit:(0,i.Opt)(t("block_pos"))},"minecraft:end_spike":{crystal_invulnerable:(0,i.Opt)((0,i.BooleanNode)()),crystal_beam_target:(0,i.Opt)(t("block_pos")),spikes:(0,i.ListNode)((0,i.ObjectNode)({centerX:(0,i.Opt)((0,i.NumberNode)({integer:!0})),centerZ:(0,i.Opt)((0,i.NumberNode)({integer:!0})),radius:(0,i.Opt)((0,i.NumberNode)({integer:!0})),height:(0,i.Opt)((0,i.NumberNode)({integer:!0})),guarded:(0,i.Opt)((0,i.BooleanNode)())}))},"minecraft:fill_layer":{state:t("block_state"),height:(0,i.NumberNode)({integer:!0,min:0,max:255})},"minecraft:flower":d,"minecraft:forest_rock":{state:t("block_state")},"minecraft:fossil":{max_empty_corners_allowed:(0,i.NumberNode)({integer:!0,min:0,max:7}),fossil_structures:(0,i.ListNode)(r({validator:"resource",params:{pool:"$structure"}})),overlay_structures:(0,i.ListNode)(r({validator:"resource",params:{pool:"$structure"}})),fossil_processors:Ge.Processors,overlay_processors:Ge.Processors},"minecraft:geode":{blocks:(0,i.ObjectNode)({filling_provider:t("block_state_provider"),inner_layer_provider:t("block_state_provider"),alternate_inner_layer_provider:t("block_state_provider"),middle_layer_provider:t("block_state_provider"),outer_layer_provider:t("block_state_provider"),inner_placements:(0,i.ListNode)(t("block_state")),cannot_replace:r({validator:"resource",params:{pool:"block",requireTag:!0}}),invalid_blocks:r({validator:"resource",params:{pool:"block",requireTag:!0}})}),layers:(0,i.ObjectNode)({filling:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50})),inner_layer:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50})),middle_layer:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50})),outer_layer:(0,i.Opt)((0,i.NumberNode)({min:.01,max:50}))}),crack:(0,i.ObjectNode)({generate_crack_chance:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),base_crack_size:(0,i.Opt)((0,i.NumberNode)({min:0,max:5})),crack_point_offset:(0,i.Opt)((0,i.NumberNode)({min:0,max:10}))}),noise_multiplier:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),use_potential_placements_chance:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),use_alternate_layer0_chance:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),placements_require_layer0_alternate:(0,i.Opt)((0,i.BooleanNode)()),outer_wall_distance:(0,i.Opt)((0,b.IntProvider)({min:1,max:20})),distribution_points:(0,i.Opt)((0,b.IntProvider)({min:1,max:20})),point_offset:(0,i.Opt)((0,b.IntProvider)({min:0,max:10})),min_gen_offset:(0,i.Opt)((0,i.NumberNode)({integer:!0})),max_gen_offset:(0,i.Opt)((0,i.NumberNode)({integer:!0})),invalid_blocks_threshold:(0,i.NumberNode)({integer:!0})},"minecraft:multiface_growth":{block:(0,i.Opt)(r({validator:"resource",params:{pool:["minecraft:glow_lichen","minecraft:sculk_vein"]}})),search_range:(0,i.Opt)((0,i.NumberNode)({min:1,max:64,integer:!0})),chance_of_spreading:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),can_place_on_floor:(0,i.Opt)((0,i.BooleanNode)()),can_place_on_ceiling:(0,i.Opt)((0,i.BooleanNode)()),can_place_on_wall:(0,i.Opt)((0,i.BooleanNode)()),can_be_placed_on:(0,b.Tag)({resource:"block"})},"minecraft:huge_brown_mushroom":l,"minecraft:huge_fungus":{hat_state:t("block_state"),decor_state:t("block_state"),stem_state:t("block_state"),valid_base_block:t("block_state"),planted:(0,i.Opt)((0,i.BooleanNode)())},"minecraft:huge_red_mushroom":l,"minecraft:iceberg":{state:t("block_state")},"minecraft:lake":{fluid:t("block_state_provider"),barrier:t("block_state_provider")},"minecraft:large_dripstone":{floor_to_ceiling_search_range:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:1,max:512})),column_radius:(0,b.IntProvider)({min:0,max:60}),height_scale:(0,b.FloatProvider)({min:0,max:20}),max_column_radius_to_cave_height_ratio:(0,i.NumberNode)({min:0,max:1}),stalactite_bluntness:(0,b.FloatProvider)({min:.1,max:10}),stalagmite_bluntness:(0,b.FloatProvider)({min:.1,max:10}),wind_speed:(0,b.FloatProvider)({min:0,max:2}),min_radius_for_wind:(0,i.NumberNode)({integer:!0,min:0,max:100}),min_bluntness_for_wind:(0,i.NumberNode)({min:0,max:5})},"minecraft:nether_forest_vegetation":{state_provider:t("block_state_provider"),spread_width:(0,i.NumberNode)({integer:!0,min:1}),spread_height:(0,i.NumberNode)({integer:!0,min:1})},"minecraft:netherrack_replace_blobs":{state:t("block_state"),target:t("block_state"),radius:(0,b.IntProvider)({min:0,max:12})},"minecraft:no_bonemeal_flower":d,"minecraft:ore":p,"minecraft:pointed_dripstone":{chance_of_taller_dripstone:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),chance_of_directional_spread:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),chance_of_spread_radius2:(0,i.Opt)((0,i.NumberNode)({min:0,max:1})),chance_of_spread_radius3:(0,i.Opt)((0,i.NumberNode)({min:0,max:1}))},"minecraft:random_patch":d,"minecraft:random_boolean_selector":{feature_false:n,feature_true:n},"minecraft:random_selector":{features:(0,i.ListNode)((0,i.ObjectNode)({chance:(0,i.NumberNode)({min:0,max:1}),feature:n})),default:n},"minecraft:replace_single_block":{targets:(0,i.ListNode)(k)},"minecraft:root_system":{required_vertical_space_for_tree:(0,i.NumberNode)({integer:!0,min:1,max:64}),root_radius:(0,i.NumberNode)({integer:!0,min:1,max:64}),root_placement_attempts:(0,i.NumberNode)({integer:!0,min:1,max:256}),root_column_max_height:(0,i.NumberNode)({integer:!0,min:1,max:4096}),hanging_root_radius:(0,i.NumberNode)({integer:!0,min:1,max:64}),hanging_roots_vertical_span:(0,i.NumberNode)({integer:!0,min:0,max:16}),hanging_root_placement_attempts:(0,i.NumberNode)({integer:!0,min:0,max:256}),allowed_vertical_water_for_tree:(0,i.NumberNode)({integer:!0,min:1,max:64}),root_replaceable:r({validator:"resource",params:{pool:"block",requireTag:!0}}),root_state_provider:t("block_state_provider"),hanging_root_state_provider:t("block_state_provider"),allowed_tree_position:t("block_predicate_worldgen"),feature:n},"minecraft:scattered_ore":p,"minecraft:sculk_patch":{charge_count:(0,i.NumberNode)({integer:!0,min:1,max:32}),amount_per_charge:(0,i.NumberNode)({integer:!0,min:1,max:500}),spread_attempts:(0,i.NumberNode)({integer:!0,min:1,max:64}),growth_rounds:(0,i.NumberNode)({integer:!0,min:0,max:8}),spread_rounds:(0,i.NumberNode)({integer:!0,min:0,max:8}),extra_rare_growths:(0,b.IntProvider)(),catalyst_chance:(0,i.NumberNode)({min:0,max:1})},"minecraft:sea_pickle":{count:(0,b.IntProvider)({min:0,max:256})},"minecraft:seagrass":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:simple_block":{to_place:t("block_state_provider")},"minecraft:simple_random_selector":{features:(0,b.Tag)({resource:"$worldgen/placed_feature",inlineSchema:"placed_feature"})},"minecraft:spring_feature":{state:t("fluid_state"),rock_count:(0,i.NumberNode)({integer:!0}),hole_count:(0,i.NumberNode)({integer:!0}),requires_block_below:(0,i.BooleanNode)(),valid_blocks:(0,b.Tag)({resource:"block"})},"minecraft:tree":{ignore_vines:(0,i.Opt)((0,i.BooleanNode)()),force_dirt:(0,i.Opt)((0,i.BooleanNode)()),minimum_size:t("feature_size"),dirt_provider:t("block_state_provider"),trunk_provider:t("block_state_provider"),foliage_provider:t("block_state_provider"),root_placer:(0,i.Opt)((0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/root_placer_type"}}),root_provider:t("block_state_provider"),trunk_offset_y:(0,b.IntProvider)(),above_root_placement:(0,i.Opt)((0,i.ObjectNode)({above_root_provider:t("block_state_provider"),above_root_placement_chance:(0,i.NumberNode)({min:0,max:1})})),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:mangrove_root_placer":{mangrove_root_placement:(0,i.ObjectNode)({max_root_width:(0,i.NumberNode)({integer:!0,min:1,max:12}),max_root_length:(0,i.NumberNode)({integer:!0,min:1,max:64}),random_skew_chance:(0,i.NumberNode)({min:0,max:1}),can_grow_through:(0,b.Tag)({resource:"block"}),muddy_roots_in:(0,b.Tag)({resource:"block"}),muddy_roots_provider:t("block_state_provider")})}}},{context:"root_placer"})),trunk_placer:(0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/trunk_placer_type"}}),base_height:(0,i.NumberNode)({integer:!0,min:0,max:32}),height_rand_a:(0,i.NumberNode)({integer:!0,min:0,max:24}),height_rand_b:(0,i.NumberNode)({integer:!0,min:0,max:24}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:bending_trunk_placer":{bend_length:(0,b.IntProvider)({min:1,max:64}),min_height_for_leaves:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:1}))},"minecraft:upwards_branching_trunk_placer":{extra_branch_steps:(0,b.IntProvider)({min:1}),extra_branch_length:(0,b.IntProvider)({min:0}),place_branch_per_log_probability:(0,i.NumberNode)({min:0,max:1}),can_grow_through:(0,b.Tag)({resource:"block"})}}},{context:"trunk_placer"}),foliage_placer:(0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/foliage_placer_type"}}),radius:(0,b.IntProvider)({min:0,max:16}),offset:(0,b.IntProvider)({min:0,max:16}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:blob_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:bush_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:fancy_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:jungle_foliage_placer":{height:(0,i.NumberNode)({integer:!0,min:0,max:16})},"minecraft:mega_pine_foliage_placer":{crown_height:(0,b.IntProvider)({min:0,max:24})},"minecraft:pine_foliage_placer":{height:(0,b.IntProvider)({min:0,max:24})},"minecraft:random_spread_foliage_placer":{foliage_height:(0,b.IntProvider)({min:1,max:512}),leaf_placement_attempts:(0,i.NumberNode)({integer:!0,min:0,max:256})},"minecraft:spruce_foliage_placer":{trunk_height:(0,b.IntProvider)({min:0,max:24})}}},{context:"foliage_placer",disableSwitchContext:!0}),decorators:(0,i.ListNode)((0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/tree_decorator_type"}}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:alter_ground":{provider:t("block_state_provider")},"minecraft:attached_to_leaves":{probability:(0,i.NumberNode)({min:0,max:1}),exclusion_radius_xz:(0,i.NumberNode)({integer:!0,min:0,max:16}),exclusion_radius_y:(0,i.NumberNode)({integer:!0,min:0,max:16}),required_empty_blocks:(0,i.NumberNode)({integer:!0,min:1,max:16}),block_provider:t("block_state_provider"),directions:(0,i.ListNode)(r({enum:"direction"}))},"minecraft:beehive":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:cocoa":{probability:(0,i.NumberNode)({min:0,max:1})},"minecraft:leave_vine":{probability:(0,i.NumberNode)({min:0,max:1})}}},{context:"tree_decorator"}))},"minecraft:twisting_vines":{spread_width:(0,i.NumberNode)({integer:!0,min:1}),spread_height:(0,i.NumberNode)({integer:!0,min:1}),max_height:(0,i.NumberNode)({integer:!0,min:1})},"minecraft:underwater_magma":{floor_search_range:(0,i.NumberNode)({integer:!0,min:0,max:512}),placement_radius_around_floor:(0,i.NumberNode)({integer:!0,min:0,max:64}),placement_probability_per_valid_position:(0,i.NumberNode)({min:0,max:1})},"minecraft:vegetation_patch":N,"minecraft:waterlogged_vegetation_patch":N}},{context:"feature"})},{context:"feature"}),{default:()=>({type:"minecraft:tree",config:{minimum_size:{type:"minecraft:two_layers_feature_size"},trunk_placer:{type:"minecraft:straight_trunk_placer",base_height:5,height_rand_a:2,height_rand_b:0},foliage_placer:{type:"minecraft:blob_foliage_placer",radius:2,offset:0,height:3}}})})),o.register("placed_feature",(0,i.Mod)((0,i.ObjectNode)({feature:a,placement:(0,i.ListNode)(t("decorator"))},{context:"placed_feature"}),{default:()=>({feature:"minecraft:oak",placement:[{type:"minecraft:count",count:4},{type:"minecraft:in_square"},{type:"minecraft:heightmap",heightmap:"OCEAN_FLOOR"}]})})),o.register("feature_size",(0,i.Mod)((0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/feature_size_type"}}),min_clipped_height:(0,i.Opt)((0,i.NumberNode)({min:0,max:80})),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:two_layers_feature_size":{limit:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:81})),lower_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16})),upper_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16}))},"minecraft:three_layers_feature_size":{limit:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:80})),upper_limit:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:80})),lower_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16})),middle_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16})),upper_size:(0,i.Opt)((0,i.NumberNode)({integer:!0,min:0,max:16}))}}},{disableSwitchContext:!0}),{default:()=>({type:"minecraft:two_layers_feature_size"})}));const C={seed:(0,i.NumberNode)({integer:!0}),noise:t("noise_parameters"),scale:(0,i.Mod)((0,i.NumberNode)({min:Number.MIN_VALUE}),{default:()=>1})};o.register("block_state_provider",(0,i.Mod)((0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"worldgen/block_state_provider_type"}}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:dual_noise_provider":{...C,variety:(0,b.InclusiveRange)({integer:!0,min:1,max:64}),slow_noise:t("noise_parameters"),slow_scale:(0,i.Mod)((0,i.NumberNode)({min:Number.MIN_VALUE}),{default:()=>1}),states:(0,i.ListNode)(t("block_state"))},"minecraft:noise_threshold_provider":{...C,threshold:(0,i.NumberNode)({min:-1,max:1}),high_chance:(0,i.NumberNode)({min:0,max:1}),default_state:t("block_state"),low_states:(0,i.ListNode)(t("block_state")),high_states:(0,i.ListNode)(t("block_state"))},"minecraft:noise_provider":{...C,states:(0,i.ListNode)(t("block_state"))},"minecraft:randomized_int_state_provider":{property:r(),values:(0,b.IntProvider)(),source:t("block_state_provider")},"minecraft:rotated_block_provider":{state:t("block_state")},"minecraft:simple_state_provider":{state:t("block_state")},"minecraft:weighted_state_provider":{entries:(0,i.ListNode)((0,i.Mod)((0,i.ObjectNode)({weight:(0,i.NumberNode)({integer:!0,min:1}),data:t("block_state")}),{default:()=>({data:{}})}))}}},{context:"block_state_provider"}),{default:()=>({type:"minecraft:simple_state_provider"})})),o.register("rule_based_block_state_provider",(0,i.Mod)((0,i.ObjectNode)({fallback:t("block_state_provider"),rules:(0,i.ListNode)((0,i.ObjectNode)({if_true:t("block_predicate_worldgen"),then:t("block_state_provider")}))},{context:"block_state_provider"}),{default:()=>({fallback:{type:"minecraft:simple_state_provider"}})}));const y={offset:(0,i.Opt)((0,i.ListNode)((0,i.NumberNode)({integer:!0,min:-16,max:16}),{minLength:3,maxLength:3}))};o.register("block_predicate_worldgen",(0,i.Mod)((0,i.ObjectNode)({type:r({validator:"resource",params:{pool:"block_predicate_type"}}),[i.Switch]:[{push:"type"}],[i.Case]:{"minecraft:all_of":{predicates:(0,i.ListNode)(t("block_predicate_worldgen"))},"minecraft:any_of":{predicates:(0,i.ListNode)(t("block_predicate_worldgen"))},"minecraft:has_sturdy_face":{...y,direction:r({enum:"direction"})},"minecraft:inside_world_bounds":{...y},"minecraft:matching_block_tag":{...y,tag:r({validator:"resource",params:{pool:"$tag/block"}})},"minecraft:matching_blocks":{...y,blocks:(0,b.Tag)({resource:"block"})},"minecraft:matching_fluids":{...y,fluids:(0,b.Tag)({resource:"fluid"})},"minecraft:not":{predicate:t("block_predicate_worldgen")},"minecraft:would_survive":{...y,state:t("block_state")}}},{context:"block_predicate"}),{default:()=>({type:"minecraft:true"})}))}Be.initFeatureSchemas=Mt;var ze={};Object.defineProperty(ze,"__esModule",{value:!0});ze.initNoiseSettingsSchemas=void 0;const L=O(),Lt=q,T=Xe;function Pt(o,e){const t=L.Reference.bind(void 0,o),r=L.StringNode.bind(void 0,e);o.register("noise_settings",(0,L.Mod)((0,L.ObjectNode)({sea_level:(0,L.NumberNode)({integer:!0}),disable_mob_generation:(0,L.BooleanNode)(),aquifers_enabled:(0,L.BooleanNode)(),ore_veins_enabled:(0,L.BooleanNode)(),legacy_random_source:(0,L.BooleanNode)(),default_block:t("block_state"),default_fluid:t("block_state"),noise:(0,L.ObjectNode)({min_y:(0,L.NumberNode)({integer:!0,min:-2048,max:2047}),height:(0,L.NumberNode)({integer:!0,min:0,max:4096}),size_horizontal:(0,L.NumberNode)({integer:!0}),size_vertical:(0,L.NumberNode)({integer:!0})}),noise_router:(0,L.ObjectNode)({barrier:T.DensityFunction,fluid_level_floodedness:T.DensityFunction,fluid_level_spread:T.DensityFunction,lava:T.DensityFunction,temperature:T.DensityFunction,vegetation:T.DensityFunction,continents:T.DensityFunction,erosion:T.DensityFunction,depth:T.DensityFunction,ridges:T.DensityFunction,initial_density_without_jaggedness:T.DensityFunction,final_density:T.DensityFunction,vein_toggle:T.DensityFunction,vein_ridged:T.DensityFunction,vein_gap:T.DensityFunction}),spawn_target:(0,L.ListNode)(t("parameter_point")),surface_rule:t("material_rule")},{context:"noise_settings"}),a=>({default:()=>Lt.DefaultNoiseSettings,validate:(n,d,l,k)=>{var p,N,C,y;return d=a.validate(n,d,l,k),((p=d==null?void 0:d.noise)===null||p===void 0?void 0:p.min_y)+((N=d==null?void 0:d.noise)===null||N===void 0?void 0:N.height)>2047&&l.add(n.push("noise").push("height"),"error.min_y_plus_height",2047),((C=d==null?void 0:d.noise)===null||C===void 0?void 0:C.height)%16!==0&&l.add(n.push("noise").push("height"),"error.height_multiple",16),((y=d==null?void 0:d.noise)===null||y===void 0?void 0:y.min_y)%16!==0&&l.add(n.push("noise").push("min_y"),"error.min_y_multiple",16),d}}))),o.register("noise_slider",(0,L.ObjectNode)({target:(0,L.NumberNode)(),size:(0,L.NumberNode)({integer:!0,min:0}),offset:(0,L.NumberNode)({integer:!0})})),o.register("generator_layer",(0,L.Mod)((0,L.ObjectNode)({block:r({validator:"resource",params:{pool:"block"}}),height:(0,L.NumberNode)({integer:!0,min:1})}),{default:()=>({block:"minecraft:stone",height:1})}))}ze.initNoiseSettingsSchemas=Pt;var Fe={};Object.defineProperty(Fe,"__esModule",{value:!0});Fe.initStructureSchemas=void 0;const w=O(),$t=q,Bt=Ve;function zt(o,e){const t=w.StringNode.bind(void 0,e),r=w.Reference.bind(void 0,o);o.register("structure",(0,w.Mod)((0,w.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/structure_type"}}),biomes:(0,$t.Tag)({resource:"$worldgen/biome"}),step:t({enum:"decoration_step"}),spawn_overrides:(0,w.MapNode)(t({enum:"mob_category"}),(0,w.ObjectNode)({bounding_box:t({enum:["piece","full"]}),spawns:Bt.MobCategorySpawnSettings})),terrain_adaptation:(0,w.Opt)(t({enum:["none","beard_thin","beard_box","bury"]})),[w.Switch]:[{push:"type"}],[w.Case]:{"minecraft:jigsaw":{start_pool:t({validator:"resource",params:{pool:"$worldgen/template_pool"}}),size:(0,w.NumberNode)({integer:!0}),start_height:r("height_provider"),start_jigsaw_name:(0,w.Opt)(t()),project_start_to_heightmap:(0,w.Opt)(t({enum:"heightmap_type"})),max_distance_from_center:(0,w.Mod)((0,w.NumberNode)({integer:!0,min:1,max:128}),{default:()=>80}),use_expansion_hack:(0,w.BooleanNode)()},"minecraft:mineshaft":{mineshaft_type:t({enum:["normal","mesa"]})},"minecraft:nether_fossil":{height:r("height_provider")},"minecraft:ocean_ruin":{biome_temp:t({enum:["cold","warm"]}),large_probability:(0,w.NumberNode)({min:0,max:1}),cluster_probability:(0,w.NumberNode)({min:0,max:1})},"minecraft:ruined_portal":{setups:(0,w.ListNode)((0,w.ObjectNode)({placement:t({enum:["on_land_surface","partly_buried","on_ocean_floor","in_mountain","underground","in_nether"]}),air_pocket_probability:(0,w.NumberNode)({min:0,max:1}),mossiness:(0,w.NumberNode)({min:0,max:1}),overgrown:(0,w.BooleanNode)(),vines:(0,w.BooleanNode)(),can_be_cold:(0,w.BooleanNode)(),replace_with_blackstone:(0,w.BooleanNode)(),weight:(0,w.NumberNode)({min:0})}))},"minecraft:shipwreck":{is_beached:(0,w.Opt)((0,w.BooleanNode)())}}},{context:"structure_feature"}),{default:()=>({type:"minecraft:jigsaw",step:"surface_structures",size:6,max_distance_from_center:80})}))}Fe.initStructureSchemas=zt;var Re={};Object.defineProperty(Re,"__esModule",{value:!0});Re.initStructureSetSchemas=void 0;const S=O(),Ft=q;function Rt(o,e){const t=S.StringNode.bind(void 0,e),r=S.Reference.bind(void 0,o),a=(0,S.ChoiceNode)([{type:"string",node:t({validator:"resource",params:{pool:"$worldgen/structure_set"}})},{type:"object",node:r("structure_set")}],{choiceContext:"structure_set"});o.register("structure_set",(0,S.ObjectNode)({structures:(0,S.ListNode)((0,S.ObjectNode)({structure:t({validator:"resource",params:{pool:"$worldgen/configured_structure_feature"}}),weight:(0,S.NumberNode)({integer:!0,min:1})})),placement:r("structure_placement")},{context:"structure_set"})),o.register("structure_placement",(0,S.Mod)((0,S.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/structure_placement"}}),salt:(0,S.NumberNode)({integer:!0,min:0}),frequency_reduction_method:(0,S.Opt)(t({enum:["default","legacy_type_1","legacy_type_2","legacy_type_3"]})),frequency:(0,S.Opt)((0,S.NumberNode)({min:0,max:1})),exclusion_zone:(0,S.Opt)((0,S.ObjectNode)({other_set:a,chunk_count:(0,S.NumberNode)({integer:!0,min:1,max:16})})),locate_offset:(0,S.Opt)((0,S.ListNode)((0,S.NumberNode)({integer:!0,min:-16,max:16}),{minLength:3,maxLength:3})),[S.Switch]:[{push:"type"}],[S.Case]:{"minecraft:concentric_rings":{distance:(0,S.NumberNode)({integer:!0,min:0,max:1023}),spread:(0,S.NumberNode)({integer:!0,min:0,max:1023}),count:(0,S.NumberNode)({integer:!0,min:1,max:4095}),preferred_biomes:(0,Ft.Tag)({resource:"$worldgen/biome"})},"minecraft:random_spread":{spread_type:(0,S.Opt)(t({enum:["linear","triangular"]})),spacing:(0,S.NumberNode)({integer:!0,min:0,max:4096}),separation:(0,S.Mod)((0,S.NumberNode)({integer:!0,min:0,max:4096}),n=>({validate:(d,l,k,p)=>(d.pop().push("spacing").get()<=l&&k.add(d,"error.separation_smaller_spacing"),n.validate(d,l,k,p))}))}}},{context:"structure_placement"}),{default:()=>({type:"minecraft:random_spread",spacing:10,separation:5,salt:Math.floor(Math.random()*2147483647)})}))}Re.initStructureSetSchemas=Rt;var De={};Object.defineProperty(De,"__esModule",{value:!0});De.initSurfaceRuleSchemas=void 0;const $=O();function Dt(o,e){const t=$.StringNode.bind(void 0,e),r=$.Reference.bind(void 0,o);o.register("material_rule",(0,$.Mod)((0,$.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/material_rule"}}),[$.Switch]:[{push:"type"}],[$.Case]:{"minecraft:block":{result_state:r("block_state")},"minecraft:condition":{if_true:r("material_condition"),then_run:r("material_rule")},"minecraft:sequence":{sequence:(0,$.ListNode)(r("material_rule"))}}},{context:"material_rule",category:"pool"}),{default:()=>({type:"minecraft:block",result_state:{Name:"minecraft:stone"}})})),o.register("material_condition",(0,$.Mod)((0,$.ObjectNode)({type:t({validator:"resource",params:{pool:"worldgen/material_condition"}}),[$.Switch]:[{push:"type"}],[$.Case]:{"minecraft:biome":{biome_is:(0,$.ListNode)(t({validator:"resource",params:{pool:"$worldgen/biome"}}))},"minecraft:noise_threshold":{noise:t({validator:"resource",params:{pool:"$worldgen/noise"}}),min_threshold:(0,$.NumberNode)(),max_threshold:(0,$.NumberNode)()},"minecraft:not":{invert:r("material_condition")},"minecraft:stone_depth":{offset:(0,$.NumberNode)({integer:!0}),surface_type:t({enum:"cave_surface"}),add_surface_depth:(0,$.BooleanNode)(),secondary_depth_range:(0,$.NumberNode)({integer:!0})},"minecraft:vertical_gradient":{random_name:t(),true_at_and_below:r("vertical_anchor"),false_at_and_above:r("vertical_anchor")},"minecraft:water":{offset:(0,$.NumberNode)({integer:!0}),surface_depth_multiplier:(0,$.NumberNode)({integer:!0,min:-20,max:20}),add_stone_depth:(0,$.BooleanNode)()},"minecraft:y_above":{anchor:r("vertical_anchor"),surface_depth_multiplier:(0,$.NumberNode)({integer:!0,min:-20,max:20}),add_stone_depth:(0,$.BooleanNode)()}}},{context:"material_condition"}),{default:()=>({type:"minecraft:biome",is_biome:"minecraft:plains"})}))}De.initSurfaceRuleSchemas=Dt;var Te={};Object.defineProperty(Te,"__esModule",{value:!0});Te.initTemplatePoolSchemas=void 0;const A=O(),He=ee;function Tt(o,e){const t=A.Reference.bind(void 0,o),r=A.StringNode.bind(void 0,e);o.register("template_pool",(0,A.Mod)((0,A.ObjectNode)({name:r(),fallback:r(),elements:(0,A.ListNode)(t("template_weighted_element"))},{context:"template_pool"}),{default:()=>({fallback:"minecraft:empty",elements:[{weight:1,element:{element_type:"minecraft:single_pool_element",projection:"rigid",processors:"minecraft:empty"}}]})})),o.register("template_weighted_element",(0,A.Mod)((0,A.ObjectNode)({weight:(0,A.NumberNode)({integer:!0,min:1,max:150}),element:t("template_element")},{category:"pool"}),{default:()=>({weight:1,element:{element_type:"minecraft:single_pool_element",projection:"rigid",processors:"minecraft:empty"}})})),o.register("template_element",(0,A.Mod)((0,A.ObjectNode)({element_type:r({validator:"resource",params:{pool:"worldgen/structure_pool_element"}}),projection:r({enum:["rigid","terrain_matching"]}),[A.Switch]:[{push:"element_type"}],[A.Case]:{"minecraft:feature_pool_element":{projection:r({enum:["rigid","terrain_matching"]}),feature:r({validator:"resource",params:{pool:"$worldgen/placed_feature"}})},"minecraft:legacy_single_pool_element":{projection:r({enum:["rigid","terrain_matching"]}),location:r({validator:"resource",params:{pool:"$structure"}}),processors:He.Processors},"minecraft:list_pool_element":{projection:r({enum:["rigid","terrain_matching"]}),elements:(0,A.ListNode)(t("template_element"))},"minecraft:single_pool_element":{projection:r({enum:["rigid","terrain_matching"]}),location:r({validator:"resource",params:{pool:"$structure"}}),processors:He.Processors}}},{context:"template_element",disableSwitchContext:!0}),{default:()=>({element_type:"minecraft:single_pool_element",projection:"rigid",processors:"minecraft:empty"})}))}Te.initTemplatePoolSchemas=Tt;var qe={};Object.defineProperty(qe,"__esModule",{value:!0});qe.initWorldPresetSchemas=void 0;const ne=O();function qt(o,e){const t=ne.StringNode.bind(void 0,e),r=ne.Reference.bind(void 0,o);o.register("world_preset",(0,ne.Mod)((0,ne.ObjectNode)({dimensions:(0,ne.MapNode)(t({validator:"resource",params:{pool:"$dimension",isDefinition:!0}}),r("dimension"))},{context:"world_preset"}),{default:()=>({dimensions:{"minecraft:overworld":{type:"minecraft:overworld",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:multi_noise",preset:"minecraft:overworld"},settings:"minecraft:overworld"}},"minecraft:the_nether":{type:"minecraft:the_nether",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:multi_noise",preset:"minecraft:nether"},settings:"minecraft:nether"}},"minecraft:the_end":{type:"minecraft:the_end",generator:{type:"minecraft:noise",biome_source:{type:"minecraft:the_end"},settings:"minecraft:end"}}}})})),o.register("flat_level_generator_preset",(0,ne.Mod)((0,ne.ObjectNode)({display:t({validator:"resource",params:{pool:"item"}}),settings:r("flat_generator_settings")}),{default:()=>({display:"minecraft:grass_block",settings:{lakes:!1,features:!1,biome:"minecraft:plains",structure_overrides:[],layers:[{height:3,block:"minecraft:dirt"},{height:1,block:"minecraft:grass_block"}]}})}))}qe.initWorldPresetSchemas=qt;Object.defineProperty(Le,"__esModule",{value:!0});Le.initWorldgenSchemas=void 0;const It=Ve,At=Pe,Wt=$e,Et=Xe,Ut=Be,Vt=ze,Xt=ee,Yt=Fe,Zt=Re,Gt=De,Ht=Te,Kt=qe;function Jt(o,e){(0,Xt.initProcessorListSchemas)(o,e),(0,Et.initDensityFunctionSchemas)(o,e),(0,It.initBiomeSchemas)(o,e),(0,At.initCarverSchemas)(o,e),(0,Wt.initDecoratorSchemas)(o,e),(0,Ut.initFeatureSchemas)(o,e),(0,Vt.initNoiseSettingsSchemas)(o,e),(0,Yt.initStructureSchemas)(o,e),(0,Zt.initStructureSetSchemas)(o,e),(0,Gt.initSurfaceRuleSchemas)(o,e),(0,Ht.initTemplatePoolSchemas)(o,e),(0,Kt.initWorldPresetSchemas)(o,e)}Le.initWorldgenSchemas=Jt;var Ie={};Object.defineProperty(Ie,"__esModule",{value:!0});Ie.initWorldSettingsSchemas=void 0;const Q=O();function Qt(o,e){const t=Q.Reference.bind(void 0,o),r=Q.StringNode.bind(void 0,e);o.register("world_settings",(0,Q.Mod)((0,Q.ObjectNode)({generate_features:(0,Q.BooleanNode)(),bonus_chest:(0,Q.BooleanNode)(),seed:(0,Q.NumberNode)({integer:!0}),dimensions:(0,Q.MapNode)(r({validator:"resource",params:{pool:"$dimension"}}),t("dimension"))},{context:"world_settings"}),{default:()=>{const a=Math.floor(Math.random()*4294967296)-2147483648;return{generate_features:!0,bonus_chest:!1,seed:a,dimensions:{"minecraft:overworld":{type:"minecraft:overworld",generator:{type:"minecraft:noise",seed:a,biome_source:{type:"minecraft:multi_noise",preset:"minecraft:overworld"},settings:"minecraft:overworld"}},"minecraft:the_nether":{type:"minecraft:the_nether",generator:{type:"minecraft:noise",seed:a,biome_source:{type:"minecraft:multi_noise",preset:"minecraft:nether"},settings:"minecraft:nether"}},"minecraft:the_end":{type:"minecraft:the_end",generator:{type:"minecraft:noise",seed:a,biome_source:{type:"minecraft:the_end",seed:a},settings:"minecraft:end"}}}}}}))}Ie.initWorldSettingsSchemas=Qt;var Ae={};Object.defineProperty(Ae,"__esModule",{value:!0});Ae.initLycheeCommonSchemas=void 0;const se=O();function er(o,e){const t=se.Reference.bind(void 0,o),r=se.StringNode.bind(void 0,e);o.register("lychee_block_predicate",(0,se.Mod)((0,se.ChoiceNode)([{type:"string",node:r()},{type:"object",node:t("block_predicate")}]),{default:()=>"*"})),o.register("json_pointer",(0,se.Mod)(r(),{default:()=>"/"})),o.register("difficulty",r({enum:["peaceful","easy","normal","hard"]}))}Ae.initLycheeCommonSchemas=er;var We={};Object.defineProperty(We,"__esModule",{value:!0});We.initContextualConditionsSchemas=void 0;const P=O();function tr(o,e){const t=P.Reference.bind(void 0,o),r=P.StringNode.bind(void 0,e);o.register("contextual_condition",(0,P.Mod)((0,P.ObjectNode)({type:r({enum:"contextual_condition_type"}),secret:(0,P.Opt)((0,P.BooleanNode)()),description:(0,P.Opt)(r()),[P.Switch]:[{push:"type"}],[P.Case]:{chance:{chance:(0,P.NumberNode)({min:0,max:1})},not:{contextual:t("contextual_condition")},or:{contextual:(0,P.ListNode)(t("contextual_condition"))},and:{contextual:(0,P.ListNode)(t("contextual_condition"))},location:{offsetX:(0,P.Opt)((0,P.NumberNode)({integer:!0})),offsetY:(0,P.Opt)((0,P.NumberNode)({integer:!0})),offsetZ:(0,P.Opt)((0,P.NumberNode)({integer:!0})),predicate:t("location_predicate")},weather:{weather:r({enum:["clear","rain","thunder"]})},difficulty:{difficulty:(0,P.ChoiceNode)([{type:"string",node:t("difficulty")},{type:"list",node:(0,P.ListNode)(t("difficulty"))}])},time:{value:t("int_bounds"),period:(0,P.Opt)((0,P.NumberNode)({integer:!0}))},execute:{command:r({validator:"command",params:{}}),value:(0,P.Opt)(t("int_bounds"))},fall_distance:{range:t("float_bounds")},entity_health:{range:t("float_bounds")},direction:{direction:r({enum:["up","down","north","south","east","west","side","forward"]})},is_sneaking:{},check_param:{key:r()}}},{context:"contextual_condition"}),{default:()=>({type:"chance"})}))}We.initContextualConditionsSchemas=tr;var Ee={};Object.defineProperty(Ee,"__esModule",{value:!0});Ee.initLycheeRecipeSchemas=void 0;const _=O();function rr(o,e){const t=_.Reference.bind(void 0,o),r=_.StringNode.bind(void 0,e);o.register("lychee_recipe",(0,_.Mod)((0,_.ObjectNode)({type:r({enum:"lychee_recipe_serializer"}),comment:(0,_.Opt)(r()),ghost:(0,_.Opt)((0,_.BooleanNode)()),hide_in_viewer:(0,_.Opt)((0,_.BooleanNode)()),contextual:(0,_.Opt)((0,_.ListNode)(t("contextual_condition"))),post:(0,_.Opt)((0,_.ListNode)(t("post_action"))),[_.Switch]:[{push:"type"}],[_.Case]:{"lychee:block_interacting":{group:(0,_.Opt)(r()),max_repeats:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),item_in:(0,_.ChoiceNode)([{type:"object",node:t("recipe_ingredient"),change:a=>a[0]},{type:"list",node:(0,_.ListNode)(t("recipe_ingredient"),{minLength:2,maxLength:2}),change:a=>[a]}]),block_in:t("lychee_block_predicate")},"lychee:block_clicking":{group:(0,_.Opt)(r()),max_repeats:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),item_in:(0,_.ChoiceNode)([{type:"object",node:t("recipe_ingredient"),change:a=>a[0]},{type:"list",node:(0,_.ListNode)(t("recipe_ingredient"),{minLength:2,maxLength:2}),change:a=>[a]}]),block_in:t("lychee_block_predicate")},"lychee:item_burning":{group:(0,_.Opt)(r()),max_repeats:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),item_in:t("recipe_ingredient")},"lychee:item_inside":{group:(0,_.Opt)(r()),max_repeats:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),item_in:(0,_.ListNode)(t("recipe_ingredient")),block_in:t("lychee_block_predicate"),time:(0,_.Opt)((0,_.NumberNode)({integer:!0}))},"lychee:anvil_crafting":{item_in:(0,_.ChoiceNode)([{type:"object",node:t("recipe_ingredient"),change:a=>a[0]},{type:"list",node:(0,_.ListNode)(t("recipe_ingredient"),{minLength:2,maxLength:2}),change:a=>[a]}]),item_out:t("recipe_result"),level_cost:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),material_cost:(0,_.Opt)((0,_.NumberNode)({integer:!0})),assembling:(0,_.Opt)((0,_.ListNode)(t("post_action")))},"lychee:block_crushing":{group:(0,_.Opt)(r()),max_repeats:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),item_in:(0,_.Opt)((0,_.ListNode)(t("recipe_ingredient"))),falling_block:(0,_.Opt)(t("lychee_block_predicate")),landing_block:(0,_.Opt)(t("lychee_block_predicate"))},"lychee:lightning_channeling":{group:(0,_.Opt)(r()),max_repeats:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),item_in:(0,_.Opt)((0,_.ListNode)(t("recipe_ingredient")))},"lychee:item_exploding":{group:(0,_.Opt)(r()),max_repeats:(0,_.Opt)((0,_.NumberNode)({integer:!0,min:1})),item_in:(0,_.Opt)((0,_.ListNode)(t("recipe_ingredient")))},"lychee:block_exploding":{group:(0,_.Opt)(r()),block_in:(0,_.Opt)(t("lychee_block_predicate"))},"lychee:random_block_ticking":{group:(0,_.Opt)(r()),block_in:t("lychee_block_predicate")},"lychee:dripstone_dripping":{group:(0,_.Opt)(r()),source_block:t("lychee_block_predicate"),target_block:t("lychee_block_predicate")},"lychee:crafting":{group:(0,_.Opt)(r({enum:"recipe_group",additional:!0})),pattern:(0,_.ListNode)(r()),key:(0,_.MapNode)(r(),t("recipe_ingredient")),result:t("recipe_result"),assembling:(0,_.Opt)((0,_.ListNode)(t("post_action")))}}},{context:"recipe",disableSwitchContext:!0}),{default:()=>({type:"lychee:block_interacting"})}))}Ee.initLycheeRecipeSchemas=rr;var ce={};Object.defineProperty(ce,"__esModule",{value:!0});ce.initPostActionsSchemas=ce.createPostActionFields=void 0;const m=O();function Ye(o,e,t){const r=m.Reference.bind(void 0,o),a=m.StringNode.bind(void 0,e),n=t?{}:{random:{rolls:(0,m.Opt)(r("int_bounds")),entries:(0,m.ListNode)((0,m.ObjectNode)(Ye(o,e,!0))),empty_weight:(0,m.Opt)((0,m.NumberNode)({integer:!0}))}};let d={type:a({enum:"post_action_type"}),contextual:(0,m.Opt)((0,m.ListNode)(r("contextual_condition"))),[m.Switch]:[{push:"type"}],[m.Case]:{...n,drop_item:{item:a({validator:"resource",params:{pool:"item",allowUnknown:!0}}),count:(0,m.Opt)((0,m.Mod)((0,m.NumberNode)({integer:!0}),{default:()=>1}))},place:{block:r("lychee_block_predicate"),offsetX:(0,m.Opt)((0,m.NumberNode)({integer:!0})),offsetY:(0,m.Opt)((0,m.NumberNode)({integer:!0})),offsetZ:(0,m.Opt)((0,m.NumberNode)({integer:!0}))},execute:{command:a({validator:"command",params:{}}),hide:(0,m.Opt)((0,m.BooleanNode)())},drop_xp:{xp:(0,m.NumberNode)({integer:!0})},if:{then:(0,m.Opt)((0,m.ListNode)(r("post_action"))),else:(0,m.Opt)((0,m.ListNode)(r("post_action")))},explode:{offsetX:(0,m.Opt)((0,m.NumberNode)({integer:!0})),offsetY:(0,m.Opt)((0,m.NumberNode)({integer:!0})),offsetZ:(0,m.Opt)((0,m.NumberNode)({integer:!0})),fire:(0,m.Opt)((0,m.BooleanNode)()),block_interaction:(0,m.Opt)(a({enum:["none","break","destroy"]})),radius:(0,m.Opt)((0,m.NumberNode)()),radius_step:(0,m.Opt)((0,m.NumberNode)())},hurt:{damage:r("float_bounds"),source:(0,m.Opt)(a({enum:["generic","magic","out_of_world","anvil","wither","freeze","drown","fall","in_fire","on_fire","lava"]}))},anvil_damage_chance:{chance:(0,m.NumberNode)({min:0,max:1})},add_item_cooldown:{s:(0,m.NumberNode)()},move_towards_face:{factor:(0,m.NumberNode)()},delay:{s:(0,m.NumberNode)()},break:{},cycle_state_property:{block:r("lychee_block_predicate"),property:a(),offsetX:(0,m.Opt)((0,m.NumberNode)({integer:!0})),offsetY:(0,m.Opt)((0,m.NumberNode)({integer:!0})),offsetZ:(0,m.Opt)((0,m.NumberNode)({integer:!0}))},prevent_default:{},damage_item:{damage:(0,m.Opt)((0,m.Mod)((0,m.NumberNode)({integer:!0}),{default:()=>1})),target:(0,m.Opt)(r("json_pointer"))},set_item:{target:(0,m.Opt)(r("json_pointer")),item:a({validator:"resource",params:{pool:"item",allowUnknown:!0}}),count:(0,m.Opt)((0,m.Mod)((0,m.NumberNode)({integer:!0}),{default:()=>1}))},"loquat:spawn":{count:(0,m.Opt)((0,m.NumberNode)({integer:!0})),mob:(0,m.Mod)((0,m.ChoiceNode)([{type:"string",node:a({validator:"resource",params:{pool:"entity_type",allowUnknown:!0}})},{type:"object",node:(0,m.ObjectNode)({type:a({validator:"resource",params:{pool:"entity_type",allowUnknown:!0}}),randomize:(0,m.Opt)((0,m.BooleanNode)()),attrs:(0,m.Opt)((0,m.MapNode)(a({enum:["hp","movement_speed","damage","attack_speed","armor","armor_toughness","knockback_resistance","knockback"],additional:!0}),(0,m.NumberNode)()))})}]),{default:()=>"minecraft:zombie"}),zone:(0,m.Opt)(a())}}};return t&&(d.weight=(0,m.Opt)((0,m.NumberNode)({integer:!0,min:1}))),d}ce.createPostActionFields=Ye;function or(o,e){o.register("post_action",(0,m.Mod)((0,m.ObjectNode)(Ye(o,e,!1),{context:"post_action"}),{default:()=>({type:"drop_item"})}))}ce.initPostActionsSchemas=or;Object.defineProperty(ue,"__esModule",{value:!0});ue.initSchemas=void 0;const ir=pe,nr=fe,ar=he,cr=q,dr=ye,sr=ve,lr=Oe,mr=ke,_r=xe,ur=we,pr=Se,fr=je,gr=Ce,br=Me,Nr=Le,hr=Ie,yr=Ae,vr=We,Or=Ee,kr=ce;function xr(o,e){(0,cr.initCommonSchemas)(o,e),(0,ar.initChatTypeSchemas)(o,e),(0,ir.initAdvancementSchemas)(o,e),(0,nr.initAssetsSchemas)(o,e),(0,dr.initConditionSchemas)(o,e),(0,lr.initDimensionTypeSchemas)(o,e),(0,sr.initDimensionSchemas)(o,e),(0,mr.initItemModifierSchemas)(o,e),(0,_r.initLootTableSchemas)(o,e),(0,ur.initPackMcmetaSchemas)(o,e),(0,pr.initPredicatesSchemas)(o,e),(0,fr.initRecipeSchemas)(o,e),(0,gr.initTagsSchemas)(o,e),(0,br.initTextComponentSchemas)(o,e),(0,Nr.initWorldgenSchemas)(o,e),(0,hr.initWorldSettingsSchemas)(o,e),(0,yr.initLycheeCommonSchemas)(o,e),(0,vr.initContextualConditionsSchemas)(o,e),(0,kr.initPostActionsSchemas)(o,e),(0,Or.initLycheeRecipeSchemas)(o,e)}ue.initSchemas=xr;var wr=ae&&ae.__createBinding||(Object.create?function(o,e,t,r){r===void 0&&(r=t);var a=Object.getOwnPropertyDescriptor(e,t);(!a||("get"in a?!e.__esModule:a.writable||a.configurable))&&(a={enumerable:!0,get:function(){return e[t]}}),Object.defineProperty(o,r,a)}:function(o,e,t,r){r===void 0&&(r=t),o[r]=e[t]}),Sr=ae&&ae.__setModuleDefault||(Object.create?function(o,e){Object.defineProperty(o,"default",{enumerable:!0,value:e})}:function(o,e){o.default=e}),jr=ae&&ae.__importStar||function(o){if(o&&o.__esModule)return o;var e={};if(o!=null)for(var t in o)t!=="default"&&Object.prototype.hasOwnProperty.call(o,t)&&wr(e,o,t);return Sr(e,o),e};Object.defineProperty(H,"__esModule",{value:!0});var Ke=H.getSchemas=et=H.getCollections=Qe=H.lootContext=void 0;const Je=O(),Cr=_e,Mr=ue;var Qe=H.lootContext=jr(W);function Lr(){const o=new Je.CollectionRegistry;return(0,Cr.initCollections)(o),o}var et=H.getCollections=Lr;function Pr(o){const e=new Je.SchemaRegistry;return(0,Mr.initSchemas)(e,o),e}Ke=H.getSchemas=Pr;const zr=tt({__proto__:null,get getSchemas(){return Ke},get getCollections(){return et},get lootContext(){return Qe},default:H},[H]);export{zr as i};
//# sourceMappingURL=index.5a3df85c.js.map
