{"version":3,"file":"index.419d6a9b.js","sources":["../../node_modules/@mcschema/java-1.18/lib/Collections.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Advancement.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/Model.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/BlockDefinition.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/Font.js","../../node_modules/@mcschema/java-1.18/lib/schemas/assets/index.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Common.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Condition.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Dimension.js","../../node_modules/@mcschema/java-1.18/lib/schemas/DimensionType.js","../../node_modules/@mcschema/java-1.18/lib/schemas/ItemModifier.js","../../node_modules/@mcschema/java-1.18/lib/LootContext.js","../../node_modules/@mcschema/java-1.18/lib/schemas/LootTable.js","../../node_modules/@mcschema/java-1.18/lib/schemas/PackMcmeta.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Predicates.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Recipe.js","../../node_modules/@mcschema/java-1.18/lib/schemas/Tags.js","../../node_modules/@mcschema/java-1.18/lib/schemas/TextComponent.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Biome.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Carver.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Decorator.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/ProcessorList.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/Feature.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/NoiseSettings.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/StructureFeature.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/SurfaceRule.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/TemplatePool.js","../../node_modules/@mcschema/java-1.18/lib/schemas/worldgen/index.js","../../node_modules/@mcschema/java-1.18/lib/schemas/WorldSettings.js","../../node_modules/@mcschema/java-1.18/lib/schemas/index.js","../../node_modules/@mcschema/java-1.18/lib/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initCollections = void 0;\nfunction initCollections(collections) {\n    collections.register('advancement_trigger', [\n        'minecraft:bee_nest_destroyed',\n        'minecraft:bred_animals',\n        'minecraft:brewed_potion',\n        'minecraft:changed_dimension',\n        'minecraft:channeled_lightning',\n        'minecraft:construct_beacon',\n        'minecraft:consume_item',\n        'minecraft:cured_zombie_villager',\n        'minecraft:effects_changed',\n        'minecraft:enchanted_item',\n        'minecraft:enter_block',\n        'minecraft:entity_hurt_player',\n        'minecraft:entity_killed_player',\n        'minecraft:fall_from_height',\n        'minecraft:filled_bucket',\n        'minecraft:fishing_rod_hooked',\n        'minecraft:hero_of_the_village',\n        'minecraft:impossible',\n        'minecraft:inventory_changed',\n        'minecraft:item_durability_changed',\n        'minecraft:item_used_on_block',\n        'minecraft:killed_by_crossbow',\n        'minecraft:levitation',\n        'minecraft:lightning_strike',\n        'minecraft:location',\n        'minecraft:nether_travel',\n        'minecraft:placed_block',\n        'minecraft:player_generates_container_loot',\n        'minecraft:player_hurt_entity',\n        'minecraft:player_interacted_with_entity',\n        'minecraft:player_killed_entity',\n        'minecraft:recipe_unlocked',\n        'minecraft:ride_entity_in_lava',\n        'minecraft:shot_crossbow',\n        'minecraft:slept_in_bed',\n        'minecraft:slide_down_block',\n        'minecraft:started_riding',\n        'minecraft:summoned_entity',\n        'minecraft:tame_animal',\n        'minecraft:target_hit',\n        'minecraft:tick',\n        'minecraft:thrown_item_picked_up_by_entity',\n        'minecraft:used_ender_eye',\n        'minecraft:used_totem',\n        'minecraft:using_item',\n        'minecraft:villager_trade',\n        'minecraft:voluntary_exile'\n    ]);\n    collections.register('keybind', [\n        'key.advancements',\n        'key.attack',\n        'key.back',\n        'key.chat',\n        'key.command',\n        'key.drop',\n        'key.forward',\n        'key.fullscreen',\n        'key.hotbar.1',\n        'key.hotbar.2',\n        'key.hotbar.3',\n        'key.hotbar.4',\n        'key.hotbar.5',\n        'key.hotbar.6',\n        'key.hotbar.7',\n        'key.hotbar.8',\n        'key.hotbar.9',\n        'key.inventory',\n        'key.jump',\n        'key.left',\n        'key.loadToolbarActivator',\n        'key.pickItem',\n        'key.playerlist',\n        'key.right',\n        'key.saveToolbarActivator',\n        'key.screenshot',\n        'key.smoothCamera',\n        'key.sneak',\n        'key.spectatorOutlines',\n        'key.sprint',\n        'key.swapOffhand',\n        'key.togglePerspective',\n        'key.use'\n    ]);\n    collections.register('slot', [\n        'mainhand',\n        'offhand',\n        'head',\n        'chest',\n        'legs',\n        'feet'\n    ]);\n    collections.register('gamemode', [\n        'survival',\n        'creative',\n        'adventure',\n        'spectator'\n    ]);\n    collections.register('entity_source', [\n        'this',\n        'killer',\n        'direct_killer',\n        'killer_player'\n    ]);\n    collections.register('copy_source', [\n        'block_entity',\n        'this',\n        'killer',\n        'killer_player'\n    ]);\n    collections.register('loot_table_apply_bonus_formula', [\n        'minecraft:uniform_bonus_count',\n        'minecraft:binomial_with_bonus_count',\n        'minecraft:ore_drops'\n    ]);\n    collections.register('map_decoration', [\n        'mansion',\n        'monument',\n        'player',\n        'frame',\n        'red_marker',\n        'blue_marker',\n        'target_x',\n        'target_point',\n        'player_off_map',\n        'player_off_limits',\n        'red_x',\n        'banner_white',\n        'banner_orange',\n        'banner_magenta',\n        'banner_light_blue',\n        'banner_yellow',\n        'banner_lime',\n        'banner_pink',\n        'banner_gray',\n        'banner_light_gray',\n        'banner_cyan',\n        'banner_purple',\n        'banner_blue',\n        'banner_brown',\n        'banner_green',\n        'banner_red',\n        'banner_black'\n    ]);\n    collections.register('map_feature', [\n        'bastion_remnant',\n        'buried_treasure',\n        'desert_pyramid',\n        'endcity',\n        'fortress',\n        'igloo',\n        'jungle_pyramid',\n        'mansion',\n        'mineshaft',\n        'monument',\n        'nether_fossil',\n        'ocean_ruin',\n        'pillager_outpost',\n        'ruined_portal',\n        'shipwreck',\n        'stronghold',\n        'swamp_hut',\n        'village'\n    ]);\n    collections.register('recipe_group', [\n        'bed',\n        'light_gray_dye',\n        'iron_ingot',\n        'wooden_stairs',\n        'black_dye',\n        'stained_terracotta',\n        'dyed_bed',\n        'magenta_dye',\n        'bark',\n        'rabbit_stew',\n        'light_blue_dye',\n        'wooden_fence_gate',\n        'planks',\n        'stained_glass',\n        'wooden_door',\n        'stained_glass_pane',\n        'wooden_fence',\n        'sticks',\n        'concrete_powder',\n        'wooden_pressure_plate',\n        'boat',\n        'brown_dye',\n        'yellow_dye',\n        'bonemeal',\n        'red_dye',\n        'wooden_trapdoor',\n        'wooden_button',\n        'gold_ingot',\n        'pink_dye',\n        'wooden_slab',\n        'orange_dye',\n        'carpet',\n        'sign',\n        'wool',\n        'sugar',\n        'blue_dye',\n        'white_dye',\n        'banner',\n        'netherite_ingot'\n    ]);\n    collections.register('biome_category', [\n        'beach',\n        'desert',\n        'extreme_hills',\n        'forest',\n        'icy',\n        'jungle',\n        'mesa',\n        'mountain',\n        'mushroom',\n        'nether',\n        'none',\n        'ocean',\n        'plains',\n        'river',\n        'savanna',\n        'swamp',\n        'taiga',\n        'the_end',\n        'underground'\n    ]);\n    collections.register('heightmap_type', [\n        'MOTION_BLOCKING',\n        'MOTION_BLOCKING_NO_LEAVES',\n        'OCEAN_FLOOR',\n        'OCEAN_FLOOR_WG',\n        'WORLD_SURFACE',\n        'WORLD_SURFACE_WG'\n    ]);\n    collections.register('generation_step', [\n        'air',\n        'liquid'\n    ]);\n    collections.register('loot_context_type', [\n        'minecraft:empty',\n        'minecraft:chest',\n        'minecraft:command',\n        'minecraft:selector',\n        'minecraft:fishing',\n        'minecraft:entity',\n        'minecraft:gift',\n        'minecraft:barter',\n        'minecraft:advancement_reward',\n        'minecraft:advancement_entity',\n        'minecraft:generic',\n        'minecraft:block'\n    ]);\n    collections.register('banner_pattern', [\n        'base',\n        'square_bottom_left',\n        'square_bottom_right',\n        'square_top_left',\n        'square_top_right',\n        'stripe_bottom',\n        'stripe_top',\n        'stripe_left',\n        'stripe_right',\n        'stripe_center',\n        'stripe_middle',\n        'stripe_downright',\n        'stripe_downleft',\n        'small_stripes',\n        'cross',\n        'straight_cross',\n        'triangle_bottom',\n        'triangle_top',\n        'triangles_bottom',\n        'triangles_top',\n        'diagonal_left',\n        'diagonal_up_right',\n        'diagonal_up_left',\n        'diagonal_right',\n        'circle',\n        'rhombus',\n        'half_vertical',\n        'half_horizontal',\n        'half_vertical_right',\n        'half_horizontal_bottom',\n        'border',\n        'curly_border',\n        'gradient',\n        'gradient_up',\n        'bricks',\n        'globe',\n        'creeper',\n        'skull',\n        'flower',\n        'mojang',\n        'piglin'\n    ]);\n    collections.register('dye_color', [\n        'white',\n        'orange',\n        'magenta',\n        'light_blue',\n        'yellow',\n        'lime',\n        'pink',\n        'gray',\n        'light_gray',\n        'cyan',\n        'purple',\n        'blue',\n        'brown',\n        'green',\n        'red',\n        'black'\n    ]);\n    collections.register('cave_surface', [\n        'floor',\n        'ceiling'\n    ]);\n    collections.register('direction', [\n        'down',\n        'up',\n        'north',\n        'east',\n        'south',\n        'west'\n    ]);\n    collections.register('axis', [\n        'x',\n        'y',\n        'z'\n    ]);\n    collections.register('display_position', [\n        'firstperson_righthand',\n        'firstperson_lefthand',\n        'thirdperson_righthand',\n        'thirdperson_lefthand',\n        'gui',\n        'head',\n        'ground',\n        'fixed'\n    ]);\n    collections.register('gui_light', [\n        'front',\n        'side'\n    ]);\n    collections.register('item_model_predicates', [\n        'angle',\n        'blocking',\n        'broken',\n        'cast',\n        'charged',\n        'cooldown',\n        'custom_model_data',\n        'damage',\n        'damaged',\n        'firework',\n        'lefthanded',\n        'pull',\n        'pulling',\n        'throwing',\n        'time'\n    ]);\n    collections.register('glyph_provider_type', [\n        'bitmap',\n        'ttf',\n        'legacy_unicode',\n    ]);\n    collections.register('cat_texture', [\n        'textures/entity/cat/tabby.png',\n        'textures/entity/cat/black.png',\n        'textures/entity/cat/red.png',\n        'textures/entity/cat/siamese.png',\n        'textures/entity/cat/british_shorthair.png',\n        'textures/entity/cat/calico.png',\n        'textures/entity/cat/persian.png',\n        'textures/entity/cat/ragdoll.png',\n        'textures/entity/cat/white.png',\n        'textures/entity/cat/jellie.png',\n        'textures/entity/cat/all_black.png'\n    ]);\n}\nexports.initCollections = initCollections;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initAdvancementSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initAdvancementSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const EntityPredicate = (0, core_1.ChoiceNode)([\n        {\n            type: 'object',\n            node: (0, core_1.Opt)(Reference('entity_predicate')),\n            change: v => { var _a, _b; return (_b = (_a = v[0]) === null || _a === void 0 ? void 0 : _a.predicate) !== null && _b !== void 0 ? _b : ({}); }\n        },\n        {\n            type: 'list',\n            node: (0, core_1.ListNode)(Reference('condition')),\n            change: v => [{\n                    condition: 'minecraft:entity_properties',\n                    predicate: v\n                }]\n        }\n    ], { context: 'conditions' });\n    schemas.register('advancement', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        display: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.ObjectNode)({\n            icon: (0, core_1.ObjectNode)({\n                item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } }))\n            }),\n            title: Reference('text_component'),\n            description: Reference('text_component'),\n            background: (0, core_1.Opt)(StringNode()),\n            frame: (0, core_1.Opt)(StringNode({ enum: ['task', 'challenge', 'goal'] })),\n            show_toast: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            announce_to_chat: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            hidden: (0, core_1.Opt)((0, core_1.BooleanNode)())\n        }), {\n            default: () => ({\n                icon: {\n                    item: 'minecraft:stone'\n                },\n                title: '',\n                description: ''\n            })\n        })),\n        parent: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$advancement' } })),\n        criteria: (0, core_1.MapNode)(StringNode(), Reference('advancement_criteria')),\n        requirements: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ListNode)(StringNode() // TODO: add validation\n        ))),\n        rewards: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            function: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$function' } })),\n            loot: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$loot_table' } }))),\n            recipes: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$recipe' } }))),\n            experience: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n        })),\n    }, { context: 'advancement' }), {\n        default: () => ({\n            criteria: {\n                requirement: {\n                    trigger: 'minecraft:location'\n                }\n            }\n        })\n    }));\n    schemas.register('advancement_criteria', (0, core_1.ObjectNode)({\n        trigger: StringNode({ validator: 'resource', params: { pool: collections.get('advancement_trigger') } }),\n        conditions: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            player: (0, core_1.Mod)(EntityPredicate, {\n                enabled: path => path.pop().push('trigger').get() !== 'minecraft:impossible'\n            }),\n            [core_1.Switch]: ['pop', { push: 'trigger' }],\n            [core_1.Case]: {\n                'minecraft:bee_nest_destroyed': {\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\n                    num_bees_inside: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:bred_animals': {\n                    parent: EntityPredicate,\n                    partner: EntityPredicate,\n                    child: EntityPredicate\n                },\n                'minecraft:brewed_potion': {\n                    potion: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'potion' } }))\n                },\n                'minecraft:changed_dimension': {\n                    from: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\n                    to: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } }))\n                },\n                'minecraft:channeled_lightning': {\n                    victims: (0, core_1.Opt)((0, core_1.ListNode)(EntityPredicate))\n                },\n                'minecraft:construct_beacon': {\n                    level: Reference('int_bounds')\n                },\n                'minecraft:consume_item': {\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:cured_zombie_villager': {\n                    villager: EntityPredicate,\n                    zombie: EntityPredicate\n                },\n                'minecraft:effects_changed': {\n                    effects: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate'))),\n                    source: (0, core_1.Opt)(EntityPredicate)\n                },\n                'minecraft:enter_block': {\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\n                    state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\n                },\n                'minecraft:enchanted_item': {\n                    levels: Reference('int_bounds'),\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:entity_hurt_player': {\n                    damage: (0, core_1.Opt)(Reference('damage_predicate'))\n                },\n                'minecraft:entity_killed_player': {\n                    entity: EntityPredicate,\n                    killing_blow: (0, core_1.Opt)(Reference('damage_source_predicate'))\n                },\n                'minecraft:fall_from_height': {\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\n                    distance: (0, core_1.Opt)(Reference('distance_predicate'))\n                },\n                'minecraft:filled_bucket': {\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:fishing_rod_hooked': {\n                    entity: EntityPredicate,\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:hero_of_the_village': {\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\n                },\n                'minecraft:inventory_changed': {\n                    slots: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                        empty: Reference('int_bounds'),\n                        occupied: Reference('int_bounds'),\n                        full: Reference('int_bounds')\n                    })),\n                    items: (0, core_1.Opt)((0, core_1.ListNode)(Reference('item_predicate')))\n                },\n                'minecraft:item_durability_changed': {\n                    delta: Reference('int_bounds'),\n                    durability: Reference('int_bounds'),\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:item_used_on_block': {\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\n                },\n                'minecraft:killed_by_crossbow': {\n                    unique_entity_types: Reference('int_bounds'),\n                    victims: (0, core_1.Opt)((0, core_1.ListNode)(EntityPredicate))\n                },\n                'minecraft:levitation': {\n                    distance: (0, core_1.Opt)(Reference('distance_predicate')),\n                    duration: Reference('int_bounds')\n                },\n                'minecraft:lightning_strike': {\n                    lightning: EntityPredicate,\n                    bystander: EntityPredicate,\n                },\n                'minecraft:location': {\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\n                },\n                'minecraft:nether_travel': {\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\n                    distance: (0, core_1.Opt)(Reference('distance_predicate')),\n                },\n                'minecraft:placed_block': {\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } })),\n                    state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })),\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\n                },\n                'minecraft:player_generates_container_loot': {\n                    loot_table: StringNode({ validator: 'resource', params: { pool: '$loot_table' } })\n                },\n                'minecraft:player_hurt_entity': {\n                    damage: (0, core_1.Opt)(Reference('damage_predicate')),\n                    entity: EntityPredicate\n                },\n                'minecraft:player_interacted_with_entity': {\n                    item: (0, core_1.Opt)(Reference('item_predicate')),\n                    entity: EntityPredicate\n                },\n                'minecraft:player_killed_entity': {\n                    entity: EntityPredicate,\n                    killing_blow: (0, core_1.Opt)(Reference('damage_source_predicate'))\n                },\n                'minecraft:recipe_unlocked': {\n                    recipe: StringNode({ validator: 'resource', params: { pool: '$recipe' } })\n                },\n                'minecraft:ride_entity_in_lava': {\n                    start_position: (0, core_1.Opt)(Reference('location_predicate')),\n                    distance: (0, core_1.Opt)(Reference('distance_predicate'))\n                },\n                'minecraft:slept_in_bed': {\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\n                },\n                'minecraft:slide_down_block': {\n                    block: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\n                },\n                'minecraft:shot_crossbow': {\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:summoned_entity': {\n                    entity: EntityPredicate\n                },\n                'minecraft:tame_animal': {\n                    entity: EntityPredicate\n                },\n                'minecraft:target_hit': {\n                    projectile: EntityPredicate,\n                    shooter: EntityPredicate,\n                    signal_strength: Reference('int_bounds')\n                },\n                'minecraft:thrown_item_picked_up_by_entity': {\n                    entity: EntityPredicate,\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:used_ender_eye': {\n                    distance: (0, core_1.Opt)(Reference('float_bounds'))\n                },\n                'minecraft:used_totem': {\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:using_item': {\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:villager_trade': {\n                    villager: EntityPredicate,\n                    item: (0, core_1.Opt)(Reference('item_predicate'))\n                },\n                'minecraft:voluntary_exile': {\n                    location: (0, core_1.Opt)(Reference('location_predicate'))\n                }\n            }\n        }, { context: 'criterion' }))\n    }, { category: 'predicate', context: 'criterion' }));\n}\nexports.initAdvancementSchemas = initAdvancementSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initModelSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initModelSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const Vec = (length, min, max) => (0, core_1.ListNode)((0, core_1.NumberNode)({ min, max }), { minLength: length, maxLength: length });\n    const Texture = (0, core_1.ChoiceNode)([\n        {\n            type: 'alias',\n            match: (v) => typeof v === 'string' && v.startsWith('#'),\n            node: StringNode(),\n            change: (v) => typeof v === 'string' ? `#${v}` : \"#0\"\n        },\n        {\n            type: 'reference',\n            match: (v) => typeof v === 'string',\n            node: StringNode({ validator: 'resource', params: { pool: '$texture' } }),\n            change: (v) => typeof v === 'string' ? v.replace(/^#/, '') : \"\"\n        }\n    ], { choiceContext: 'texture' });\n    schemas.register('model', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        parent: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$model' } })),\n        ambientocclusion: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        gui_light: (0, core_1.Opt)(StringNode({ enum: 'gui_light' })),\n        textures: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), Texture)),\n        elements: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\n            from: Vec(3, -16, 32),\n            to: Vec(3, -16, 32),\n            rotation: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                origin: Vec(3),\n                axis: StringNode({ enum: 'axis' }),\n                angle: (0, core_1.NumberEnum)({ values: [-45, -22.5, 0, 22.5, 45] }),\n                rescale: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            })),\n            shade: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            faces: (0, core_1.MapNode)(StringNode({ enum: 'direction' }), (0, core_1.ObjectNode)({\n                texture: Texture,\n                uv: (0, core_1.Opt)(Vec(4)),\n                cullface: (0, core_1.Opt)(StringNode({ enum: 'direction' })),\n                rotation: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                tintindex: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n            }))\n        }, { context: 'model_element' }))),\n        display: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ enum: 'display_position' }), (0, core_1.ObjectNode)({\n            rotation: Vec(3),\n            translation: Vec(3, -80, 80),\n            scale: Vec(3, -4, 4)\n        }, { context: 'item_transform' }))),\n        overrides: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\n            predicate: (0, core_1.MapNode)(StringNode({ enum: 'item_model_predicates' }), (0, core_1.NumberNode)()),\n            model: StringNode({ validator: 'resource', params: { pool: '$model' } })\n        }, { context: 'model_override' })))\n    }, { context: 'model' }), {\n        default: () => ({\n            parent: 'minecraft:item/generated',\n            textures: {\n                layer0: 'minecraft:item/diamond'\n            }\n        })\n    }));\n}\nexports.initModelSchemas = initModelSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initBlockDefinitionSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initBlockDefinitionSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('block_definition', (0, core_1.Mod)((0, core_1.ChoiceNode)([\n        {\n            type: 'variants',\n            match: (v) => v.variants !== undefined,\n            node: (0, core_1.ObjectNode)({\n                variants: (0, core_1.MapNode)(StringNode(), Reference('model_variant'))\n            }),\n            change: (v) => ({ variants: { \"\": {} } })\n        },\n        {\n            type: 'multipart',\n            match: (v) => v.multipart !== undefined,\n            node: (0, core_1.ObjectNode)({\n                multipart: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                    when: (0, core_1.Opt)(Reference('multipart_condition')),\n                    apply: Reference('model_variant'),\n                }))\n            }),\n            change: (v) => ({ multipart: { when: {}, apply: {} } })\n        }\n    ], { context: 'block_definition' }), {\n        default: () => ({\n            variants: {\n                \"\": {\n                    model: 'minecraft:block/stone'\n                }\n            }\n        })\n    }));\n    const VariantChildren = {\n        model: StringNode({ validator: 'resource', params: { pool: '$model' } }),\n        x: (0, core_1.Opt)((0, core_1.NumberEnum)({ integer: true, values: [0, 90, 180, 270] })),\n        y: (0, core_1.Opt)((0, core_1.NumberEnum)({ integer: true, values: [0, 90, 180, 270] })),\n        uvlock: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n    };\n    schemas.register('model_variant', (0, core_1.ChoiceNode)([\n        {\n            type: 'object',\n            node: (0, core_1.ObjectNode)(VariantChildren),\n            change: (v) => Array.isArray(v) && v.length > 0 ? v[0] : ({})\n        },\n        {\n            type: 'list',\n            node: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                ...VariantChildren,\n                weight: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\n            }, { context: 'model_variant' })),\n            change: (v) => [{ weight: 1, ...v }]\n        }\n    ], { context: 'model_variant' }));\n    schemas.register('multipart_condition', (0, core_1.ChoiceNode)([\n        {\n            type: 'object',\n            priority: -1,\n            match: () => true,\n            node: (0, core_1.MapNode)(StringNode(), StringNode()),\n            change: (v) => typeof v === 'object' && Array.isArray(v === null || v === void 0 ? void 0 : v.OR) && v.OR.length > 0 ? v.OR[0] : ({})\n        },\n        {\n            type: 'or',\n            match: (v) => typeof v === 'object' && (v === null || v === void 0 ? void 0 : v.OR) !== undefined,\n            node: (0, core_1.ObjectNode)({\n                OR: (0, core_1.ListNode)(Reference('multipart_condition'))\n            }),\n            change: (v) => ({ OR: [v !== null && v !== void 0 ? v : {}] })\n        }\n    ], { context: 'multipart_condition' }));\n}\nexports.initBlockDefinitionSchemas = initBlockDefinitionSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initFontSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initFontSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('font', (0, core_1.ObjectNode)({\n        providers: (0, core_1.ListNode)(Reference('glyph_provider'))\n    }, { context: 'font' }));\n    schemas.register('glyph_provider', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ enum: 'glyph_provider_type' }),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'bitmap': {\n                file: StringNode({ validator: 'resource', params: { pool: '$texture', suffix: '.png' } }),\n                height: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                ascent: (0, core_1.NumberNode)({ integer: true }),\n                chars: (0, core_1.ListNode)(StringNode(), { minLength: 1 })\n            },\n            'ttf': {\n                file: StringNode({ validator: 'resource', params: { pool: '$texture', suffix: '.png' } }),\n                size: (0, core_1.Opt)((0, core_1.NumberNode)()),\n                oversample: (0, core_1.Opt)((0, core_1.NumberNode)()),\n                shift: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.NumberNode)(), { minLength: 2, maxLength: 2 })),\n                skip: (0, core_1.Opt)((0, core_1.StringOrList)(StringNode()))\n            },\n            'legacy_unicode': {\n                sizes: StringNode(),\n                template: StringNode()\n            }\n        }\n    }, { context: 'glyph_provider' }), {\n        default: () => ({\n            type: 'bitmap',\n        }),\n    }));\n}\nexports.initFontSchemas = initFontSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initAssetsSchemas = void 0;\nconst Model_1 = require(\"./Model\");\nconst BlockDefinition_1 = require(\"./BlockDefinition\");\nconst Font_1 = require(\"./Font\");\nfunction initAssetsSchemas(schemas, collections) {\n    (0, BlockDefinition_1.initBlockDefinitionSchemas)(schemas, collections);\n    (0, Font_1.initFontSchemas)(schemas, collections);\n    (0, Model_1.initModelSchemas)(schemas, collections);\n}\nexports.initAssetsSchemas = initAssetsSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initCommonSchemas = exports.InclusiveRange = exports.IntProvider = exports.FloatProvider = exports.NoiseSettingsPresets = exports.DefaultNoiseSettings = exports.DimensionTypePresets = exports.DefaultDimensionType = exports.FunctionCases = exports.ConditionCases = void 0;\nconst core_1 = require(\"@mcschema/core\");\nexports.DefaultDimensionType = {\n    ultrawarm: false,\n    natural: true,\n    piglin_safe: false,\n    respawn_anchor_works: false,\n    bed_works: true,\n    has_raids: true,\n    has_skylight: true,\n    has_ceiling: false,\n    coordinate_scale: 1,\n    ambient_light: 0,\n    logical_height: 256,\n    infiniburn: 'minecraft:infiniburn_overworld',\n    min_y: 0,\n    height: 256,\n};\nconst DefaultStructureSettings = {\n    'minecraft:igloo': {\n        spacing: 32,\n        separation: 8,\n        salt: 14357618\n    },\n    'minecraft:mansion': {\n        spacing: 80,\n        separation: 20,\n        salt: 10387319\n    },\n    'minecraft:jungle_pyramid': {\n        spacing: 32,\n        separation: 8,\n        salt: 14357619\n    },\n    'minecraft:nether_fossil': {\n        spacing: 2,\n        separation: 1,\n        salt: 14357921\n    },\n    'minecraft:stronghold': {\n        spacing: 1,\n        separation: 0,\n        salt: 0\n    },\n    'minecraft:shipwreck': {\n        spacing: 24,\n        separation: 4,\n        salt: 165745295\n    },\n    'minecraft:mineshaft': {\n        spacing: 1,\n        separation: 0,\n        salt: 0\n    },\n    'minecraft:desert_pyramid': {\n        spacing: 32,\n        separation: 8,\n        salt: 14357617\n    },\n    'minecraft:ruined_portal': {\n        spacing: 40,\n        separation: 15,\n        salt: 34222645\n    },\n    'minecraft:fortress': {\n        spacing: 27,\n        separation: 4,\n        salt: 30084232\n    },\n    'minecraft:pillager_outpost': {\n        spacing: 32,\n        separation: 8,\n        salt: 165745296\n    },\n    'minecraft:village': {\n        spacing: 32,\n        separation: 8,\n        salt: 10387312\n    },\n    'minecraft:endcity': {\n        spacing: 20,\n        separation: 11,\n        salt: 10387313\n    },\n    'minecraft:buried_treasure': {\n        spacing: 1,\n        separation: 0,\n        salt: 0\n    },\n    'minecraft:ocean_ruin': {\n        spacing: 20,\n        separation: 8,\n        salt: 14357621\n    },\n    'minecraft:bastion_remnant': {\n        spacing: 27,\n        separation: 4,\n        salt: 30084232\n    },\n    'minecraft:swamp_hut': {\n        spacing: 32,\n        separation: 8,\n        salt: 14357620\n    },\n    'minecraft:monument': {\n        spacing: 32,\n        separation: 5,\n        salt: 10387313\n    }\n};\nexports.DefaultNoiseSettings = {\n    bedrock_roof_position: -2147483648,\n    bedrock_floor_position: 0,\n    sea_level: 63,\n    noise_caves_enabled: true,\n    deepslate_enabled: true,\n    ore_veins_enabled: true,\n    noodle_caves_enabled: true,\n    disable_mob_generation: false,\n    aquifers_enabled: true,\n    default_block: {\n        Name: 'minecraft:stone'\n    },\n    default_fluid: {\n        Properties: {\n            level: '0'\n        },\n        Name: 'minecraft:water'\n    },\n    noise: {\n        min_y: -64,\n        height: 384,\n        size_horizontal: 1,\n        size_vertical: 2,\n        density_factor: 1,\n        density_offset: -0.51875,\n        top_slide: {\n            target: -0.078125,\n            size: 2,\n            offset: 8\n        },\n        bottom_slide: {\n            target: 0.1171875,\n            size: 3,\n            offset: 0\n        },\n        sampling: {\n            xz_scale: 0.9999999814507745,\n            y_scale: 0.9999999814507745,\n            xz_factor: 80,\n            y_factor: 160\n        },\n        terrain_shaper: {\n            offset: 0,\n            factor: 0,\n            jaggedness: 0\n        }\n    },\n    surface_rule: {\n        type: 'minecraft:sequence',\n        sequence: []\n    },\n    structures: {\n        stronghold: {\n            distance: 32,\n            spread: 3,\n            count: 128\n        },\n        structures: DefaultStructureSettings,\n    }\n};\nfunction initCommonSchemas(schemas, collections) {\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    schemas.register('block_state', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        Name: StringNode({ validator: 'resource', params: { pool: 'block' } }),\n        Properties: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'Name' }] } } }))\n    }, { context: 'block_state' }), {\n        default: () => ({\n            Name: 'minecraft:stone'\n        })\n    }));\n    schemas.register('fluid_state', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        Name: StringNode({ validator: 'resource', params: { pool: 'fluid' } }),\n        Properties: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StringNode()))\n    }, { context: 'fluid_state' }), {\n        default: () => ({\n            Name: 'minecraft:water',\n            Properties: {\n                'level': '0'\n            }\n        })\n    }));\n    schemas.register('block_pos', (0, core_1.Mod)((0, core_1.ListNode)((0, core_1.NumberNode)({ integer: true }), { minLength: 3, maxLength: 3 }), {\n        default: () => [0, 0, 0]\n    }));\n    const Bounds = (integer) => (0, core_1.Opt)((0, core_1.ChoiceNode)([\n        {\n            type: 'number',\n            node: (0, core_1.NumberNode)({ integer }),\n            change: (v) => { var _a, _b; return v === undefined ? 0 : (_b = (_a = v.min) !== null && _a !== void 0 ? _a : v.max) !== null && _b !== void 0 ? _b : 0; }\n        },\n        {\n            type: 'object',\n            node: (0, core_1.ObjectNode)({\n                min: (0, core_1.Opt)((0, core_1.NumberNode)({ integer })),\n                max: (0, core_1.Opt)((0, core_1.NumberNode)({ integer }))\n            }, { context: 'range' }),\n            change: (v) => ({\n                min: v !== null && v !== void 0 ? v : 0,\n                max: v !== null && v !== void 0 ? v : 0\n            })\n        }\n    ]));\n    schemas.register('int_bounds', Bounds(true));\n    schemas.register('float_bounds', Bounds());\n    schemas.register('int_range', (0, core_1.ChoiceNode)([\n        {\n            type: 'object',\n            node: (0, core_1.ObjectNode)({\n                min: (0, core_1.Opt)(Reference('number_provider')),\n                max: (0, core_1.Opt)(Reference('number_provider'))\n            })\n        },\n        {\n            type: 'number',\n            node: (0, core_1.NumberNode)({ integer: true })\n        }\n    ], { context: 'range' }));\n    const ObjectWithType = (pool, directType, directPath, directDefault, objectDefault, context, cases) => {\n        let defaultCase = {};\n        if (objectDefault) {\n            Object.keys(cases[objectDefault]).forEach(k => {\n                defaultCase[k] = (0, core_1.Mod)(cases[objectDefault][k], {\n                    enabled: path => path.push('type').get() === undefined\n                });\n            });\n        }\n        const provider = (0, core_1.ObjectNode)({\n            type: (0, core_1.Mod)((0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool } })), {\n                hidden: () => true\n            }),\n            [core_1.Switch]: [{ push: 'type' }],\n            [core_1.Case]: cases,\n            ...defaultCase\n        }, { context, disableSwitchContext: true });\n        const choices = [{\n                type: directType,\n                node: cases[directDefault][directPath]\n            }];\n        if (objectDefault) {\n            choices.push({\n                type: 'object',\n                priority: -1,\n                node: provider\n            });\n        }\n        Object.keys(cases).forEach(k => {\n            choices.push({\n                type: k,\n                match: (v) => {\n                    var _a;\n                    const type = 'minecraft:' + ((_a = v === null || v === void 0 ? void 0 : v.type) === null || _a === void 0 ? void 0 : _a.replace(/^minecraft:/, ''));\n                    if (type === k)\n                        return true;\n                    const keys = v ? Object.keys(v) : [];\n                    return typeof v === 'object' && ((keys === null || keys === void 0 ? void 0 : keys.length) === 0 || ((keys === null || keys === void 0 ? void 0 : keys.length) === 1 && (keys === null || keys === void 0 ? void 0 : keys[0]) === 'type'));\n                },\n                node: provider,\n                change: (v) => ({ type: k })\n            });\n        });\n        return (0, core_1.ChoiceNode)(choices, { context, choiceContext: `${context}.type` });\n    };\n    schemas.register('number_provider', ObjectWithType('loot_number_provider_type', 'number', 'value', 'minecraft:constant', 'minecraft:uniform', 'number_provider', {\n        'minecraft:constant': {\n            value: (0, core_1.NumberNode)()\n        },\n        'minecraft:uniform': {\n            min: Reference('number_provider'),\n            max: Reference('number_provider')\n        },\n        'minecraft:binomial': {\n            n: Reference('number_provider'),\n            p: Reference('number_provider')\n        },\n        'minecraft:score': {\n            target: Reference('scoreboard_name_provider'),\n            score: StringNode({ validator: 'objective' }),\n            scale: (0, core_1.Opt)((0, core_1.NumberNode)())\n        }\n    }));\n    schemas.register('scoreboard_name_provider', ObjectWithType('loot_score_provider_type', 'string', 'target', 'minecraft:context', null, 'score_provider', {\n        'minecraft:fixed': {\n            name: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities', isScoreHolder: true } }) // FIXME: doesn't support selectors\n        },\n        'minecraft:context': {\n            target: (0, core_1.Mod)(StringNode({ enum: 'entity_source' }), { default: () => 'this' })\n        }\n    }));\n    schemas.register('nbt_provider', ObjectWithType('loot_nbt_provider_type', 'string', 'target', 'minecraft:context', null, 'nbt_provider', {\n        'minecraft:storage': {\n            source: StringNode({ validator: 'resource', params: { pool: '$storage' } })\n        },\n        'minecraft:context': {\n            target: (0, core_1.Mod)(StringNode({ enum: 'copy_source' }), { default: () => 'this' })\n        }\n    }));\n    exports.FloatProvider = (config) => ObjectWithType('float_provider_type', 'number', 'value', 'minecraft:constant', null, 'float_provider', {\n        'minecraft:constant': {\n            value: (0, core_1.NumberNode)(config)\n        },\n        'minecraft:uniform': {\n            value: (0, core_1.ObjectNode)({\n                min_inclusive: (0, core_1.NumberNode)(config),\n                max_exclusive: (0, core_1.NumberNode)(config)\n            })\n        },\n        'minecraft:clamped_normal': {\n            value: (0, core_1.ObjectNode)({\n                min: (0, core_1.NumberNode)(),\n                max: (0, core_1.NumberNode)(),\n                mean: (0, core_1.NumberNode)(),\n                deviation: (0, core_1.NumberNode)()\n            })\n        },\n        'minecraft:trapezoid': {\n            value: (0, core_1.ObjectNode)({\n                min: (0, core_1.NumberNode)(),\n                max: (0, core_1.NumberNode)(),\n                plateau: (0, core_1.NumberNode)()\n            })\n        }\n    });\n    schemas.register('float_provider', (0, exports.FloatProvider)());\n    exports.IntProvider = (config) => ObjectWithType('int_provider_type', 'number', 'value', 'minecraft:constant', null, 'int_provider', {\n        'minecraft:constant': {\n            value: (0, core_1.NumberNode)({ integer: true, ...config })\n        },\n        'minecraft:uniform': {\n            value: (0, core_1.ObjectNode)({\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config })\n            })\n        },\n        'minecraft:biased_to_bottom': {\n            value: (0, core_1.ObjectNode)({\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config })\n            })\n        },\n        'minecraft:clamped': {\n            value: (0, core_1.ObjectNode)({\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\n                source: Reference('int_provider')\n            })\n        },\n        'minecraft:clamped_normal': {\n            value: (0, core_1.ObjectNode)({\n                min_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\n                max_inclusive: (0, core_1.NumberNode)({ integer: true, ...config }),\n                mean: (0, core_1.NumberNode)(),\n                deviation: (0, core_1.NumberNode)()\n            })\n        },\n        'minecraft:weighted_list': {\n            distribution: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                weight: (0, core_1.NumberNode)({ integer: true }),\n                data: Reference('int_provider'),\n            }))\n        }\n    });\n    schemas.register('int_provider', (0, exports.IntProvider)());\n    schemas.register('vertical_anchor', (0, core_1.ChoiceNode)(['absolute', 'above_bottom', 'below_top'].map(t => ({\n        type: t,\n        match: v => (v === null || v === void 0 ? void 0 : v[t]) !== undefined,\n        change: v => { var _a, _b, _c; return ({ [t]: (_c = (_b = (_a = v.absolute) !== null && _a !== void 0 ? _a : v.above_bottom) !== null && _b !== void 0 ? _b : v.below_top) !== null && _c !== void 0 ? _c : 0 }); },\n        node: (0, core_1.ObjectNode)({\n            [t]: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 })\n        })\n    })), { context: 'vertical_anchor' }));\n    schemas.register('height_provider', ObjectWithType('height_provider_type', 'number', 'value', 'minecraft:constant', null, 'height_provider', {\n        'minecraft:constant': {\n            value: Reference('vertical_anchor')\n        },\n        'minecraft:uniform': {\n            min_inclusive: Reference('vertical_anchor'),\n            max_inclusive: Reference('vertical_anchor')\n        },\n        'minecraft:biased_to_bottom': {\n            min_inclusive: Reference('vertical_anchor'),\n            max_inclusive: Reference('vertical_anchor'),\n            inner: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\n        },\n        'minecraft:very_biased_to_bottom': {\n            min_inclusive: Reference('vertical_anchor'),\n            max_inclusive: Reference('vertical_anchor'),\n            inner: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\n        },\n        'minecraft:trapezoid': {\n            min_inclusive: Reference('vertical_anchor'),\n            max_inclusive: Reference('vertical_anchor'),\n            plateau: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n        },\n        'minecraft:weighted_list': {\n            distribution: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                weight: (0, core_1.NumberNode)({ integer: true }),\n                data: Reference('height_provider'),\n            }))\n        }\n    }));\n    exports.InclusiveRange = (config) => (0, core_1.ObjectNode)({\n        min_inclusive: (0, core_1.NumberNode)(config),\n        max_inclusive: (0, core_1.NumberNode)(config)\n    }, { context: 'range' });\n    schemas.register('noise_parameters', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        firstOctave: (0, core_1.NumberNode)({ integer: true }),\n        amplitudes: (0, core_1.ListNode)((0, core_1.NumberNode)())\n    }, { context: 'noise_parameters' }), {\n        default: () => ({\n            firstOctave: -7,\n            amplitudes: [1, 1]\n        })\n    }));\n    exports.ConditionCases = (entitySourceNode = StringNode({ enum: 'entity_source' })) => ({\n        'minecraft:alternative': {\n            terms: (0, core_1.ListNode)(Reference('condition'))\n        },\n        'minecraft:block_state_property': {\n            block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\n            properties: (0, core_1.MapNode)(StringNode(), StringNode(), { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } })\n        },\n        'minecraft:damage_source_properties': {\n            predicate: Reference('damage_source_predicate')\n        },\n        'minecraft:entity_properties': {\n            entity: entitySourceNode,\n            predicate: Reference('entity_predicate')\n        },\n        'minecraft:entity_scores': {\n            entity: entitySourceNode,\n            scores: (0, core_1.MapNode)(StringNode({ validator: 'objective' }), Reference('int_range'))\n        },\n        'minecraft:inverted': {\n            term: Reference('condition')\n        },\n        'minecraft:killed_by_player': {\n            inverse: (0, core_1.Opt)((0, core_1.BooleanNode)())\n        },\n        'minecraft:location_check': {\n            offsetX: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n            offsetY: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n            offsetZ: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n            predicate: Reference('location_predicate')\n        },\n        'minecraft:match_tool': {\n            predicate: Reference('item_predicate')\n        },\n        'minecraft:random_chance': {\n            chance: (0, core_1.NumberNode)({ min: 0, max: 1 })\n        },\n        'minecraft:random_chance_with_looting': {\n            chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n            looting_multiplier: (0, core_1.NumberNode)()\n        },\n        'minecraft:reference': {\n            name: StringNode({ validator: 'resource', params: { pool: '$predicate' } })\n        },\n        'minecraft:table_bonus': {\n            enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\n            chances: (0, core_1.ListNode)((0, core_1.NumberNode)({ min: 0, max: 1 }))\n        },\n        'minecraft:time_check': {\n            value: Reference('int_range'),\n            period: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n        },\n        'minecraft:value_check': {\n            value: Reference('number_provider'),\n            range: Reference('int_range')\n        },\n        'minecraft:weather_check': {\n            raining: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            thundering: (0, core_1.Opt)((0, core_1.BooleanNode)())\n        }\n    });\n    exports.FunctionCases = (conditions, copySourceNode = StringNode({ enum: 'copy_source' }), entitySourceNode = StringNode({ enum: 'entity_source' })) => {\n        const cases = {\n            'minecraft:apply_bonus': {\n                enchantment: StringNode({ validator: 'resource', params: { pool: 'enchantment' } }),\n                formula: StringNode({ validator: 'resource', params: { pool: collections.get('loot_table_apply_bonus_formula') } }),\n                parameters: (0, core_1.Mod)((0, core_1.ObjectNode)({\n                    bonusMultiplier: (0, core_1.Mod)((0, core_1.NumberNode)(), {\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:uniform_bonus_count'\n                    }),\n                    extra: (0, core_1.Mod)((0, core_1.NumberNode)(), {\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\n                    }),\n                    probability: (0, core_1.Mod)((0, core_1.NumberNode)(), {\n                        enabled: path => path.pop().push('formula').get() === 'minecraft:binomial_with_bonus_count'\n                    })\n                }), {\n                    enabled: path => path.push('formula').get() !== 'minecraft:ore_drops'\n                })\n            },\n            'minecraft:copy_name': {\n                source: copySourceNode\n            },\n            'minecraft:copy_nbt': {\n                source: Reference('nbt_provider'),\n                ops: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                    source: StringNode({ validator: 'nbt_path', params: { category: { getter: 'copy_source', path: ['pop', 'pop', 'pop', { push: 'source' }] } } }),\n                    target: StringNode({ validator: 'nbt_path', params: { category: 'minecraft:item' } }),\n                    op: StringNode({ enum: ['replace', 'append', 'merge'] })\n                }, { context: 'nbt_operation' }))\n            },\n            'minecraft:copy_state': {\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\n                properties: (0, core_1.ListNode)(StringNode({ validator: 'block_state_key', params: { id: ['pop', 'pop', { push: 'block' }] } }))\n            },\n            'minecraft:enchant_randomly': {\n                enchantments: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })))\n            },\n            'minecraft:enchant_with_levels': {\n                levels: Reference('number_provider'),\n                treasure: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            },\n            'minecraft:exploration_map': {\n                destination: (0, core_1.Opt)(StringNode({ enum: 'map_feature' })),\n                decoration: (0, core_1.Opt)(StringNode({ enum: 'map_decoration' })),\n                zoom: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                search_radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                skip_existing_chunks: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            },\n            'minecraft:fill_player_head': {\n                entity: entitySourceNode\n            },\n            'minecraft:limit_count': {\n                limit: Reference('int_range')\n            },\n            'minecraft:looting_enchant': {\n                count: Reference('number_provider'),\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n            },\n            'minecraft:set_attributes': {\n                modifiers: (0, core_1.ListNode)(Reference('attribute_modifier'))\n            },\n            'minecraft:set_banner_pattern': {\n                patterns: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                    pattern: StringNode({ enum: 'banner_pattern' }),\n                    color: StringNode({ enum: 'dye_color' })\n                })),\n                append: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            },\n            'minecraft:set_contents': {\n                type: StringNode({ validator: 'resource', params: { pool: 'block_entity_type' } }),\n                entries: (0, core_1.ListNode)(Reference('loot_entry'))\n            },\n            'minecraft:set_count': {\n                count: Reference('number_provider'),\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            },\n            'minecraft:set_damage': {\n                damage: Reference('number_provider'),\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            },\n            'minecraft:set_enchantments': {\n                enchantments: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } }), Reference('number_provider')),\n                add: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            },\n            'minecraft:set_loot_table': {\n                type: StringNode({ validator: 'resource', params: { pool: 'block_entity_type' } }),\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\n                seed: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n            },\n            'minecraft:set_lore': {\n                entity: (0, core_1.Opt)(entitySourceNode),\n                lore: (0, core_1.ListNode)(Reference('text_component')),\n                replace: (0, core_1.Opt)((0, core_1.BooleanNode)())\n            },\n            'minecraft:set_name': {\n                entity: (0, core_1.Opt)(entitySourceNode),\n                name: (0, core_1.Opt)(Reference('text_component'))\n            },\n            'minecraft:set_nbt': {\n                tag: StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item' } } })\n            },\n            'minecraft:set_potion': {\n                id: StringNode({ validator: 'resource', params: { pool: 'potion' } })\n            },\n            'minecraft:set_stew_effect': {\n                effects: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.ObjectNode)({\n                    type: StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }),\n                    duration: Reference('number_provider')\n                })))\n            }\n        };\n        const res = {};\n        collections.get('loot_function_type').forEach(f => {\n            res[f] = { ...cases[f], ...conditions };\n        });\n        return res;\n    };\n    exports.DimensionTypePresets = (node) => (0, core_1.ObjectOrPreset)(StringNode({ validator: 'resource', params: { pool: '$dimension_type' } }), node, {\n        'minecraft:overworld': exports.DefaultDimensionType,\n        'minecraft:the_nether': {\n            name: 'minecraft:the_nether',\n            ultrawarm: true,\n            natural: false,\n            shrunk: true,\n            piglin_safe: true,\n            respawn_anchor_works: true,\n            bed_works: false,\n            has_raids: false,\n            has_skylight: false,\n            has_ceiling: true,\n            ambient_light: 0.1,\n            fixed_time: 18000,\n            logical_height: 128,\n            effects: 'minecraft:the_nether',\n            infiniburn: 'minecraft:infiniburn_nether',\n            min_y: 0,\n            height: 256,\n        },\n        'minecraft:the_end': {\n            name: 'minecraft:the_end',\n            ultrawarm: false,\n            natural: false,\n            shrunk: false,\n            piglin_safe: false,\n            respawn_anchor_works: false,\n            bed_works: false,\n            has_raids: true,\n            has_skylight: false,\n            has_ceiling: false,\n            ambient_light: 0,\n            fixed_time: 6000,\n            logical_height: 256,\n            effects: 'minecraft:the_end',\n            infiniburn: 'minecraft:infiniburn_end',\n            min_y: 0,\n            height: 256,\n        }\n    });\n    exports.NoiseSettingsPresets = (node) => (0, core_1.ObjectOrPreset)(StringNode({ validator: 'resource', params: { pool: '$worldgen/noise_settings' } }), node, {\n        'minecraft:overworld': exports.DefaultNoiseSettings,\n        'minecraft:nether': {\n            bedrock_roof_position: 0,\n            bedrock_floor_position: 0,\n            sea_level: 32,\n            noise_caves_enabled: false,\n            deepslate_enabled: false,\n            ore_veins_enabled: false,\n            noodle_caves_enabled: false,\n            disable_mob_generation: false,\n            aquifers_enabled: false,\n            default_block: {\n                Name: 'minecraft:netherrack'\n            },\n            default_fluid: {\n                Properties: {\n                    level: '0'\n                },\n                Name: 'minecraft:lava'\n            },\n            noise: {\n                min_y: 0,\n                height: 128,\n                size_horizontal: 1,\n                size_vertical: 2,\n                density_factor: 0,\n                density_offset: -0.030078125,\n                top_slide: {\n                    target: 0.9375,\n                    size: 3,\n                    offset: 0\n                },\n                bottom_slide: {\n                    target: 2.5,\n                    size: 4,\n                    offset: -1\n                },\n                sampling: {\n                    xz_scale: 1.0,\n                    y_scale: 3.0,\n                    xz_factor: 80.0,\n                    y_factor: 60.0\n                },\n                terrain_shaper: {\n                    offset: 0,\n                    factor: 0,\n                    jaggedness: 0\n                }\n            },\n            surface_rule: {\n                type: 'minecraft:sequence',\n                sequence: []\n            },\n            structures: {\n                structures: DefaultStructureSettings,\n            }\n        },\n        'minecraft:end': {\n            bedrock_roof_position: -2147483648,\n            bedrock_floor_position: -2147483648,\n            sea_level: 0,\n            noise_caves_enabled: false,\n            deepslate_enabled: false,\n            ore_veins_enabled: false,\n            noodle_caves_enabled: false,\n            disable_mob_generation: false,\n            aquifers_enabled: false,\n            default_block: {\n                Name: 'minecraft:end_stone'\n            },\n            default_fluid: {\n                Name: 'minecraft:air'\n            },\n            noise: {\n                min_y: 0,\n                height: 128,\n                size_horizontal: 2,\n                size_vertical: 1,\n                density_factor: 0,\n                density_offset: 0,\n                island_noise_override: true,\n                top_slide: {\n                    target: -23.4375,\n                    size: 64,\n                    offset: -46\n                },\n                bottom_slide: {\n                    target: -0.234375,\n                    size: 7,\n                    offset: 1\n                },\n                sampling: {\n                    xz_scale: 2.0,\n                    y_scale: 1.0,\n                    xz_factor: 80.0,\n                    y_factor: 160.0\n                },\n                terrain_shaper: {\n                    offset: 0,\n                    factor: 1,\n                    jaggedness: 0\n                }\n            },\n            surface_rule: {\n                type: 'minecraft:sequence',\n                sequence: []\n            },\n            structures: {\n                structures: DefaultStructureSettings\n            }\n        },\n        'minecraft:amplified': {\n            bedrock_roof_position: -2147483648,\n            bedrock_floor_position: 0,\n            sea_level: 63,\n            noise_caves_enabled: true,\n            deepslate_enabled: true,\n            ore_veins_enabled: true,\n            noodle_caves_enabled: true,\n            disable_mob_generation: false,\n            aquifers_enabled: true,\n            default_block: {\n                Name: 'minecraft:stone'\n            },\n            default_fluid: {\n                Properties: {\n                    level: '0'\n                },\n                Name: 'minecraft:water'\n            },\n            noise: {\n                min_y: -64,\n                height: 384,\n                size_horizontal: 1,\n                size_vertical: 2,\n                density_factor: 1,\n                density_offset: -0.51875,\n                amplified: true,\n                top_slide: {\n                    target: -0.078125,\n                    size: 2,\n                    offset: 8\n                },\n                bottom_slide: {\n                    target: 0.1171875,\n                    size: 3,\n                    offset: 0\n                },\n                sampling: {\n                    xz_scale: 0.9999999814507745,\n                    y_scale: 0.9999999814507745,\n                    xz_factor: 80,\n                    y_factor: 160\n                },\n                terrain_shaper: {\n                    offset: 0,\n                    factor: 0,\n                    jaggedness: 0\n                }\n            },\n            surface_rule: {\n                type: 'minecraft:sequence',\n                sequence: []\n            },\n            structures: {\n                stronghold: {\n                    distance: 32,\n                    spread: 3,\n                    count: 128\n                },\n                structures: DefaultStructureSettings,\n            },\n        },\n        'minecraft:caves': {\n            bedrock_roof_position: 0,\n            bedrock_floor_position: 0,\n            sea_level: 32,\n            noise_caves_enabled: false,\n            deepslate_enabled: false,\n            ore_veins_enabled: false,\n            noodle_caves_enabled: false,\n            disable_mob_generation: false,\n            aquifers_enabled: false,\n            default_block: {\n                Name: 'minecraft:stone'\n            },\n            default_fluid: {\n                Properties: {\n                    level: '0'\n                },\n                Name: 'minecraft:water'\n            },\n            noise: {\n                min_y: 0,\n                height: 128,\n                size_horizontal: 1,\n                size_vertical: 2,\n                density_factor: 0,\n                density_offset: -0.030078125,\n                top_slide: {\n                    target: 0.9375,\n                    size: 3,\n                    offset: 0\n                },\n                bottom_slide: {\n                    target: 2.5,\n                    size: 4,\n                    offset: -1\n                },\n                sampling: {\n                    xz_scale: 1.0,\n                    y_scale: 3.0,\n                    xz_factor: 80.0,\n                    y_factor: 60.0\n                },\n                terrain_shaper: {\n                    offset: 0,\n                    factor: 0,\n                    jaggedness: 0\n                }\n            },\n            surface_rule: {\n                type: 'minecraft:sequence',\n                sequence: []\n            },\n            structures: {\n                stronghold: {\n                    distance: 32,\n                    spread: 3,\n                    count: 128\n                },\n                structures: DefaultStructureSettings,\n            }\n        },\n        'minecraft:floating_islands': {\n            bedrock_roof_position: -2147483648,\n            bedrock_floor_position: -2147483648,\n            sea_level: 0,\n            noise_caves_enabled: false,\n            deepslate_enabled: false,\n            ore_veins_enabled: false,\n            noodle_caves_enabled: false,\n            disable_mob_generation: false,\n            aquifers_enabled: false,\n            default_block: {\n                Name: 'minecraft:stone'\n            },\n            default_fluid: {\n                Properties: {\n                    level: '0'\n                },\n                Name: 'minecraft:water'\n            },\n            noise: {\n                min_y: 0,\n                height: 128,\n                size_horizontal: 2,\n                size_vertical: 1,\n                density_factor: 0,\n                density_offset: 0,\n                island_noise_override: true,\n                top_slide: {\n                    target: -23.4375,\n                    size: 64,\n                    offset: -46\n                },\n                bottom_slide: {\n                    target: -0.234375,\n                    size: 7,\n                    offset: 1\n                },\n                sampling: {\n                    xz_scale: 2.0,\n                    y_scale: 1.0,\n                    xz_factor: 80.0,\n                    y_factor: 160.0\n                },\n                terrain_shaper: {\n                    offset: 0,\n                    factor: 1,\n                    jaggedness: 0\n                }\n            },\n            surface_rule: {\n                type: 'minecraft:sequence',\n                sequence: []\n            },\n            structures: {\n                stronghold: {\n                    distance: 32,\n                    spread: 3,\n                    count: 128\n                },\n                structures: DefaultStructureSettings,\n            }\n        }\n    });\n}\nexports.initCommonSchemas = initCommonSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initConditionSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"./Common\");\nfunction initConditionSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('predicate', (0, core_1.ObjectOrList)(Reference('condition'), { choiceContext: 'condition' }));\n    schemas.register('condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        condition: StringNode({ validator: 'resource', params: { pool: 'loot_condition_type' } }),\n        [core_1.Switch]: [{ push: 'condition' }],\n        [core_1.Case]: (0, Common_1.ConditionCases)()\n    }, { category: 'predicate', context: 'condition' }), {\n        default: () => ({\n            condition: 'minecraft:entity_properties',\n            entity: 'this'\n        })\n    }));\n}\nexports.initConditionSchemas = initConditionSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initDimensionSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"./Common\");\nfunction initDimensionSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('dimension', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: (0, Common_1.DimensionTypePresets)(Reference('dimension_type')),\n        generator: (0, core_1.ObjectNode)({\n            type: StringNode({ validator: 'resource', params: { pool: 'worldgen/chunk_generator' } }),\n            [core_1.Switch]: [{ push: 'type' }],\n            [core_1.Case]: {\n                'minecraft:noise': {\n                    seed: (0, core_1.NumberNode)({ integer: true }),\n                    settings: (0, Common_1.NoiseSettingsPresets)(Reference('noise_settings')),\n                    biome_source: (0, core_1.ObjectNode)({\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/biome_source' } }),\n                        [core_1.Switch]: [{ push: 'type' }],\n                        [core_1.Case]: {\n                            'minecraft:fixed': {\n                                biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })\n                            },\n                            'minecraft:multi_noise': {\n                                preset: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: ['minecraft:overworld', 'minecraft:nether'] } })),\n                                biomes: (0, core_1.Mod)((0, core_1.ListNode)(Reference('generator_biome')), {\n                                    enabled: path => path.push('preset').get() === undefined,\n                                    default: () => [{\n                                            biome: 'minecraft:plains'\n                                        }]\n                                })\n                            },\n                            'minecraft:checkerboard': {\n                                scale: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 62 })),\n                                biomes: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\n                            },\n                            'minecraft:the_end': {\n                                seed: (0, core_1.NumberNode)({ integer: true })\n                            }\n                        }\n                    }, { category: 'predicate', disableSwitchContext: true })\n                },\n                'minecraft:flat': {\n                    settings: (0, core_1.ObjectNode)({\n                        biome: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\n                        lakes: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                        features: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                        layers: (0, core_1.ListNode)(Reference('generator_layer')),\n                        structures: Reference('generator_structures')\n                    })\n                }\n            }\n        }, { disableSwitchContext: true })\n    }, { category: 'pool', context: 'dimension' }), {\n        default: () => {\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\n            return {\n                type: 'minecraft:overworld',\n                generator: {\n                    type: 'minecraft:noise',\n                    seed,\n                    biome_source: {\n                        type: 'minecraft:fixed',\n                        seed,\n                        biome: 'minecraft:plains'\n                    },\n                    settings: 'minecraft:overworld'\n                }\n            };\n        }\n    }));\n    const ClimateParameter = (0, core_1.ChoiceNode)([\n        {\n            type: 'number',\n            node: (0, core_1.NumberNode)({ min: -2, max: 2 }),\n            change: (v) => { var _a; return (_a = v[0]) !== null && _a !== void 0 ? _a : 0; }\n        },\n        {\n            type: 'list',\n            node: (0, core_1.ListNode)((0, core_1.NumberNode)({ min: -2, max: 2 }), { minLength: 2, maxLength: 2 }),\n            change: (v) => [v !== null && v !== void 0 ? v : 0, v !== null && v !== void 0 ? v : 0]\n        }\n    ]);\n    schemas.register('generator_biome', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        biome: StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }),\n        parameters: (0, core_1.ObjectNode)({\n            temperature: ClimateParameter,\n            humidity: ClimateParameter,\n            continentalness: ClimateParameter,\n            erosion: ClimateParameter,\n            weirdness: ClimateParameter,\n            depth: ClimateParameter,\n            offset: (0, core_1.NumberNode)({ min: 0, max: 1 })\n        })\n    }, { context: 'generator_biome' }), {\n        default: () => ({\n            biome: 'minecraft:plains',\n            parameters: {\n                altitude: 0,\n                temperature: 0,\n                humidity: 0,\n                weirdness: 0,\n                offset: 0\n            }\n        })\n    }));\n}\nexports.initDimensionSchemas = initDimensionSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initDimensionTypeSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"./Common\");\nfunction initDimensionTypeSchemas(schemas, collections) {\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('dimension_type', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        ultrawarm: (0, core_1.BooleanNode)(),\n        natural: (0, core_1.BooleanNode)(),\n        piglin_safe: (0, core_1.BooleanNode)(),\n        respawn_anchor_works: (0, core_1.BooleanNode)(),\n        bed_works: (0, core_1.BooleanNode)(),\n        has_raids: (0, core_1.BooleanNode)(),\n        has_skylight: (0, core_1.BooleanNode)(),\n        has_ceiling: (0, core_1.BooleanNode)(),\n        coordinate_scale: (0, core_1.NumberNode)({ min: 0.00001, max: 30000000 }),\n        ambient_light: (0, core_1.NumberNode)(),\n        fixed_time: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n        logical_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\n        effects: (0, core_1.Opt)(StringNode({ enum: ['minecraft:overworld', 'minecraft:the_nether', 'minecraft:the_end'] })),\n        infiniburn: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\n        min_y: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 }),\n        height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 })\n    }, { context: 'dimension_type' }), node => ({\n        default: () => Common_1.DefaultDimensionType,\n        validate: (path, value, errors, options) => {\n            value = node.validate(path, value, errors, options);\n            if ((value === null || value === void 0 ? void 0 : value.min_y) + (value === null || value === void 0 ? void 0 : value.height) > 2047) {\n                errors.add(path.push('height'), 'error.min_y_plus_height', 2047);\n            }\n            if ((value === null || value === void 0 ? void 0 : value.logical_height) > (value === null || value === void 0 ? void 0 : value.height)) {\n                errors.add(path.push('logical_height'), 'error.logical_height');\n            }\n            if ((value === null || value === void 0 ? void 0 : value.height) % 16 !== 0) {\n                errors.add(path.push('height'), 'error.height_multiple', 16);\n            }\n            if ((value === null || value === void 0 ? void 0 : value.min_y) % 16 !== 0) {\n                errors.add(path.push('min_y'), 'error.min_y_multiple', 16);\n            }\n            return value;\n        }\n    })));\n}\nexports.initDimensionTypeSchemas = initDimensionTypeSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initItemModifierSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"./Common\");\nfunction initItemModifierSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('item_modifier', (0, core_1.ObjectOrList)(Reference('function'), { choiceContext: 'function' }));\n    const conditions = {\n        conditions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('condition')))\n    };\n    schemas.register('function', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        function: StringNode({ validator: 'resource', params: { pool: 'loot_function_type' } }),\n        [core_1.Switch]: [{ push: 'function' }],\n        [core_1.Case]: (0, Common_1.FunctionCases)(conditions)\n    }, { category: 'function', context: 'function' }), {\n        default: () => [{\n                function: 'minecraft:set_count',\n                count: 1\n            }]\n    }));\n}\nexports.initItemModifierSchemas = initItemModifierSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LootFunctions = exports.LootConditions = exports.LootCopySources = exports.LootEntitySources = exports.LootTableTypes = void 0;\nexports.LootTableTypes = new Map([\n    ['minecraft:advancement_entity', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\n    ['minecraft:advancement_reward', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\n    ['minecraft:barter', { requires: [8 /* ThisEntity */], allows: [] }],\n    ['minecraft:block', { requires: [1 /* BlockState */, 7 /* Origin */, 9 /* Tool */], allows: [0 /* BlockEntity */, 4 /* ExplosionRadius */, 8 /* ThisEntity */] }],\n    ['minecraft:chest', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\n    ['minecraft:command', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }],\n    ['minecraft:empty', { requires: [], allows: [] }],\n    ['minecraft:entity', { requires: [2 /* DamageSource */, 7 /* Origin */, 8 /* ThisEntity */], allows: [3 /* DirectKillerEntity */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */] }],\n    ['minecraft:fishing', { requires: [7 /* Origin */, 9 /* Tool */], allows: [8 /* ThisEntity */] }],\n    ['minecraft:generic', { requires: [2 /* DamageSource */, 0 /* BlockEntity */, 1 /* BlockState */, 3 /* DirectKillerEntity */, 4 /* ExplosionRadius */, 5 /* KillerEntity */, 6 /* LastDamagePlayer */, 7 /* Origin */, 8 /* ThisEntity */, 9 /* Tool */], allows: [] }],\n    ['minecraft:gift', { requires: [7 /* Origin */, 8 /* ThisEntity */], allows: [] }],\n    ['minecraft:selector', { requires: [7 /* Origin */], allows: [8 /* ThisEntity */] }]\n]);\n/**\n * A map from loot entity sources to an array of their required context.\n */\nexports.LootEntitySources = new Map([\n    ['direct_killer', [3 /* DirectKillerEntity */]],\n    ['killer', [5 /* KillerEntity */]],\n    ['killer_player', [5 /* KillerEntity */]],\n    ['this', [8 /* ThisEntity */]]\n]);\n/**\n * A map from loot copy sources to an array of their required context.\n */\nexports.LootCopySources = new Map([\n    ['block_entity', [0 /* BlockEntity */]],\n    ['killer', [5 /* KillerEntity */]],\n    ['killer_player', [5 /* KillerEntity */]],\n    ['this', [8 /* ThisEntity */]]\n]);\n/**\n * A map from loot condition IDs to an array of their required context.\n */\nexports.LootConditions = new Map([\n    ['minecraft:alternative', []],\n    ['minecraft:block_state_property', [1 /* BlockState */]],\n    ['minecraft:damage_source_properties', [2 /* DamageSource */]],\n    ['minecraft:entity_properties', [7 /* Origin */]],\n    ['minecraft:entity_scores', []],\n    ['minecraft:inverted', []],\n    ['minecraft:killed_by_player', [6 /* LastDamagePlayer */]],\n    ['minecraft:location_check', []],\n    ['minecraft:match_tool', [9 /* Tool */]],\n    ['minecraft:random_chance', []],\n    ['minecraft:random_chance_with_looting', [5 /* KillerEntity */]],\n    ['minecraft:reference', []],\n    ['minecraft:survives_explosion', [4 /* ExplosionRadius */]],\n    ['minecraft:table_bonus', [9 /* Tool */]],\n    ['minecraft:time_check', []],\n    ['minecraft:weather_check', []]\n]);\n/**\n * A map from loot function IDs to an array of their required context.\n */\nexports.LootFunctions = new Map([\n    ['minecraft:apply_bonus', [9 /* Tool */]],\n    ['minecraft:copy_name', []],\n    ['minecraft:copy_nbt', []],\n    ['minecraft:copy_state', [1 /* BlockState */]],\n    ['minecraft:enchant_randomly', []],\n    ['minecraft:enchant_with_levels', []],\n    ['minecraft:exploration_map', [7 /* Origin */]],\n    ['minecraft:explosion_decay', []],\n    ['minecraft:fill_player_head', []],\n    ['minecraft:furnace_smelt', []],\n    ['minecraft:limit_count', []],\n    ['minecraft:looting_enchant', [5 /* KillerEntity */]],\n    ['minecraft:set_attributes', []],\n    ['minecraft:set_banner_pattern', []],\n    ['minecraft:set_contents', []],\n    ['minecraft:set_count', []],\n    ['minecraft:set_damage', []],\n    ['minecraft:set_loot_table', []],\n    ['minecraft:set_lore', []],\n    ['minecraft:set_name', []],\n    ['minecraft:set_nbt', []],\n    ['minecraft:set_stew_effect', []]\n]);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initLootTableSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst LootContext_1 = require(\"../LootContext\");\nconst Common_1 = require(\"./Common\");\nfunction initLootTableSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const conditions = {\n        conditions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_condition')))\n    };\n    const functionsAndConditions = {\n        functions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_function'))),\n        ...conditions\n    };\n    function compileSwitchNode(contextMap, collectionID, getNode) {\n        const cases = [];\n        const getAvailableOptions = (providedContext) => collections\n            .get(collectionID)\n            .filter(t => {\n            var _a;\n            const requiredContext = (_a = contextMap.get(t)) !== null && _a !== void 0 ? _a : [];\n            return requiredContext.every(c => providedContext.includes(c));\n        });\n        for (const [tableType, { allows, requires }] of LootContext_1.LootTableTypes) {\n            const providedContext = [...allows, ...requires];\n            cases.push({\n                match: path => path.getModel().get(new core_1.Path(['type'])) === tableType,\n                node: getNode(getAvailableOptions(providedContext))\n            });\n        }\n        cases.push({ match: _ => true, node: getNode(collectionID) });\n        return (0, core_1.SwitchNode)(cases);\n    }\n    const conditionIDSwtichNode = compileSwitchNode(LootContext_1.LootConditions, 'loot_condition_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_condition_type` } }));\n    const functionIDSwtichNode = compileSwitchNode(LootContext_1.LootFunctions, 'loot_function_type', type => StringNode({ validator: 'resource', params: { pool: type instanceof Array ? type : `loot_function_type` } }));\n    const entitySourceSwtichNode = compileSwitchNode(LootContext_1.LootEntitySources, 'entity_source', type => StringNode({ enum: type }));\n    const copySourceSwtichNode = compileSwitchNode(LootContext_1.LootCopySources, 'copy_source', type => StringNode({ enum: type }));\n    schemas.register('loot_table', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: (0, core_1.Opt)(StringNode({ validator: \"resource\", params: { pool: collections.get('loot_context_type') } })),\n        pools: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ObjectNode)({\n            rolls: Reference('number_provider'),\n            bonus_rolls: (0, core_1.Opt)(Reference('number_provider')),\n            entries: (0, core_1.ListNode)(Reference('loot_entry')),\n            ...functionsAndConditions\n        }, { category: 'pool', context: 'loot_pool' }), {\n            default: () => ({\n                rolls: 1,\n                entries: [{\n                        type: 'minecraft:item',\n                        name: 'minecraft:stone'\n                    }]\n            })\n        }))),\n        functions: (0, core_1.Opt)((0, core_1.ListNode)(Reference('loot_function')))\n    }, { context: 'loot_table' }), {\n        default: () => ({\n            pools: [{\n                    rolls: 1,\n                    entries: [{\n                            type: 'minecraft:item',\n                            name: 'minecraft:stone'\n                        }]\n                }]\n        })\n    }));\n    const weightMod = {\n        enabled: path => {\n            var _a;\n            return ((_a = path.pop().get()) === null || _a === void 0 ? void 0 : _a.length) > 1\n                && !['minecraft:alternatives', 'minecraft:group', 'minecraft:sequence'].includes(path.push('type').get());\n        }\n    };\n    schemas.register('loot_entry', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'loot_pool_entry_type' } }),\n        weight: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), weightMod)),\n        quality: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), weightMod)),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:alternatives': {\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\n                ...functionsAndConditions\n            },\n            'minecraft:dynamic': {\n                name: StringNode(),\n                ...functionsAndConditions\n            },\n            'minecraft:group': {\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\n                ...functionsAndConditions\n            },\n            'minecraft:item': {\n                name: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                ...functionsAndConditions\n            },\n            'minecraft:loot_table': {\n                name: StringNode({ validator: 'resource', params: { pool: '$loot_table' } }),\n                ...functionsAndConditions\n            },\n            'minecraft:sequence': {\n                children: (0, core_1.ListNode)(Reference('loot_entry')),\n                ...functionsAndConditions\n            },\n            'minecraft:tag': {\n                name: StringNode({ validator: 'resource', params: { pool: '$tag/item' } }),\n                expand: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                ...functionsAndConditions\n            }\n        }\n    }, { context: 'loot_entry' }), {\n        default: () => ({\n            type: 'minecraft:item',\n            name: 'minecraft:stone'\n        })\n    }));\n    schemas.register('loot_function', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        function: functionIDSwtichNode,\n        [core_1.Switch]: [{ push: 'function' }],\n        [core_1.Case]: (0, Common_1.FunctionCases)(conditions, copySourceSwtichNode, entitySourceSwtichNode)\n    }, { category: 'function', context: 'function' }), {\n        default: () => ({\n            function: 'minecraft:set_count',\n            count: 1\n        })\n    }));\n    schemas.register('loot_condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        condition: conditionIDSwtichNode,\n        [core_1.Switch]: [{ push: 'condition' }],\n        [core_1.Case]: (0, Common_1.ConditionCases)(entitySourceSwtichNode)\n    }, { category: 'predicate', context: 'condition' }), {\n        default: () => ({\n            condition: 'minecraft:random_chance',\n            chance: 0.5\n        })\n    }));\n    schemas.register('attribute_modifier', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        attribute: StringNode({ validator: 'resource', params: { pool: 'attribute' } }),\n        name: StringNode(),\n        amount: Reference('number_provider'),\n        operation: StringNode({ enum: ['addition', 'multiply_base', 'multiply_total'] }),\n        id: (0, core_1.Opt)(StringNode({ validator: 'uuid' })),\n        slot: (0, core_1.StringOrList)(StringNode({ enum: 'slot' }))\n    }, { context: 'attribute_modifier' }), {\n        default: () => ({\n            attribute: 'minecraft:generic.max_health',\n            name: '',\n            amount: 1,\n            operation: 'addition',\n            slot: 'mainhand'\n        })\n    }));\n}\nexports.initLootTableSchemas = initLootTableSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initPackMcmetaSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst CURRENT_PACK_FORMAT = 8;\nfunction initPackMcmetaSchemas(schemas, _) {\n    const getSimpleString = (jsonText) => { var _a, _b; return jsonText instanceof Array ? getSimpleString(jsonText[0]) : (_b = (_a = jsonText === null || jsonText === void 0 ? void 0 : jsonText.text) !== null && _a !== void 0 ? _a : jsonText === null || jsonText === void 0 ? void 0 : jsonText.toString()) !== null && _b !== void 0 ? _b : ''; };\n    schemas.register('pack_mcmeta', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        pack: (0, core_1.Mod)((0, core_1.ObjectNode)({\n            pack_format: (0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: CURRENT_PACK_FORMAT, max: CURRENT_PACK_FORMAT }), {\n                default: () => CURRENT_PACK_FORMAT,\n                canUpdate: (_p, v) => v !== CURRENT_PACK_FORMAT,\n                update: () => [{ name: 'pack_format', params: [CURRENT_PACK_FORMAT], newValue: CURRENT_PACK_FORMAT }]\n            }),\n            description: (0, core_1.Reference)(schemas, 'text_component')\n        }), {\n            default: () => ({\n                pack_format: CURRENT_PACK_FORMAT,\n                description: ''\n            })\n        })\n    }), {\n        default: () => ({\n            pack: {\n                pack_format: CURRENT_PACK_FORMAT,\n                description: ''\n            }\n        })\n    }));\n}\nexports.initPackMcmetaSchemas = initPackMcmetaSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initPredicatesSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initPredicatesSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const StateChoice = (0, core_1.ChoiceNode)([\n        {\n            type: 'string',\n            node: StringNode(),\n            change: v => (typeof v === 'boolean' || typeof v === 'number') ? v.toString() : ''\n        },\n        {\n            type: 'number',\n            node: (0, core_1.NumberNode)(),\n            change: v => (typeof v === 'string') ? parseInt(v) : 0\n        },\n        {\n            type: 'object',\n            node: (0, core_1.ObjectNode)({\n                min: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                max: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n            }),\n            change: v => (typeof v === 'number') ? ({ min: v, max: v }) : ({})\n        },\n        {\n            type: 'boolean',\n            node: (0, core_1.BooleanNode)(),\n            change: v => v === 'true' || v === 1\n        }\n    ]);\n    schemas.register('item_predicate', (0, core_1.ObjectNode)({\n        items: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'item' } }))),\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/item' } })),\n        count: Reference('int_bounds'),\n        durability: Reference('int_bounds'),\n        potion: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'potion' } })),\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'item' }] } } })),\n        enchantments: (0, core_1.Opt)((0, core_1.ListNode)(Reference('enchantment_predicate')))\n    }, { context: 'item' }));\n    schemas.register('enchantment_predicate', (0, core_1.ObjectNode)({\n        enchantment: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'enchantment' } })),\n        levels: Reference('int_bounds')\n    }, { context: 'enchantment' }));\n    schemas.register('block_predicate', (0, core_1.ObjectNode)({\n        blocks: (0, core_1.Opt)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))),\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/block' } })),\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block', id: ['pop', { push: 'block' }] } } })),\n        state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StateChoice, { validation: { validator: 'block_state_map', params: { id: ['pop', { push: 'block' }] } } }))\n    }, { context: 'block' }));\n    schemas.register('fluid_predicate', (0, core_1.ObjectNode)({\n        fluid: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'fluid' } })),\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/fluid' } })),\n        state: (0, core_1.Opt)((0, core_1.MapNode)(StringNode(), StateChoice))\n    }, { context: 'fluid' }));\n    schemas.register('location_predicate', (0, core_1.ObjectNode)({\n        position: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            x: Reference('float_bounds'),\n            y: Reference('float_bounds'),\n            z: Reference('float_bounds')\n        })),\n        biome: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } })),\n        feature: (0, core_1.Opt)(StringNode({ enum: collections.get('worldgen/structure_feature').map(v => v.slice(10)) })),\n        dimension: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$dimension' } })),\n        light: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            light: Reference('int_bounds')\n        })),\n        smokey: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        block: (0, core_1.Opt)(Reference('block_predicate')),\n        fluid: (0, core_1.Opt)(Reference('fluid_predicate'))\n    }, { context: 'location' }));\n    schemas.register('statistic_predicate', (0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'stat_type' } }),\n        stat: StringNode(),\n        value: Reference('int_bounds'),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:mined': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'block' } })\n            },\n            'minecraft:crafted': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\n            },\n            'minecraft:used': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\n            },\n            'minecraft:broken': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\n            },\n            'minecraft:picked_up': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\n            },\n            'minecraft:dropped': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'item' } })\n            },\n            'minecraft:killed': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\n            },\n            'minecraft:killed_by': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'entity_type' } })\n            },\n            'minecraft:custom': {\n                stat: StringNode({ validator: 'resource', params: { pool: 'custom_stat' } })\n            }\n        }\n    }));\n    schemas.register('player_predicate', (0, core_1.ObjectNode)({\n        gamemode: (0, core_1.Opt)(StringNode({ enum: 'gamemode' })),\n        level: Reference('int_bounds'),\n        advancements: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$advancement' } }), (0, core_1.ChoiceNode)([\n            { type: 'boolean', node: (0, core_1.BooleanNode)(), change: _ => true },\n            {\n                type: 'object', node: (0, core_1.MapNode)(StringNode(), (0, core_1.BooleanNode)())\n            }\n        ]))),\n        recipes: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$recipe' } }), (0, core_1.BooleanNode)())),\n        stats: (0, core_1.Opt)((0, core_1.ListNode)(Reference('statistic_predicate'))),\n        looking_at: (0, core_1.Opt)(Reference('entity_predicate'))\n    }, { context: 'player' }));\n    schemas.register('status_effect_predicate', (0, core_1.ObjectNode)({\n        amplifier: Reference('int_bounds'),\n        duration: Reference('int_bounds'),\n        ambient: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        visible: (0, core_1.Opt)((0, core_1.BooleanNode)())\n    }, { context: 'status_effect' }));\n    schemas.register('distance_predicate', (0, core_1.ObjectNode)({\n        x: Reference('float_bounds'),\n        y: Reference('float_bounds'),\n        z: Reference('float_bounds'),\n        absolute: Reference('float_bounds'),\n        horizontal: Reference('float_bounds')\n    }, { context: 'distance' }));\n    schemas.register('entity_predicate', (0, core_1.ObjectNode)({\n        type: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'entity_type', allowTag: true } })),\n        nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:entity', id: ['pop', { push: 'type' }] } } })),\n        team: (0, core_1.Opt)(StringNode({ validator: 'team' })),\n        location: (0, core_1.Opt)(Reference('location_predicate')),\n        stepping_on: (0, core_1.Opt)(Reference('location_predicate')),\n        distance: (0, core_1.Opt)(Reference('distance_predicate')),\n        flags: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            is_on_fire: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            is_sneaking: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            is_sprinting: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            is_swimming: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            is_baby: (0, core_1.Opt)((0, core_1.BooleanNode)())\n        })),\n        equipment: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ enum: 'slot' }), Reference('item_predicate'))),\n        vehicle: (0, core_1.Opt)(Reference('entity_predicate')),\n        passenger: (0, core_1.Opt)(Reference('entity_predicate')),\n        targeted_entity: (0, core_1.Opt)(Reference('entity_predicate')),\n        player: (0, core_1.Opt)(Reference('player_predicate')),\n        lightning_bolt: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            blocks_set_on_fire: (0, core_1.Opt)(Reference('int_bounds')),\n            entity_struck: (0, core_1.Opt)(Reference('entity_predicate'))\n        })),\n        fishing_hook: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            in_open_water: (0, core_1.Opt)((0, core_1.BooleanNode)())\n        })),\n        catType: (0, core_1.Opt)(StringNode({ enum: 'cat_texture' })),\n        effects: (0, core_1.Opt)((0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'mob_effect' } }), Reference('status_effect_predicate')))\n    }, { context: 'entity' }));\n    schemas.register('damage_source_predicate', (0, core_1.ObjectNode)({\n        is_explosion: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        is_fire: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        is_magic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        is_projectile: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        is_lightning: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        bypasses_armor: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        bypasses_invulnerability: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        bypasses_magic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        source_entity: (0, core_1.Opt)(Reference('entity_predicate')),\n        direct_entity: (0, core_1.Opt)(Reference('entity_predicate'))\n    }, { context: 'damage_source' }));\n    schemas.register('damage_predicate', (0, core_1.ObjectNode)({\n        dealt: Reference('float_bounds'),\n        taken: Reference('float_bounds'),\n        blocked: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        source_entity: (0, core_1.Opt)(Reference('entity_predicate')),\n        type: (0, core_1.Opt)(Reference('damage_source_predicate'))\n    }, { context: 'damage' }));\n}\nexports.initPredicatesSchemas = initPredicatesSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initRecipeSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initRecipeSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('recipe', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'recipe_serializer' } }),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:crafting_shaped': {\n                group: (0, core_1.Opt)(StringNode({ enum: 'recipe_group', additional: true })),\n                pattern: (0, core_1.ListNode)(StringNode()),\n                key: (0, core_1.MapNode)(StringNode(), // TODO: add validation\n                Reference('recipe_ingredient')),\n                result: Reference('recipe_result')\n            },\n            'minecraft:crafting_shapeless': {\n                group: (0, core_1.Opt)(StringNode()),\n                ingredients: (0, core_1.ListNode)(Reference('recipe_ingredient')),\n                result: Reference('recipe_result')\n            },\n            'minecraft:smelting': {\n                group: (0, core_1.Opt)(StringNode()),\n                ingredient: Reference('recipe_ingredient'),\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 200 }))\n            },\n            'minecraft:blasting': {\n                group: (0, core_1.Opt)(StringNode()),\n                ingredient: Reference('recipe_ingredient'),\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\n            },\n            'minecraft:smoking': {\n                group: (0, core_1.Opt)(StringNode()),\n                ingredient: Reference('recipe_ingredient'),\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\n            },\n            'minecraft:campfire_cooking': {\n                group: (0, core_1.Opt)(StringNode()),\n                ingredient: Reference('recipe_ingredient'),\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                experience: (0, core_1.Opt)((0, core_1.NumberNode)()),\n                cookingtime: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 100 }))\n            },\n            'minecraft:stonecutting': {\n                group: (0, core_1.Opt)(StringNode()),\n                ingredient: Reference('recipe_ingredient'),\n                result: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                count: (0, core_1.NumberNode)({ integer: true })\n            },\n            'minecraft:smithing': {\n                group: (0, core_1.Opt)(StringNode()),\n                base: Reference('recipe_ingredient_object'),\n                addition: Reference('recipe_ingredient_object'),\n                result: Reference('recipe_result')\n            }\n        }\n    }, { context: 'recipe', disableSwitchContext: true }), {\n        default: () => ({\n            type: 'minecraft:crafting_shaped'\n        })\n    }));\n    schemas.register('recipe_ingredient', (0, core_1.Mod)((0, core_1.ChoiceNode)([\n        {\n            type: 'object',\n            node: Reference('recipe_ingredient_object'),\n            change: v => v[0]\n        },\n        {\n            type: 'list',\n            node: (0, core_1.ListNode)(Reference('recipe_ingredient_object')),\n            change: v => [v]\n        }\n    ]), {\n        default: () => ({\n            item: 'minecraft:stone'\n        })\n    }));\n    schemas.register('recipe_ingredient_object', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        item: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: 'item' } })),\n        tag: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$tag/item' } }))\n    }), {\n        default: () => ({\n            item: 'minecraft:stone'\n        })\n    }));\n    schemas.register('recipe_result', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        item: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n        count: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.NumberNode)({ integer: true }), { default: () => 1 }))\n    }), {\n        default: () => ({\n            item: 'minecraft:stone'\n        })\n    }));\n}\nexports.initRecipeSchemas = initRecipeSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initTagsSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initTagsSchemas(schemas, collections) {\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const TagBase = (type) => (0, core_1.Mod)((0, core_1.ObjectNode)({\n        replace: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        values: (0, core_1.ListNode)((0, core_1.ChoiceNode)([\n            {\n                type: 'string',\n                node: StringNode({ validator: 'resource', params: { pool: type, allowTag: true } }),\n                change: v => v.id\n            },\n            {\n                type: 'object',\n                node: (0, core_1.ObjectNode)({\n                    id: StringNode({ validator: 'resource', params: { pool: type, allowTag: true, allowUnknown: true } }),\n                    required: (0, core_1.BooleanNode)()\n                }),\n                change: v => ({ id: v })\n            }\n        ])),\n    }, { context: 'tag' }), {\n        default: () => ({\n            values: []\n        })\n    });\n    schemas.register('block_tag', TagBase('block'));\n    schemas.register('entity_type_tag', TagBase('entity_type'));\n    schemas.register('fluid_tag', TagBase('fluid'));\n    schemas.register('function_tag', TagBase('$function'));\n    schemas.register('game_event_tag', TagBase('game_event'));\n    schemas.register('item_tag', TagBase('item'));\n}\nexports.initTagsSchemas = initTagsSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initTextComponentSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initTextComponentSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const getSimpleString = (v) => { var _a; return v instanceof Array ? getSimpleString(v[0]) : (_a = v === null || v === void 0 ? void 0 : v.text) !== null && _a !== void 0 ? _a : (typeof v === 'object' ? '' : v === null || v === void 0 ? void 0 : v.toString()); };\n    schemas.register('text_component', (0, core_1.Mod)((0, core_1.ChoiceNode)([\n        {\n            type: 'object',\n            node: Reference('text_component_object'),\n            change: v => v instanceof Array ? (typeof v[0] === 'object' ? v[0] : { text: getSimpleString(v[0]) }) : typeof v === 'object' ? v : { text: getSimpleString(v) }\n        },\n        {\n            type: 'list',\n            node: Reference('text_component_list'),\n            change: v => [v]\n        },\n        {\n            type: 'string',\n            priority: 1,\n            node: StringNode(),\n            change: getSimpleString\n        },\n        {\n            type: 'number',\n            node: (0, core_1.NumberNode)(),\n            change: v => {\n                const n = parseFloat(getSimpleString(v));\n                return isFinite(n) ? n : (!!v ? 1 : 0);\n            }\n        },\n        {\n            type: 'boolean',\n            node: (0, core_1.BooleanNode)(),\n            change: v => {\n                const s = getSimpleString(v);\n                return s === 'true' || s === 'false' ? s === 'true' : !!s;\n            }\n        }\n    ], { context: 'text_component' }), {\n        default: () => ({\n            text: \"\"\n        })\n    }));\n    const CommonFields = {\n        color: (0, core_1.Opt)(StringNode()) /* TODO */,\n        font: (0, core_1.Opt)(StringNode()),\n        bold: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        italic: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        underlined: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        strikethrough: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        obfuscated: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n        insertion: (0, core_1.Opt)(StringNode()),\n        clickEvent: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            action: StringNode({ enum: ['open_url', 'open_file', 'run_command', 'suggest_command', 'change_page', 'copy_to_clipboard'] }),\n            [core_1.Switch]: [{ push: 'action' }],\n            [core_1.Case]: {\n                'change_page': {\n                    value: StringNode()\n                },\n                'copy_to_clipboard': {\n                    value: StringNode()\n                },\n                'open_file': {\n                    value: StringNode()\n                },\n                'open_url': {\n                    value: StringNode()\n                },\n                'run_command': {\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\n                },\n                'suggest_command': {\n                    value: StringNode({ validator: 'command', params: { leadingSlash: true, allowPartial: true } })\n                }\n            }\n        })),\n        hoverEvent: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            action: StringNode({ enum: ['show_text', 'show_item', 'show_entity'] }),\n            [core_1.Switch]: [{ push: 'action' }],\n            [core_1.Case]: {\n                'show_text': {\n                    value: (0, core_1.Opt)(Reference('text_component')),\n                    contents: (0, core_1.Opt)(Reference('text_component'))\n                },\n                'show_item': {\n                    value: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { module: 'util::InventoryItem' } })),\n                    contents: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                        id: StringNode({ validator: 'resource', params: { pool: 'item' } }),\n                        count: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                        tag: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:item', id: ['pop', { push: 'id' }] } } }))\n                    }))\n                },\n                'show_entity': {\n                    value: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                        name: (0, core_1.Opt)(StringNode()),\n                        type: (0, core_1.Opt)(StringNode()),\n                        id: (0, core_1.Opt)(StringNode())\n                    })),\n                    contents: (0, core_1.Opt)((0, core_1.Mod)((0, core_1.ObjectNode)({\n                        name: (0, core_1.Opt)(Reference('text_component')),\n                        type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\n                        id: StringNode({ validator: 'uuid' })\n                    }), {\n                        default: () => ({\n                            type: 'minecraft:pig',\n                            id: '00000001-0001-0001-0001-000000000001'\n                        })\n                    }))\n                }\n            }\n        })),\n        extra: (0, core_1.Opt)(Reference('text_component_list'))\n    };\n    schemas.register('text_component_object', (0, core_1.Mod)((0, core_1.ChoiceNode)([\n        {\n            type: 'text',\n            match: v => typeof v === 'object',\n            change: v => ({ text: '' }),\n            priority: -1,\n            node: (0, core_1.ObjectNode)({\n                text: StringNode(),\n                ...CommonFields\n            })\n        },\n        {\n            type: 'translation',\n            match: v => (v === null || v === void 0 ? void 0 : v.translate) !== undefined,\n            change: v => ({ translate: '' }),\n            node: (0, core_1.ObjectNode)({\n                translate: StringNode(),\n                with: (0, core_1.Opt)(Reference('text_component_list')),\n                ...CommonFields\n            })\n        },\n        {\n            type: 'score',\n            match: v => (v === null || v === void 0 ? void 0 : v.score) !== undefined,\n            change: v => ({ score: {} }),\n            node: (0, core_1.ObjectNode)({\n                score: (0, core_1.ObjectNode)({\n                    name: StringNode({ validator: 'entity', params: { amount: 'single', type: 'entities', isScoreHolder: true } }),\n                    objective: StringNode({ validator: 'objective' }),\n                    value: (0, core_1.Opt)(StringNode())\n                }),\n                ...CommonFields\n            })\n        },\n        {\n            type: 'selector',\n            match: v => (v === null || v === void 0 ? void 0 : v.selector) !== undefined,\n            change: v => ({ selector: '' }),\n            node: (0, core_1.ObjectNode)({\n                selector: StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } }),\n                separator: (0, core_1.Opt)(Reference('text_component')),\n                ...CommonFields\n            })\n        },\n        {\n            type: 'keybind',\n            match: v => (v === null || v === void 0 ? void 0 : v.keybind) !== undefined,\n            change: v => ({ keybind: '' }),\n            node: (0, core_1.ObjectNode)({\n                keybind: StringNode({ enum: 'keybind', additional: true }),\n                ...CommonFields\n            })\n        },\n        {\n            type: 'nbt',\n            match: v => (v === null || v === void 0 ? void 0 : v.nbt) !== undefined,\n            change: v => ({ nbt: '' }),\n            node: (0, core_1.ObjectNode)({\n                nbt: StringNode({ validator: 'nbt_path' }),\n                block: (0, core_1.Opt)(StringNode({ validator: 'vector', params: { dimension: 3, isInteger: true } })),\n                entity: (0, core_1.Opt)(StringNode({ validator: 'entity', params: { amount: 'multiple', type: 'entities' } })),\n                storage: (0, core_1.Opt)(StringNode({ validator: 'resource', params: { pool: '$storage' } })),\n                interpret: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                separator: (0, core_1.Opt)(Reference('text_component')),\n                ...CommonFields\n            })\n        }\n    ], { context: 'text_component_object', choiceContext: 'text_component.object' }), {\n        default: () => ({\n            text: \"\"\n        })\n    }));\n    schemas.register('text_component_list', (0, core_1.Mod)((0, core_1.ListNode)(Reference('text_component')), {\n        default: () => [{\n                text: \"\"\n            }]\n    }));\n}\nexports.initTextComponentSchemas = initTextComponentSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initBiomeSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initBiomeSchemas(schemas, collections) {\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('biome', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        temperature: (0, core_1.NumberNode)(),\n        downfall: (0, core_1.NumberNode)(),\n        precipitation: StringNode({ enum: ['none', 'rain', 'snow'] }),\n        temperature_modifier: (0, core_1.Opt)(StringNode({ enum: ['none', 'frozen'] })),\n        category: StringNode({ enum: 'biome_category' }),\n        creature_spawn_probability: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n        effects: (0, core_1.ObjectNode)({\n            sky_color: (0, core_1.NumberNode)({ color: true }),\n            fog_color: (0, core_1.NumberNode)({ color: true }),\n            water_color: (0, core_1.NumberNode)({ color: true }),\n            water_fog_color: (0, core_1.NumberNode)({ color: true }),\n            grass_color: (0, core_1.Opt)((0, core_1.NumberNode)({ color: true })),\n            foliage_color: (0, core_1.Opt)((0, core_1.NumberNode)({ color: true })),\n            grass_color_modifier: (0, core_1.Opt)(StringNode({ enum: ['none', 'dark_forest', 'swamp'] })),\n            ambient_sound: (0, core_1.Opt)(StringNode()),\n            mood_sound: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                sound: StringNode(),\n                tick_delay: (0, core_1.NumberNode)({ integer: true }),\n                block_search_extent: (0, core_1.NumberNode)({ integer: true }),\n                offset: (0, core_1.NumberNode)()\n            })),\n            additions_sound: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                sound: StringNode(),\n                tick_chance: (0, core_1.NumberNode)({ min: 0, max: 1 })\n            })),\n            music: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                sound: StringNode(),\n                min_delay: (0, core_1.NumberNode)({ integer: true, min: 0 }),\n                max_delay: (0, core_1.NumberNode)({ integer: true, min: 0 }),\n                replace_current_music: (0, core_1.BooleanNode)()\n            })),\n            particle: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                options: (0, core_1.ObjectNode)({\n                    type: StringNode()\n                }),\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n            }))\n        }),\n        spawners: (0, core_1.MapNode)(StringNode({ enum: [\n                'monster',\n                'creature',\n                'ambient',\n                'axolotls',\n                'underground_water_creature',\n                'water_creature',\n                'water_ambient',\n                'misc'\n            ] }), (0, core_1.Mod)((0, core_1.ListNode)((0, core_1.ObjectNode)({\n            type: StringNode({ validator: 'resource', params: { pool: 'entity_type' } }),\n            weight: (0, core_1.NumberNode)({ integer: true }),\n            minCount: (0, core_1.NumberNode)({ integer: true }),\n            maxCount: (0, core_1.NumberNode)({ integer: true })\n        })), {\n            category: () => 'pool',\n            default: () => [{\n                    type: 'minecraft:bat',\n                    weight: 1\n                }]\n        })),\n        spawn_costs: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'entity_type' } }), (0, core_1.Mod)((0, core_1.ObjectNode)({\n            energy_budget: (0, core_1.NumberNode)(),\n            charge: (0, core_1.NumberNode)()\n        }, { category: 'function' }), {\n            default: () => ({\n                energy_budget: 0.12,\n                charge: 1.0\n            })\n        })),\n        carvers: (0, core_1.MapNode)(StringNode({ enum: ['air', 'liquid'] }), (0, core_1.Mod)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_carver' } })), {\n            default: () => ['minecraft:cave']\n        })),\n        features: (0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })), { category: () => 'predicate' }), { maxLength: 11 })\n    }, { context: 'biome' }), {\n        default: () => ({\n            temperature: 0.8,\n            downfall: 0.4,\n            precipitation: 'rain',\n            category: 'plains',\n            effects: {\n                sky_color: 7907327,\n                fog_color: 12638463,\n                water_color: 4159204,\n                water_fog_color: 329011\n            }\n        })\n    }));\n}\nexports.initBiomeSchemas = initBiomeSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initCarverSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"../Common\");\nfunction initCarverSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const CanyonConfig = {\n        vertical_rotation: (0, Common_1.FloatProvider)(),\n        shape: (0, core_1.ObjectNode)({\n            distance_factor: (0, Common_1.FloatProvider)(),\n            thickness: (0, Common_1.FloatProvider)(),\n            width_smoothness: (0, core_1.NumberNode)({ integer: true, min: 0 }),\n            horizontal_radius_factor: (0, Common_1.FloatProvider)(),\n            vertical_radius_default_factor: (0, core_1.NumberNode)(),\n            vertical_radius_center_factor: (0, core_1.NumberNode)()\n        })\n    };\n    const CaveConfig = {\n        horizontal_radius_multiplier: (0, Common_1.FloatProvider)(),\n        vertical_radius_multiplier: (0, Common_1.FloatProvider)(),\n        floor_level: (0, Common_1.FloatProvider)({ min: -1, max: 1 }),\n    };\n    schemas.register('configured_carver', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/carver' } }),\n        config: (0, core_1.ObjectNode)({\n            probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n            y: Reference('height_provider'),\n            yScale: (0, Common_1.FloatProvider)(),\n            lava_level: Reference('vertical_anchor'),\n            debug_settings: (0, core_1.Opt)((0, core_1.ObjectNode)({\n                debug_mode: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                air_state: (0, core_1.Opt)(Reference('block_state')),\n                water_state: (0, core_1.Opt)(Reference('block_state')),\n                lava_state: (0, core_1.Opt)(Reference('block_state')),\n                barrier_state: (0, core_1.Opt)(Reference('block_state'))\n            })),\n            [core_1.Switch]: ['pop', { push: 'type' }],\n            [core_1.Case]: {\n                'minecraft:canyon': CanyonConfig,\n                'minecraft:cave': CaveConfig,\n                'minecraft:nether_cave': CaveConfig\n            },\n        })\n    }, { context: 'carver' }), {\n        default: () => ({\n            type: 'minecraft:cave',\n            config: {\n                probability: 0.1\n            }\n        })\n    }));\n}\nexports.initCarverSchemas = initCarverSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initDecoratorSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"../Common\");\nfunction initDecoratorSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('decorator', (0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/placement_modifier_type' } }),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:block_predicate_filter': {\n                predicate: Reference('block_predicate_worldgen')\n            },\n            'minecraft:carving_mask': {\n                step: StringNode({ enum: 'generation_step' })\n            },\n            'minecraft:rarity_filter': {\n                chance: (0, core_1.NumberNode)({ integer: true, min: 0 })\n            },\n            'minecraft:count': {\n                count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\n            },\n            'minecraft:count_on_every_layer': {\n                count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\n            },\n            'minecraft:noise_threshold_count': {\n                noise_level: (0, core_1.NumberNode)(),\n                below_noise: (0, core_1.NumberNode)({ integer: true }),\n                above_noise: (0, core_1.NumberNode)({ integer: true })\n            },\n            'minecraft:noise_based_count': {\n                noise_to_count_ratio: (0, core_1.NumberNode)({ integer: true }),\n                noise_factor: (0, core_1.NumberNode)(),\n                noise_offset: (0, core_1.Opt)((0, core_1.NumberNode)())\n            },\n            'minecraft:environment_scan': {\n                direction_of_search: StringNode({ enum: ['up', 'down'] }),\n                max_steps: (0, core_1.NumberNode)({ integer: true, min: 1, max: 32 }),\n                target_condition: Reference('block_predicate_worldgen'),\n                allowed_search_condition: (0, core_1.Opt)(Reference('block_predicate_worldgen'))\n            },\n            'minecraft:heightmap': {\n                heightmap: StringNode({ enum: 'heightmap_type' })\n            },\n            'minecraft:height_range': {\n                height: Reference('height_provider')\n            },\n            'minecraft:random_offset': {\n                xz_spread: (0, Common_1.IntProvider)({ min: -16, max: 16 }),\n                y_spread: (0, Common_1.IntProvider)({ min: -16, max: 16 }),\n            },\n            'minecraft:surface_relative_threshold_filter': {\n                heightmap: StringNode({ enum: 'heightmap_type' }),\n                min_inclusive: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                max_inclusive: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n            },\n            'minecraft:surface_water_depth_filter': {\n                max_water_depth: (0, core_1.NumberNode)({ integer: true })\n            }\n        }\n    }, { context: 'decorator', category: 'predicate' }));\n}\nexports.initDecoratorSchemas = initDecoratorSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initProcessorListSchemas = exports.Processors = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initProcessorListSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    exports.Processors = (0, core_1.ChoiceNode)([\n        {\n            type: 'string',\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/processor_list' } }),\n            change: v => undefined\n        },\n        {\n            type: 'object',\n            node: Reference('processor_list'),\n            change: v => ({\n                processors: [{\n                        \"processor_type\": \"minecraft:nop\"\n                    }]\n            })\n        }\n    ]);\n    schemas.register('processor_list', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        processors: (0, core_1.ListNode)(Reference('processor'))\n    }, { context: 'processor_list' }), {\n        default: () => ({\n            processors: [{\n                    processor_type: 'minecraft:rule',\n                    rules: [{\n                            location_predicate: {\n                                predicate_type: 'minecraft:always_true'\n                            },\n                            input_predicate: {\n                                predicate_type: 'minecraft:always_true'\n                            }\n                        }]\n                }]\n        })\n    }));\n    schemas.register('processor', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        processor_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_processor' } }),\n        [core_1.Switch]: [{ push: 'processor_type' }],\n        [core_1.Case]: {\n            'minecraft:block_age': {\n                mossiness: (0, core_1.NumberNode)()\n            },\n            'minecraft:block_ignore': {\n                blocks: (0, core_1.ListNode)(Reference('block_state'))\n            },\n            'minecraft:block_rot': {\n                integrity: (0, core_1.NumberNode)({ min: 0, max: 1 })\n            },\n            'minecraft:gravity': {\n                heightmap: StringNode({ enum: 'heightmap_type' }),\n                offset: (0, core_1.NumberNode)({ integer: true })\n            },\n            'minecraft:protected_blocks': {\n                value: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\n            },\n            'minecraft:rule': {\n                rules: (0, core_1.ListNode)(Reference('processor_rule'))\n            }\n        }\n    }, { category: 'function', context: 'processor' }), {\n        default: () => ({\n            processor_type: 'minecraft:rule',\n            rules: [{\n                    location_predicate: {\n                        predicate_type: 'minecraft:always_true'\n                    },\n                    input_predicate: {\n                        predicate_type: 'minecraft:always_true'\n                    }\n                }]\n        })\n    }));\n    schemas.register('processor_rule', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        position_predicate: (0, core_1.Opt)(Reference('pos_rule_test')),\n        location_predicate: Reference('rule_test'),\n        input_predicate: Reference('rule_test'),\n        output_state: Reference('block_state'),\n        output_nbt: (0, core_1.Opt)(StringNode({ validator: 'nbt', params: { registry: { category: 'minecraft:block' } } }))\n    }, { category: 'predicate', context: 'processor_rule' }), {\n        default: () => ({\n            location_predicate: {\n                predicate_type: 'minecraft:always_true'\n            },\n            input_predicate: {\n                predicate_type: 'minecraft:always_true'\n            }\n        })\n    }));\n    const posTestFields = {\n        min_dist: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 255, integer: true })),\n        max_dist: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 255, integer: true })),\n        min_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n        max_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 }))\n    };\n    schemas.register('pos_rule_test', (0, core_1.ObjectNode)({\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'pos_rule_test' } }),\n        [core_1.Switch]: [{ push: 'predicate_type' }],\n        [core_1.Case]: {\n            'minecraft:axis_aligned_linear_pos': {\n                axis: StringNode({ enum: ['x', 'y', 'z'] }),\n                ...posTestFields\n            },\n            'minecraft:linear_pos': posTestFields\n        }\n    }, { context: 'pos_rule_test', disableSwitchContext: true }));\n    schemas.register('rule_test', (0, core_1.ObjectNode)({\n        predicate_type: StringNode({ validator: 'resource', params: { pool: 'rule_test' } }),\n        [core_1.Switch]: [{ push: 'predicate_type' }],\n        [core_1.Case]: {\n            'minecraft:block_match': {\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } })\n            },\n            'minecraft:blockstate_match': {\n                block_state: Reference('block_state')\n            },\n            'minecraft:random_block_match': {\n                block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n            },\n            'minecraft:random_blockstate_match': {\n                block_state: Reference('block_state'),\n                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n            },\n            'minecraft:tag_match': {\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\n            }\n        }\n    }, { context: 'rule_test', disableSwitchContext: true }));\n}\nexports.initProcessorListSchemas = initProcessorListSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initFeatureSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"../Common\");\nrequire(\"./Decorator\");\nrequire(\"./ProcessorList\");\nconst ProcessorList_1 = require(\"./ProcessorList\");\nfunction initFeatureSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const ConfiguredFeature = (0, core_1.ChoiceNode)([\n        {\n            type: 'string',\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/configured_feature' } })\n        },\n        {\n            type: 'object',\n            node: Reference('configured_feature')\n        }\n    ], { choiceContext: 'feature' });\n    const PlacedFeature = (0, core_1.ChoiceNode)([\n        {\n            type: 'string',\n            node: StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })\n        },\n        {\n            type: 'object',\n            node: Reference('placed_feature')\n        }\n    ], { choiceContext: 'placed_feature' });\n    const RandomPatchConfig = {\n        tries: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 })),\n        xz_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0 })),\n        y_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0 })),\n        feature: PlacedFeature,\n    };\n    const DiskConfig = {\n        state: Reference('block_state'),\n        radius: (0, Common_1.IntProvider)({ min: 0, max: 8 }),\n        half_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4 }),\n        targets: (0, core_1.ListNode)(Reference('block_state'))\n    };\n    const HugeMushroomConfig = {\n        cap_provider: Reference('block_state_provider'),\n        stem_provider: Reference('block_state_provider'),\n        foliage_radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true }))\n    };\n    const TargetBlockState = (0, core_1.ObjectNode)({\n        target: Reference('rule_test'),\n        state: Reference('block_state')\n    });\n    const OreConfig = {\n        size: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\n        discard_chance_on_air_exposure: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n        targets: (0, core_1.ListNode)(TargetBlockState)\n    };\n    const VegetationPatchConfig = {\n        surface: StringNode({ enum: 'cave_surface' }),\n        depth: (0, Common_1.IntProvider)({ min: 1, max: 128 }),\n        vertical_range: (0, core_1.NumberNode)({ integer: true, min: 1, max: 256 }),\n        extra_bottom_block_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n        extra_edge_column_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n        vegetation_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n        xz_radius: (0, Common_1.IntProvider)(),\n        replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\n        ground_state: Reference('block_state_provider'),\n        vegetation_feature: PlacedFeature\n    };\n    schemas.register('configured_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature' } }),\n        config: (0, core_1.ObjectNode)({\n            [core_1.Switch]: ['pop', { push: 'type' }],\n            [core_1.Case]: {\n                'minecraft:bamboo': {\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                },\n                'minecraft:basalt_columns': {\n                    reach: (0, Common_1.IntProvider)({ min: 0, max: 3 }),\n                    height: (0, Common_1.IntProvider)({ min: 1, max: 10 })\n                },\n                'minecraft:block_column': {\n                    direction: StringNode({ enum: ['up', 'down', 'north', 'east', 'south', 'west'] }),\n                    allowed_placement: Reference('block_predicate_worldgen'),\n                    prioritize_tip: (0, core_1.BooleanNode)(),\n                    layers: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                        height: (0, Common_1.IntProvider)({ min: 0 }),\n                        provider: Reference('block_state_provider')\n                    }))\n                },\n                'minecraft:block_pile': {\n                    state_provider: Reference('block_state_provider')\n                },\n                'minecraft:delta_feature': {\n                    contents: Reference('block_state'),\n                    rim: Reference('block_state'),\n                    size: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\n                    rim_size: (0, Common_1.IntProvider)({ min: 0, max: 16 })\n                },\n                'minecraft:disk': DiskConfig,\n                'minecraft:dripstone_cluster': {\n                    floor_to_ceiling_search_range: (0, core_1.NumberNode)({ integer: true, min: 1, max: 512 }),\n                    height: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\n                    radius: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\n                    max_stalagmite_stalactite_height_diff: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\n                    height_deviation: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\n                    dripstone_block_layer_thickness: (0, Common_1.IntProvider)({ min: 0, max: 128 }),\n                    density: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\n                    wetness: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\n                    chance_of_dripstone_column_at_max_distance_from_center: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n                    max_distance_from_edge_affecting_chance_of_dripstone_column: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\n                    max_distance_from_center_affecting_height_bias: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 })\n                },\n                'minecraft:end_gateway': {\n                    exact: (0, core_1.BooleanNode)(),\n                    exit: (0, core_1.Opt)(Reference('block_pos'))\n                },\n                'minecraft:end_spike': {\n                    crystal_invulnerable: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                    crystal_beam_target: (0, core_1.Opt)(Reference('block_pos')),\n                    spikes: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                        centerX: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                        centerZ: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                        radius: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                        height: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                        guarded: (0, core_1.Opt)((0, core_1.BooleanNode)())\n                    }))\n                },\n                'minecraft:fill_layer': {\n                    state: Reference('block_state'),\n                    height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 255 })\n                },\n                'minecraft:flower': RandomPatchConfig,\n                'minecraft:forest_rock': {\n                    state: Reference('block_state')\n                },\n                'minecraft:fossil': {\n                    max_empty_corners_allowed: (0, core_1.NumberNode)({ integer: true, min: 0, max: 7 }),\n                    fossil_structures: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\n                    overlay_structures: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$structure' } })),\n                    fossil_processors: ProcessorList_1.Processors,\n                    overlay_processors: ProcessorList_1.Processors,\n                },\n                'minecraft:geode': {\n                    blocks: (0, core_1.ObjectNode)({\n                        filling_provider: Reference('block_state_provider'),\n                        inner_layer_provider: Reference('block_state_provider'),\n                        alternate_inner_layer_provider: Reference('block_state_provider'),\n                        middle_layer_provider: Reference('block_state_provider'),\n                        outer_layer_provider: Reference('block_state_provider'),\n                        inner_placements: (0, core_1.ListNode)(Reference('block_state')),\n                        cannot_replace: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\n                        invalid_blocks: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\n                    }),\n                    layers: (0, core_1.ObjectNode)({\n                        filling: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\n                        inner_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\n                        middle_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\n                        outer_layer: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0.01, max: 50 })),\n                    }),\n                    crack: (0, core_1.ObjectNode)({\n                        generate_crack_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                        base_crack_size: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 5 })),\n                        crack_point_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 10 })),\n                    }),\n                    noise_multiplier: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                    use_potential_placements_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                    use_alternate_layer0_chance: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                    placements_require_layer0_alternate: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                    outer_wall_distance: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 1, max: 20 })),\n                    distribution_points: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 1, max: 20 })),\n                    point_offset: (0, core_1.Opt)((0, Common_1.IntProvider)({ min: 0, max: 10 })),\n                    min_gen_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                    max_gen_offset: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true })),\n                    invalid_blocks_threshold: (0, core_1.NumberNode)({ integer: true })\n                },\n                'minecraft:glow_lichen': {\n                    search_range: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 1, max: 64, integer: true })),\n                    chance_of_spreading: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                    can_place_on_floor: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                    can_place_on_ceiling: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                    can_place_on_wall: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                    can_be_placed_on: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\n                },\n                'minecraft:huge_brown_mushroom': HugeMushroomConfig,\n                'minecraft:huge_fungus': {\n                    hat_state: Reference('block_state'),\n                    decor_state: Reference('block_state'),\n                    stem_state: Reference('block_state'),\n                    valid_base_block: Reference('block_state'),\n                    planted: (0, core_1.Opt)((0, core_1.BooleanNode)())\n                },\n                'minecraft:huge_red_mushroom': HugeMushroomConfig,\n                'minecraft:ice_patch': DiskConfig,\n                'minecraft:iceberg': {\n                    state: Reference('block_state')\n                },\n                'minecraft:lake': {\n                    fluid: Reference('block_state_provider'),\n                    barrier: Reference('block_state_provider')\n                },\n                'minecraft:large_dripstone': {\n                    floor_to_ceiling_search_range: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1, max: 512 })),\n                    column_radius: (0, Common_1.IntProvider)({ min: 0, max: 60 }),\n                    height_scale: (0, Common_1.FloatProvider)({ min: 0, max: 20 }),\n                    max_column_radius_to_cave_height_ratio: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n                    stalactite_bluntness: (0, Common_1.FloatProvider)({ min: 0.1, max: 10 }),\n                    stalagmite_bluntness: (0, Common_1.FloatProvider)({ min: 0.1, max: 10 }),\n                    wind_speed: (0, Common_1.FloatProvider)({ min: 0, max: 2 }),\n                    min_radius_for_wind: (0, core_1.NumberNode)({ integer: true, min: 0, max: 100 }),\n                    min_bluntness_for_wind: (0, core_1.NumberNode)({ min: 0, max: 5 })\n                },\n                'minecraft:nether_forest_vegetation': {\n                    state_provider: Reference('block_state_provider'),\n                    spread_width: (0, core_1.NumberNode)({ integer: true, min: 1 }),\n                    spread_height: (0, core_1.NumberNode)({ integer: true, min: 1 })\n                },\n                'minecraft:netherrack_replace_blobs': {\n                    state: Reference('block_state'),\n                    target: Reference('block_state'),\n                    radius: (0, Common_1.IntProvider)({ min: 0, max: 12 })\n                },\n                'minecraft:no_bonemeal_flower': RandomPatchConfig,\n                'minecraft:ore': OreConfig,\n                'minecraft:pointed_dripstone': {\n                    chance_of_taller_dripstone: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                    chance_of_directional_spread: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                    chance_of_spread_radius2: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                    chance_of_spread_radius3: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 1 })),\n                },\n                'minecraft:random_patch': RandomPatchConfig,\n                'minecraft:random_boolean_selector': {\n                    feature_false: PlacedFeature,\n                    feature_true: PlacedFeature\n                },\n                'minecraft:random_selector': {\n                    features: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                        chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n                        feature: PlacedFeature\n                    })),\n                    default: PlacedFeature\n                },\n                'minecraft:replace_single_block': {\n                    targets: (0, core_1.ListNode)(TargetBlockState)\n                },\n                'minecraft:root_system': {\n                    required_vertical_space_for_tree: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\n                    root_radius: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\n                    root_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 1, max: 256 }),\n                    root_column_max_height: (0, core_1.NumberNode)({ integer: true, min: 1, max: 4096 }),\n                    hanging_root_radius: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\n                    hanging_roots_vertical_span: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }),\n                    hanging_root_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 0, max: 256 }),\n                    allowed_vertical_water_for_tree: (0, core_1.NumberNode)({ integer: true, min: 1, max: 64 }),\n                    root_replaceable: StringNode({ validator: 'resource', params: { pool: '$tag/block' } }),\n                    root_state_provider: Reference('block_state_provider'),\n                    hanging_root_state_provider: Reference('block_state_provider'),\n                    allowed_tree_position: Reference('block_predicate_worldgen'),\n                    feature: PlacedFeature\n                },\n                'minecraft:scattered_ore': OreConfig,\n                'minecraft:sea_pickle': {\n                    count: (0, Common_1.IntProvider)({ min: 0, max: 256 })\n                },\n                'minecraft:seagrass': {\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                },\n                'minecraft:simple_block': {\n                    to_place: Reference('block_state_provider')\n                },\n                'minecraft:simple_random_selector': {\n                    features: (0, core_1.ListNode)(PlacedFeature)\n                },\n                'minecraft:spring_feature': {\n                    state: Reference('fluid_state'),\n                    rock_count: (0, core_1.NumberNode)({ integer: true }),\n                    hole_count: (0, core_1.NumberNode)({ integer: true }),\n                    requires_block_below: (0, core_1.BooleanNode)(),\n                    valid_blocks: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\n                },\n                'minecraft:tree': {\n                    ignore_vines: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                    force_dirt: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n                    minimum_size: Reference('feature_size'),\n                    dirt_provider: Reference('block_state_provider'),\n                    trunk_provider: Reference('block_state_provider'),\n                    foliage_provider: Reference('block_state_provider'),\n                    trunk_placer: (0, core_1.ObjectNode)({\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/trunk_placer_type' } }),\n                        base_height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 32 }),\n                        height_rand_a: (0, core_1.NumberNode)({ integer: true, min: 0, max: 24 }),\n                        height_rand_b: (0, core_1.NumberNode)({ integer: true, min: 0, max: 24 }),\n                        [core_1.Switch]: [{ push: 'type' }],\n                        [core_1.Case]: {\n                            'minecraft:bending_trunk_placer': {\n                                bend_length: (0, Common_1.IntProvider)({ min: 1, max: 64 }),\n                                min_height_for_leaves: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 1 }))\n                            }\n                        }\n                    }, { context: 'trunk_placer' }),\n                    foliage_placer: (0, core_1.ObjectNode)({\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/foliage_placer_type' } }),\n                        radius: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\n                        offset: (0, Common_1.IntProvider)({ min: 0, max: 16 }),\n                        [core_1.Switch]: [{ push: 'type' }],\n                        [core_1.Case]: {\n                            'minecraft:blob_foliage_placer': {\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\n                            },\n                            'minecraft:bush_foliage_placer': {\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\n                            },\n                            'minecraft:fancy_foliage_placer': {\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\n                            },\n                            'minecraft:jungle_foliage_placer': {\n                                height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })\n                            },\n                            'minecraft:mega_pine_foliage_placer': {\n                                crown_height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\n                            },\n                            'minecraft:pine_foliage_placer': {\n                                height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\n                            },\n                            'minecraft:random_spread_foliage_placer': {\n                                foliage_height: (0, Common_1.IntProvider)({ min: 1, max: 512 }),\n                                leaf_placement_attempts: (0, core_1.NumberNode)({ integer: true, min: 0, max: 256 })\n                            },\n                            'minecraft:spruce_foliage_placer': {\n                                trunk_height: (0, Common_1.IntProvider)({ min: 0, max: 24 })\n                            }\n                        }\n                    }, { context: 'foliage_placer', disableSwitchContext: true }),\n                    decorators: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/tree_decorator_type' } }),\n                        [core_1.Switch]: [{ push: 'type' }],\n                        [core_1.Case]: {\n                            'minecraft:alter_ground': {\n                                provider: Reference('block_state_provider')\n                            },\n                            'minecraft:beehive': {\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                            },\n                            'minecraft:cocoa': {\n                                probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                            }\n                        }\n                    }, { context: 'tree_decorator' }))\n                },\n                'minecraft:twisting_vines': {\n                    spread_width: (0, core_1.NumberNode)({ integer: true, min: 1 }),\n                    spread_height: (0, core_1.NumberNode)({ integer: true, min: 1 }),\n                    max_height: (0, core_1.NumberNode)({ integer: true, min: 1 }),\n                },\n                'minecraft:underwater_magma': {\n                    floor_search_range: (0, core_1.NumberNode)({ integer: true, min: 0, max: 512 }),\n                    placement_radius_around_floor: (0, core_1.NumberNode)({ integer: true, min: 0, max: 64 }),\n                    placement_probability_per_valid_position: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                },\n                'minecraft:vegetation_patch': VegetationPatchConfig,\n                'minecraft:waterlogged_vegetation_patch': VegetationPatchConfig\n            }\n        }, { context: 'feature' })\n    }, { context: 'feature' }), {\n        default: () => ({\n            type: 'minecraft:tree',\n            config: {\n                minimum_size: {\n                    type: 'minecraft:two_layers_feature_size'\n                },\n                trunk_placer: {\n                    type: 'minecraft:straight_trunk_placer',\n                    base_height: 5,\n                    height_rand_a: 2,\n                    height_rand_b: 0\n                },\n                foliage_placer: {\n                    type: 'minecraft:blob_foliage_placer',\n                    radius: 2,\n                    offset: 0,\n                    height: 3\n                }\n            }\n        })\n    }));\n    schemas.register('placed_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        feature: ConfiguredFeature,\n        placement: (0, core_1.ListNode)(Reference('decorator'))\n    }, { context: 'placed_feature' }), {\n        default: () => ({\n            feature: 'minecraft:oak',\n            placement: [\n                {\n                    type: 'minecraft:count',\n                    count: 4\n                },\n                {\n                    type: 'minecraft:in_square'\n                },\n                {\n                    type: 'minecraft:heightmap',\n                    heightmap: 'OCEAN_FLOOR'\n                }\n            ]\n        })\n    }));\n    schemas.register('feature_size', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/feature_size_type' } }),\n        min_clipped_height: (0, core_1.Opt)((0, core_1.NumberNode)({ min: 0, max: 80 })),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:two_layers_feature_size': {\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 81 })),\n                lower_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\n                upper_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }))\n            },\n            'minecraft:three_layers_feature_size': {\n                limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 80 })),\n                upper_limit: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 80 })),\n                lower_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\n                middle_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 })),\n                upper_size: (0, core_1.Opt)((0, core_1.NumberNode)({ integer: true, min: 0, max: 16 }))\n            }\n        }\n    }, { disableSwitchContext: true }), {\n        default: () => ({\n            type: 'minecraft:two_layers_feature_size'\n        })\n    }));\n    const NoiseProvider = {\n        seed: (0, core_1.NumberNode)({ integer: true }),\n        noise: Reference('noise_parameters'),\n        scale: (0, core_1.Mod)((0, core_1.NumberNode)({ min: Number.MIN_VALUE }), { default: () => 1 })\n    };\n    schemas.register('block_state_provider', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/block_state_provider_type' } }),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:dual_noise_provider': {\n                ...NoiseProvider,\n                variety: (0, Common_1.InclusiveRange)({ integer: true, min: 1, max: 64 }),\n                slow_noise: Reference('noise_parameters'),\n                slow_scale: (0, core_1.Mod)((0, core_1.NumberNode)({ min: Number.MIN_VALUE }), { default: () => 1 }),\n                states: (0, core_1.ListNode)(Reference('block_state'))\n            },\n            'minecraft:noise_threshold_provider': {\n                ...NoiseProvider,\n                threshold: (0, core_1.NumberNode)({ min: -1, max: 1 }),\n                high_chance: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n                default_state: Reference('block_state'),\n                low_states: (0, core_1.ListNode)(Reference('block_state')),\n                high_states: (0, core_1.ListNode)(Reference('block_state'))\n            },\n            'minecraft:noise_provider': {\n                ...NoiseProvider,\n                states: (0, core_1.ListNode)(Reference('block_state'))\n            },\n            'minecraft:randomized_int_state_provider': {\n                property: StringNode(),\n                values: (0, Common_1.IntProvider)(),\n                source: Reference('block_state_provider')\n            },\n            'minecraft:rotated_block_provider': {\n                state: Reference('block_state')\n            },\n            'minecraft:simple_state_provider': {\n                state: Reference('block_state')\n            },\n            'minecraft:weighted_state_provider': {\n                entries: (0, core_1.ListNode)((0, core_1.Mod)((0, core_1.ObjectNode)({\n                    weight: (0, core_1.NumberNode)({ integer: true, min: 1 }),\n                    data: Reference('block_state')\n                }), {\n                    default: () => ({\n                        data: {}\n                    })\n                }))\n            }\n        }\n    }, { context: 'block_state_provider' }), {\n        default: () => ({\n            type: 'minecraft:simple_state_provider'\n        })\n    }));\n    const Offset = {\n        offset: (0, core_1.Opt)((0, core_1.ListNode)((0, core_1.NumberNode)({ integer: true, min: -16, max: 16 }), { minLength: 3, maxLength: 3 }))\n    };\n    schemas.register('block_predicate_worldgen', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'block_predicate_type' } }),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:all_of': {\n                predicates: (0, core_1.ListNode)(Reference('block_predicate_worldgen'))\n            },\n            'minecraft:any_of': {\n                predicates: (0, core_1.ListNode)(Reference('block_predicate_worldgen'))\n            },\n            'minecraft:has_sturdy_face': {\n                ...Offset,\n                direction: StringNode({ enum: 'direction' })\n            },\n            'minecraft:inside_world_bounds': {\n                ...Offset,\n            },\n            'minecraft:matching_block_tag': {\n                ...Offset,\n                tag: StringNode({ validator: 'resource', params: { pool: '$tag/block' } })\n            },\n            'minecraft:matching_blocks': {\n                ...Offset,\n                blocks: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'block' } }))\n            },\n            'minecraft:matching_fluids': {\n                ...Offset,\n                fluids: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: 'fluid' } }))\n            },\n            'minecraft:not': {\n                predicate: Reference('block_predicate_worldgen')\n            },\n            'minecraft:would_survive': {\n                ...Offset,\n                state: Reference('block_state')\n            }\n        }\n    }, { context: 'block_predicate' }), {\n        default: () => ({\n            type: 'minecraft:true'\n        })\n    }));\n}\nexports.initFeatureSchemas = initFeatureSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initNoiseSettingsSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Common_1 = require(\"../Common\");\nfunction initNoiseSettingsSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('noise_settings', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        sea_level: (0, core_1.NumberNode)({ integer: true }),\n        disable_mob_generation: (0, core_1.BooleanNode)(),\n        noise_caves_enabled: (0, core_1.BooleanNode)(),\n        noodle_caves_enabled: (0, core_1.BooleanNode)(),\n        aquifers_enabled: (0, core_1.BooleanNode)(),\n        ore_veins_enabled: (0, core_1.BooleanNode)(),\n        legacy_random_source: (0, core_1.BooleanNode)(),\n        default_block: Reference('block_state'),\n        default_fluid: Reference('block_state'),\n        noise: (0, core_1.ObjectNode)({\n            min_y: (0, core_1.NumberNode)({ integer: true, min: -2048, max: 2047 }),\n            height: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\n            size_horizontal: (0, core_1.NumberNode)({ integer: true }),\n            size_vertical: (0, core_1.NumberNode)({ integer: true }),\n            island_noise_override: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            amplified: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            large_biomes: (0, core_1.Opt)((0, core_1.BooleanNode)()),\n            sampling: (0, core_1.ObjectNode)({\n                xz_scale: (0, core_1.NumberNode)(),\n                y_scale: (0, core_1.NumberNode)(),\n                xz_factor: (0, core_1.NumberNode)(),\n                y_factor: (0, core_1.NumberNode)()\n            }),\n            bottom_slide: Reference('noise_slider'),\n            top_slide: Reference('noise_slider'),\n            terrain_shaper: Reference('terrain_shaper')\n        }),\n        surface_rule: Reference('material_rule'),\n        structures: Reference('generator_structures')\n    }, { context: 'noise_settings' }), node => ({\n        default: () => Common_1.DefaultNoiseSettings,\n        validate: (path, value, errors, options) => {\n            var _a, _b, _c, _d;\n            value = node.validate(path, value, errors, options);\n            if (((_a = value === null || value === void 0 ? void 0 : value.noise) === null || _a === void 0 ? void 0 : _a.min_y) + ((_b = value === null || value === void 0 ? void 0 : value.noise) === null || _b === void 0 ? void 0 : _b.height) > 2047) {\n                errors.add(path.push('noise').push('height'), 'error.min_y_plus_height', 2047);\n            }\n            if (((_c = value === null || value === void 0 ? void 0 : value.noise) === null || _c === void 0 ? void 0 : _c.height) % 16 !== 0) {\n                errors.add(path.push('noise').push('height'), 'error.height_multiple', 16);\n            }\n            if (((_d = value === null || value === void 0 ? void 0 : value.noise) === null || _d === void 0 ? void 0 : _d.min_y) % 16 !== 0) {\n                errors.add(path.push('noise').push('min_y'), 'error.min_y_multiple', 16);\n            }\n            return value;\n        }\n    })));\n    schemas.register('noise_slider', (0, core_1.ObjectNode)({\n        target: (0, core_1.NumberNode)(),\n        size: (0, core_1.NumberNode)({ integer: true, min: 0 }),\n        offset: (0, core_1.NumberNode)({ integer: true })\n    }));\n    schemas.register('generator_structures', (0, core_1.ObjectNode)({\n        stronghold: (0, core_1.Opt)((0, core_1.ObjectNode)({\n            distance: (0, core_1.NumberNode)({ integer: true, min: 0, max: 1023 }),\n            spread: (0, core_1.NumberNode)({ integer: true, min: 0, max: 1023 }),\n            count: (0, core_1.NumberNode)({ integer: true, min: 1, max: 4095 })\n        })),\n        structures: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }), (0, core_1.Mod)((0, core_1.ObjectNode)({\n            spacing: (0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }),\n            separation: (0, core_1.Mod)((0, core_1.NumberNode)({ integer: true, min: 0, max: 4096 }), (node) => ({\n                validate: (path, value, errors, options) => {\n                    if (path.pop().push('spacing').get() <= value) {\n                        errors.add(path, 'error.separation_smaller_spacing');\n                    }\n                    return node.validate(path, value, errors, options);\n                }\n            })),\n            salt: (0, core_1.NumberNode)({ integer: true, min: 0 })\n        }, { context: 'generator_structure' }), {\n            default: () => ({\n                spacing: 10,\n                separation: 5,\n                salt: 0\n            })\n        }))\n    }));\n    schemas.register('generator_layer', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        block: StringNode({ validator: 'resource', params: { pool: 'block' } }),\n        height: (0, core_1.NumberNode)({ integer: true, min: 1 })\n    }), {\n        default: () => ({\n            block: 'minecraft:stone',\n            height: 1\n        })\n    }));\n    schemas.register('terrain_shaper', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        offset: Reference('terrain_spline'),\n        factor: Reference('terrain_spline'),\n        jaggedness: Reference('terrain_spline'),\n    }, { context: 'terrain_shaper' }), {\n        default: () => ({\n            offset: 0,\n            factor: 0,\n            jaggedness: 0,\n        })\n    }));\n    schemas.register('terrain_spline', (0, core_1.Mod)((0, core_1.ChoiceNode)([\n        {\n            type: 'number',\n            node: (0, core_1.NumberNode)()\n        },\n        {\n            type: 'object',\n            node: (0, core_1.ObjectNode)({\n                coordinate: (0, core_1.Mod)(StringNode({ enum: ['continents', 'erosion', 'weirdness', 'ridges'] }), { default: () => 'continents' }),\n                points: (0, core_1.ListNode)((0, core_1.ObjectNode)({\n                    location: (0, core_1.NumberNode)(),\n                    derivative: (0, core_1.NumberNode)(),\n                    value: Reference('terrain_spline')\n                }))\n            }, { category: 'function' })\n        }\n    ], { context: 'terrain_spline', choiceContext: 'terrain_spline' }), {\n        default: () => 0\n    }));\n}\nexports.initNoiseSettingsSchemas = initNoiseSettingsSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initStructureFeatureSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initStructureFeatureSchemas(schemas, collections) {\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const templatePoolConfig = {\n        start_pool: StringNode({ validator: 'resource', params: { pool: '$worldgen/template_pool' } }),\n        size: (0, core_1.NumberNode)({ integer: true })\n    };\n    schemas.register('configured_structure_feature', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_feature' } }),\n        config: (0, core_1.ObjectNode)({\n            [core_1.Switch]: ['pop', { push: 'type' }],\n            [core_1.Case]: {\n                'minecraft:bastion_remnant': templatePoolConfig,\n                'minecraft:buried_treasure': {\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                },\n                'minecraft:mineshaft': {\n                    type: StringNode({ enum: ['normal', 'mesa'] }),\n                    probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                },\n                'minecraft:nether_fossil': {\n                    height: Reference('height_provider')\n                },\n                'minecraft:ocean_ruin': {\n                    biome_temp: StringNode({ enum: ['cold', 'warm'] }),\n                    large_probability: (0, core_1.NumberNode)({ min: 0, max: 1 }),\n                    cluster_probability: (0, core_1.NumberNode)({ min: 0, max: 1 })\n                },\n                'minecraft:pillager_outpost': templatePoolConfig,\n                'minecraft:ruined_portal': {\n                    portal_type: StringNode({ enum: ['standard', 'desert', 'jungle', 'mountain', 'nether', 'ocean', 'swamp'] })\n                },\n                'minecraft:shipwreck': {\n                    is_beached: (0, core_1.Opt)((0, core_1.BooleanNode)())\n                },\n                'minecraft:village': templatePoolConfig\n            }\n        }, { context: 'structure_feature', disableSwitchContext: true })\n    }, { context: 'structure_feature' }), {\n        default: () => ({\n            type: 'minecraft:bastion_remnant',\n            config: {\n                start_pool: 'minecraft:bastion/starts',\n                size: 6\n            }\n        })\n    }));\n}\nexports.initStructureFeatureSchemas = initStructureFeatureSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initSurfaceRuleSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initSurfaceRuleSchemas(schemas, collections) {\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    schemas.register('material_rule', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/material_rule' } }),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:block': {\n                result_state: Reference('block_state'),\n            },\n            'minecraft:condition': {\n                if_true: Reference('material_condition'),\n                then_run: Reference('material_rule')\n            },\n            'minecraft:sequence': {\n                sequence: (0, core_1.ListNode)(Reference('material_rule'))\n            }\n        }\n    }, { context: 'material_rule', category: 'pool' }), {\n        default: () => ({\n            type: 'minecraft:block',\n            result_state: {\n                Name: 'minecraft:stone'\n            }\n        })\n    }));\n    schemas.register('material_condition', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        type: StringNode({ validator: 'resource', params: { pool: 'worldgen/material_condition' } }),\n        [core_1.Switch]: [{ push: 'type' }],\n        [core_1.Case]: {\n            'minecraft:biome': {\n                biome_is: (0, core_1.ListNode)(StringNode({ validator: 'resource', params: { pool: '$worldgen/biome' } }))\n            },\n            'minecraft:noise_threshold': {\n                noise: StringNode({ validator: 'resource', params: { pool: '$worldgen/noise' } }),\n                min_threshold: (0, core_1.NumberNode)(),\n                max_threshold: (0, core_1.NumberNode)()\n            },\n            'minecraft:not': {\n                invert: Reference('material_condition')\n            },\n            'minecraft:stone_depth': {\n                offset: (0, core_1.NumberNode)({ integer: true }),\n                surface_type: StringNode({ enum: 'cave_surface' }),\n                add_surface_depth: (0, core_1.BooleanNode)(),\n                add_surface_secondary_depth: (0, core_1.BooleanNode)(),\n            },\n            'minecraft:vertical_gradient': {\n                random_name: StringNode(),\n                true_at_and_below: Reference('vertical_anchor'),\n                false_at_and_above: Reference('vertical_anchor'),\n            },\n            'minecraft:water': {\n                offset: (0, core_1.NumberNode)({ integer: true }),\n                surface_depth_multiplier: (0, core_1.NumberNode)({ integer: true, min: -20, max: 20 }),\n                add_stone_depth: (0, core_1.BooleanNode)()\n            },\n            'minecraft:y_above': {\n                anchor: Reference('vertical_anchor'),\n                surface_depth_multiplier: (0, core_1.NumberNode)({ integer: true, min: -20, max: 20 }),\n                add_stone_depth: (0, core_1.BooleanNode)()\n            }\n        }\n    }, { context: 'material_condition' }), {\n        default: () => ({\n            type: 'minecraft:biome',\n            is_biome: 'minecraft:plains'\n        })\n    }));\n}\nexports.initSurfaceRuleSchemas = initSurfaceRuleSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initTemplatePoolSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nrequire(\"./ProcessorList\");\nconst ProcessorList_1 = require(\"./ProcessorList\");\nfunction initTemplatePoolSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('template_pool', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        name: StringNode(),\n        fallback: StringNode(),\n        elements: (0, core_1.ListNode)(Reference('template_weighted_element'))\n    }, { context: 'template_pool' }), {\n        default: () => ({\n            fallback: 'minecraft:empty',\n            elements: [\n                {\n                    weight: 1,\n                    element: {\n                        element_type: 'minecraft:single_pool_element',\n                        projection: 'rigid',\n                        processors: 'minecraft:empty'\n                    }\n                }\n            ]\n        })\n    }));\n    schemas.register('template_weighted_element', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        weight: (0, core_1.NumberNode)({ integer: true, min: 1, max: 150 }),\n        element: Reference('template_element')\n    }, { category: 'pool' }), {\n        default: () => ({\n            weight: 1,\n            element: {\n                element_type: 'minecraft:single_pool_element',\n                projection: 'rigid',\n                processors: 'minecraft:empty'\n            }\n        })\n    }));\n    schemas.register('template_element', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        element_type: StringNode({ validator: 'resource', params: { pool: 'worldgen/structure_pool_element' } }),\n        [core_1.Switch]: [{ push: 'element_type' }],\n        [core_1.Case]: {\n            'minecraft:feature_pool_element': {\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\n                feature: StringNode({ validator: 'resource', params: { pool: '$worldgen/placed_feature' } })\n            },\n            'minecraft:legacy_single_pool_element': {\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\n                processors: ProcessorList_1.Processors\n            },\n            'minecraft:list_pool_element': {\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\n                elements: (0, core_1.ListNode)(Reference('template_element'))\n            },\n            'minecraft:single_pool_element': {\n                projection: StringNode({ enum: ['rigid', 'terrain_matching'] }),\n                location: StringNode({ validator: 'resource', params: { pool: '$structure' } }),\n                processors: ProcessorList_1.Processors\n            }\n        }\n    }, { context: 'template_element', disableSwitchContext: true }), {\n        default: () => ({\n            element_type: 'minecraft:single_pool_element',\n            projection: 'rigid',\n            processors: 'minecraft:empty'\n        })\n    }));\n}\nexports.initTemplatePoolSchemas = initTemplatePoolSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initWorldgenSchemas = void 0;\nconst Biome_1 = require(\"./Biome\");\nconst Carver_1 = require(\"./Carver\");\nconst Decorator_1 = require(\"./Decorator\");\nconst Feature_1 = require(\"./Feature\");\nconst NoiseSettings_1 = require(\"./NoiseSettings\");\nconst ProcessorList_1 = require(\"./ProcessorList\");\nconst StructureFeature_1 = require(\"./StructureFeature\");\nconst SurfaceRule_1 = require(\"./SurfaceRule\");\nconst TemplatePool_1 = require(\"./TemplatePool\");\nfunction initWorldgenSchemas(schemas, collections) {\n    // `ProcessorList.ts` has exports. It should be initialized first. \n    (0, ProcessorList_1.initProcessorListSchemas)(schemas, collections);\n    (0, Biome_1.initBiomeSchemas)(schemas, collections);\n    (0, Carver_1.initCarverSchemas)(schemas, collections);\n    (0, Decorator_1.initDecoratorSchemas)(schemas, collections);\n    (0, Feature_1.initFeatureSchemas)(schemas, collections);\n    (0, NoiseSettings_1.initNoiseSettingsSchemas)(schemas, collections);\n    (0, StructureFeature_1.initStructureFeatureSchemas)(schemas, collections);\n    (0, SurfaceRule_1.initSurfaceRuleSchemas)(schemas, collections);\n    (0, TemplatePool_1.initTemplatePoolSchemas)(schemas, collections);\n}\nexports.initWorldgenSchemas = initWorldgenSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initWorldSettingsSchemas = void 0;\nconst core_1 = require(\"@mcschema/core\");\nfunction initWorldSettingsSchemas(schemas, collections) {\n    const Reference = core_1.Reference.bind(undefined, schemas);\n    const StringNode = core_1.StringNode.bind(undefined, collections);\n    schemas.register('world_settings', (0, core_1.Mod)((0, core_1.ObjectNode)({\n        generate_features: (0, core_1.BooleanNode)(),\n        bonus_chest: (0, core_1.BooleanNode)(),\n        seed: (0, core_1.NumberNode)({ integer: true }),\n        dimensions: (0, core_1.MapNode)(StringNode({ validator: 'resource', params: { pool: '$dimension' } }), Reference('dimension'))\n    }, { context: 'world_settings' }), {\n        default: () => {\n            const seed = Math.floor(Math.random() * (4294967296)) - 2147483648;\n            return {\n                generate_features: true,\n                bonus_chest: false,\n                seed,\n                dimensions: {\n                    'minecraft:overworld': {\n                        type: 'minecraft:overworld',\n                        generator: {\n                            type: 'minecraft:noise',\n                            seed,\n                            biome_source: {\n                                type: 'minecraft:multi_noise',\n                                preset: \"minecraft:overworld\"\n                            },\n                            settings: 'minecraft:overworld',\n                        }\n                    },\n                    'minecraft:the_nether': {\n                        type: 'minecraft:the_nether',\n                        generator: {\n                            type: 'minecraft:noise',\n                            seed,\n                            biome_source: {\n                                type: 'minecraft:multi_noise',\n                                preset: \"minecraft:nether\"\n                            },\n                            settings: 'minecraft:nether'\n                        }\n                    },\n                    'minecraft:the_end': {\n                        type: \"minecraft:the_end\",\n                        generator: {\n                            type: \"minecraft:noise\",\n                            seed,\n                            biome_source: {\n                                type: \"minecraft:the_end\",\n                                seed\n                            },\n                            settings: \"minecraft:end\"\n                        }\n                    }\n                }\n            };\n        }\n    }));\n}\nexports.initWorldSettingsSchemas = initWorldSettingsSchemas;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initSchemas = void 0;\nconst Advancement_1 = require(\"./Advancement\");\nconst assets_1 = require(\"./assets\");\nconst Common_1 = require(\"./Common\");\nconst Condition_1 = require(\"./Condition\");\nconst Dimension_1 = require(\"./Dimension\");\nconst DimensionType_1 = require(\"./DimensionType\");\nconst ItemModifier_1 = require(\"./ItemModifier\");\nconst LootTable_1 = require(\"./LootTable\");\nconst PackMcmeta_1 = require(\"./PackMcmeta\");\nconst Predicates_1 = require(\"./Predicates\");\nconst Recipe_1 = require(\"./Recipe\");\nconst Tags_1 = require(\"./Tags\");\nconst TextComponent_1 = require(\"./TextComponent\");\nconst worldgen_1 = require(\"./worldgen\");\nconst WorldSettings_1 = require(\"./WorldSettings\");\nfunction initSchemas(schemas, collections) {\n    // `Common.ts` is the only file that has exports. It should be initialized first. \n    (0, Common_1.initCommonSchemas)(schemas, collections);\n    (0, Advancement_1.initAdvancementSchemas)(schemas, collections);\n    (0, assets_1.initAssetsSchemas)(schemas, collections);\n    (0, Condition_1.initConditionSchemas)(schemas, collections);\n    (0, DimensionType_1.initDimensionTypeSchemas)(schemas, collections);\n    (0, Dimension_1.initDimensionSchemas)(schemas, collections);\n    (0, ItemModifier_1.initItemModifierSchemas)(schemas, collections);\n    (0, LootTable_1.initLootTableSchemas)(schemas, collections);\n    (0, PackMcmeta_1.initPackMcmetaSchemas)(schemas, collections);\n    (0, Predicates_1.initPredicatesSchemas)(schemas, collections);\n    (0, Recipe_1.initRecipeSchemas)(schemas, collections);\n    (0, Tags_1.initTagsSchemas)(schemas, collections);\n    (0, TextComponent_1.initTextComponentSchemas)(schemas, collections);\n    (0, worldgen_1.initWorldgenSchemas)(schemas, collections);\n    (0, WorldSettings_1.initWorldSettingsSchemas)(schemas, collections);\n}\nexports.initSchemas = initSchemas;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSchemas = exports.getCollections = exports.lootContext = void 0;\nconst core_1 = require(\"@mcschema/core\");\nconst Collections_1 = require(\"./Collections\");\nconst schemas_1 = require(\"./schemas\");\nexports.lootContext = __importStar(require(\"./LootContext\"));\nfunction getCollections() {\n    const collections = new core_1.CollectionRegistry();\n    (0, Collections_1.initCollections)(collections);\n    return collections;\n}\nexports.getCollections = getCollections;\n/**\n * @param collections The CollectionRegistry for this version. Note that apart from\n * the built-in collections, the client of this module is responsible for futhermore\n * adding the vanilla registries to it: the collection IDs shouldn't contain the\n * namespace (`minecraft:`) part, while the values within the collections should.\n *\n * @example\n * for (const key in VANILLA_REGISTRIES>) {\n *   collections.register(\n *     key.replace(/^minecraft:/, ''),\n *     Object.keys(VANILLA_REGISTRIES[key].entries)\n *   )\n * }\n */\nfunction getSchemas(collections) {\n    const schemas = new core_1.SchemaRegistry();\n    (0, schemas_1.initSchemas)(schemas, collections);\n    return schemas;\n}\nexports.getSchemas = getSchemas;\n"],"names":["Collections","initCollections","collections","Advancement","core_1","require$$0","initAdvancementSchemas","schemas","Reference","StringNode","EntityPredicate","v","_a","_b","path","Model","initModelSchemas","Vec","length","min","max","Texture","BlockDefinition","initBlockDefinitionSchemas","VariantChildren","Font","initFontSchemas","assets","Model_1","BlockDefinition_1","require$$1","Font_1","require$$2","initAssetsSchemas","exports","DefaultStructureSettings","initCommonSchemas","Bounds","integer","ObjectWithType","pool","directType","directPath","directDefault","objectDefault","context","cases","defaultCase","k","provider","choices","keys","config","t","_c","entitySourceNode","conditions","copySourceNode","res","f","node","Condition","Common_1","initConditionSchemas","Dimension","initDimensionSchemas","seed","ClimateParameter","DimensionType","initDimensionTypeSchemas","value","errors","options","ItemModifier","initItemModifierSchemas","LootContext","LootTable","LootContext_1","initLootTableSchemas","functionsAndConditions","compileSwitchNode","contextMap","collectionID","getNode","getAvailableOptions","providedContext","c","tableType","allows","requires","_","conditionIDSwtichNode","type","functionIDSwtichNode","entitySourceSwtichNode","copySourceSwtichNode","weightMod","PackMcmeta","CURRENT_PACK_FORMAT","initPackMcmetaSchemas","_p","Predicates","initPredicatesSchemas","StateChoice","Recipe","initRecipeSchemas","Tags","initTagsSchemas","TagBase","TextComponent","initTextComponentSchemas","getSimpleString","n","s","CommonFields","Biome","initBiomeSchemas","Carver","initCarverSchemas","CanyonConfig","CaveConfig","Decorator","initDecoratorSchemas","ProcessorList","initProcessorListSchemas","posTestFields","Feature","ProcessorList_1","require$$3","initFeatureSchemas","ConfiguredFeature","PlacedFeature","RandomPatchConfig","DiskConfig","HugeMushroomConfig","TargetBlockState","OreConfig","VegetationPatchConfig","NoiseProvider","Offset","NoiseSettings","initNoiseSettingsSchemas","_d","StructureFeature","initStructureFeatureSchemas","templatePoolConfig","SurfaceRule","initSurfaceRuleSchemas","TemplatePool","initTemplatePoolSchemas","worldgen","Biome_1","Carver_1","Decorator_1","Feature_1","NoiseSettings_1","require$$4","require$$5","StructureFeature_1","require$$6","SurfaceRule_1","require$$7","TemplatePool_1","require$$8","initWorldgenSchemas","WorldSettings","initWorldSettingsSchemas","Advancement_1","assets_1","Condition_1","Dimension_1","DimensionType_1","ItemModifier_1","LootTable_1","PackMcmeta_1","Predicates_1","require$$9","Recipe_1","require$$10","Tags_1","require$$11","TextComponent_1","require$$12","worldgen_1","require$$13","WorldSettings_1","require$$14","initSchemas","__createBinding","this","o","m","k2","desc","__setModuleDefault","__importStar","mod","result","lib","getSchemas_1","getCollections_1","lootContext","Collections_1","schemas_1","getCollections","getSchemas"],"mappings":"sZACA,OAAO,eAAeA,GAAS,aAAc,CAAE,MAAO,EAAI,CAAE,EACrCA,GAAA,gBAAG,OAC1B,SAASC,GAAgBC,EAAa,CAClCA,EAAY,SAAS,sBAAuB,CACxC,+BACA,yBACA,0BACA,8BACA,gCACA,6BACA,yBACA,kCACA,4BACA,2BACA,wBACA,+BACA,iCACA,6BACA,0BACA,+BACA,gCACA,uBACA,8BACA,oCACA,+BACA,+BACA,uBACA,6BACA,qBACA,0BACA,yBACA,4CACA,+BACA,0CACA,iCACA,4BACA,gCACA,0BACA,yBACA,6BACA,2BACA,4BACA,wBACA,uBACA,iBACA,4CACA,2BACA,uBACA,uBACA,2BACA,2BACR,CAAK,EACDA,EAAY,SAAS,UAAW,CAC5B,mBACA,aACA,WACA,WACA,cACA,WACA,cACA,iBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,gBACA,WACA,WACA,2BACA,eACA,iBACA,YACA,2BACA,iBACA,mBACA,YACA,wBACA,aACA,kBACA,wBACA,SACR,CAAK,EACDA,EAAY,SAAS,OAAQ,CACzB,WACA,UACA,OACA,QACA,OACA,MACR,CAAK,EACDA,EAAY,SAAS,WAAY,CAC7B,WACA,WACA,YACA,WACR,CAAK,EACDA,EAAY,SAAS,gBAAiB,CAClC,OACA,SACA,gBACA,eACR,CAAK,EACDA,EAAY,SAAS,cAAe,CAChC,eACA,OACA,SACA,eACR,CAAK,EACDA,EAAY,SAAS,iCAAkC,CACnD,gCACA,sCACA,qBACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,UACA,WACA,SACA,QACA,aACA,cACA,WACA,eACA,iBACA,oBACA,QACA,eACA,gBACA,iBACA,oBACA,gBACA,cACA,cACA,cACA,oBACA,cACA,gBACA,cACA,eACA,eACA,aACA,cACR,CAAK,EACDA,EAAY,SAAS,cAAe,CAChC,kBACA,kBACA,iBACA,UACA,WACA,QACA,iBACA,UACA,YACA,WACA,gBACA,aACA,mBACA,gBACA,YACA,aACA,YACA,SACR,CAAK,EACDA,EAAY,SAAS,eAAgB,CACjC,MACA,iBACA,aACA,gBACA,YACA,qBACA,WACA,cACA,OACA,cACA,iBACA,oBACA,SACA,gBACA,cACA,qBACA,eACA,SACA,kBACA,wBACA,OACA,YACA,aACA,WACA,UACA,kBACA,gBACA,aACA,WACA,cACA,aACA,SACA,OACA,OACA,QACA,WACA,YACA,SACA,iBACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,QACA,SACA,gBACA,SACA,MACA,SACA,OACA,WACA,WACA,SACA,OACA,QACA,SACA,QACA,UACA,QACA,QACA,UACA,aACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,kBACA,4BACA,cACA,iBACA,gBACA,kBACR,CAAK,EACDA,EAAY,SAAS,kBAAmB,CACpC,MACA,QACR,CAAK,EACDA,EAAY,SAAS,oBAAqB,CACtC,kBACA,kBACA,oBACA,qBACA,oBACA,mBACA,iBACA,mBACA,+BACA,+BACA,oBACA,iBACR,CAAK,EACDA,EAAY,SAAS,iBAAkB,CACnC,OACA,qBACA,sBACA,kBACA,mBACA,gBACA,aACA,cACA,eACA,gBACA,gBACA,mBACA,kBACA,gBACA,QACA,iBACA,kBACA,eACA,mBACA,gBACA,gBACA,oBACA,mBACA,iBACA,SACA,UACA,gBACA,kBACA,sBACA,yBACA,SACA,eACA,WACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,QACR,CAAK,EACDA,EAAY,SAAS,YAAa,CAC9B,QACA,SACA,UACA,aACA,SACA,OACA,OACA,OACA,aACA,OACA,SACA,OACA,QACA,QACA,MACA,OACR,CAAK,EACDA,EAAY,SAAS,eAAgB,CACjC,QACA,SACR,CAAK,EACDA,EAAY,SAAS,YAAa,CAC9B,OACA,KACA,QACA,OACA,QACA,MACR,CAAK,EACDA,EAAY,SAAS,OAAQ,CACzB,IACA,IACA,GACR,CAAK,EACDA,EAAY,SAAS,mBAAoB,CACrC,wBACA,uBACA,wBACA,uBACA,MACA,OACA,SACA,OACR,CAAK,EACDA,EAAY,SAAS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"}